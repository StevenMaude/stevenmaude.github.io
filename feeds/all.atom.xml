<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>stevenmaude.co.uk</title><link href="http://www.stevenmaude.co.uk/" rel="alternate"></link><link href="http://www.stevenmaude.co.uk/feeds/all.atom.xml" rel="self"></link><id>http://www.stevenmaude.co.uk/</id><updated>2016-09-11T23:47:00+01:00</updated><entry><title>What happens when GitHub decides you're not a human</title><link href="http://www.stevenmaude.co.uk/posts/what-happens-when-github-decides-youre-not-a-human" rel="alternate"></link><updated>2016-09-11T23:47:00+01:00</updated><author><name>Steven Maude</name></author><id>tag:www.stevenmaude.co.uk,2016-09-11:posts/what-happens-when-github-decides-youre-not-a-human</id><summary type="html">&lt;blockquote&gt;
  &lt;p&gt;Human, human, human, human,&lt;br&gt;
     Human, human, human, human,&lt;br&gt;
     Human, human, human, human,&lt;br&gt;
     Human, human, human after all.
  &lt;/p&gt;
  &lt;cite&gt;Daft Punk â€” Human After All&lt;/cite&gt;
&lt;/blockquote&gt;

&lt;p&gt;I logged into GitHub this week and saw an unusual message:&lt;/p&gt;
&lt;p&gt;&lt;img class="article-image" src="http://www.stevenmaude.co.uk/images/2016/GitHub_not_human.png" alt="The GitHub message prompting me that I'm possibly not human."&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;One of our mostly harmless robots seems to think you are not a human.&lt;/p&gt;
&lt;p&gt;Because of that, it's hidden your profile from the public. If you really are
human, please contact support to have your profile reinstated. We promise we
won't require DNA proof of your humanity.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Putting aside the irony of GitHub detecting bots with their own
automated systems, one short email later, it was politely resolved in
ten minutes by GitHub's support team, who decided I was human after
all.&lt;sup id="fnref:1"&gt;&lt;a class="footnote-ref" href="#fn:1" rel="footnote"&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;h2&gt;What might have caused it?&lt;/h2&gt;
&lt;p&gt;Perhaps creating several similar looking repositories (albeit with different
code) in a relatively short space of time. These contain example code to access
&lt;a href="https://github.com/pdftables"&gt;the API&lt;/a&gt; that we offer at work. Maybe it's
because the commits looked similar, maybe because the commit messages or the
commit content contained a URL. Who can say?&lt;/p&gt;
&lt;h2&gt;Why is this not ideal?&lt;/h2&gt;
&lt;p&gt;Despite the quick resolution, the way this situation is handled might be
flawed.&lt;/p&gt;
&lt;p&gt;First, though the warning was omnipresent, large and red, it didn't describe
the full nature of the problem. The phrase "hidden your profile from the
public" to me just implied that GitHub had hidden my profile page.&lt;/p&gt;
&lt;p&gt;Seemingly, I could still do and access everything as normal, albeit with a
warning on every page, so I didn't fully appreciate the consequences.&lt;/p&gt;
&lt;p&gt;From reading around, what apparently happens is that &lt;strong&gt;any repository
that's under your profile becomes a nice 404 error&lt;/strong&gt; to anyone who's not
you. I didn't check this firsthand (because I wasn't under any
impression that anything had really changed with my account).  If this
is true, that might create some issues which I'll discuss later in this
post.&lt;sup id="fnref:2"&gt;&lt;a class="footnote-ref" href="#fn:2" rel="footnote"&gt;2&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;p&gt;Second, they didn't send me any email warning at all, unless it went into my
junk mail. I only noticed because I logged into my account and there was a big
red banner at the top of every screen. What if I didn't log into GitHub at all
for a while?&lt;/p&gt;
&lt;p&gt;Finally, I assume that the process happens instantly when their system
considers you a bot. There's no grace period where you can confirm your
identity, before they hide your profile publically. It just gets hidden
and, what I suspect happens is, the first you know of it is when it has
been hidden.&lt;/p&gt;
&lt;h2&gt;How might this cause problems?&lt;/h2&gt;
&lt;p&gt;Let's say that you have a very high profile project under your GitHub account
that lots of people rely on. Let's also suppose that this is the definitive
installation source.&lt;/p&gt;
&lt;p&gt;At least for Go projects, this may be true: Go developers will often host
projects on GitHub and that's the official source. Now, for whatever reason,
your account gets labelled as a bot, and perhaps all of a sudden, &lt;em&gt;your&lt;/em&gt;
software is unavailable to anyone else, potentially breaking &lt;em&gt;their&lt;/em&gt; software.
If this was a major problem, I'd imagine this would get fixed pretty promptly,
but still, it would be an inconvenience, and a baffling one for anyone
encountering it.&lt;/p&gt;
&lt;p&gt;Again, I'm prepared to be corrected on this. If this isn't how things
work, that's great. Maybe popular accounts, e.g. those with lots of
followers, or owning projects with lots of stars, have some protection
against this before their accounts are tagged in this way?&lt;/p&gt;
&lt;p&gt;If there is a possibility that this could actually happen though, then
if there was some kind of short delay and an email warning before
labelling your account as "not human", at least you'd have a chance to
fix up your account first, without your account temporarily becoming a
Ghost of GitHub Past.&lt;/p&gt;
&lt;h2&gt;What's the relevance to other online services?&lt;/h2&gt;
&lt;p&gt;This kind of situation isn't restricted specifically to GitHub. It does
illustrate features of online services that are ever present, but remain
latent until you encounter them. These are likely some variant of:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;the site owners can modify your account's privileges, disable your
  account, or even delete your account and all its content without
  warning.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;this might happen without any way of you appealing the decision;
  that's entirely down to the policies of the site.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;even if you behave in line with the site's terms and conditions, you
  may inadvertently break "rules" that the site owners don't even
  realise they have in place, but are instead derived by some automated
  machine learning system. In very much the same way that you might have
  experienced: has your bank ever suddenly prevented you from making a
  payment until you confirm the transaction? All of a sudden, you find
  yourself in the midst of some real life version of
  &lt;a href="https://en.wikipedia.org/wiki/Mao_(card_game)"&gt;Mao&lt;/a&gt; where you lose
  out because you don't even know what you did wrong.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;More on GitHub&lt;/h2&gt;
&lt;p&gt;OK, diversion aside, let's go back to speculating about GitHub accounts.
Let's go further than hiding my account for a short time. What if my
GitHub account was disabled entirely either for some period of time, or
even deleted permanently?&lt;/p&gt;
&lt;p&gt;A considerable amount of my work is done via GitHub. Using an
alternative would be a major inconvenience. With my employer, I'd have
to figure out some solution to resolving it, enabling me to contribute
again. That might mean moving to a competitor, or some self-hosted
solution, or that I submit patches instead. But who'd want to deal with
the overhead of working with patches from one developer when everyone
else is capable of just pushing straight to GitHub?&lt;/p&gt;
&lt;p&gt;Even if you're just coding in your free time, this is also a problem if
you want to assist with any of the numerous open source projects that
take contributions directly via GitHub.&lt;/p&gt;
&lt;p&gt;Another side issue if you're not rigorous with backups, you won't have
access to the repositories that you didn't have locally. However, GitHub
do state in their terms that they will attempt to "make a reasonable
effort to provide the affected account owner with a copy of their
account contents upon request".&lt;/p&gt;
&lt;p&gt;GitHub's terms do state you can only have one account. It's less clear
whether having an account disabled precludes you from signing up again.
Nonetheless, they do say that they can "refuse any and all current or
future use of the Service, or any other GitHub service, for any reason
at any time". So it may be that any future accounts you create may well
be subject to being disabled due to your prior history.&lt;/p&gt;
&lt;p&gt;The major online services are ubiquitous and have transformed the way
many people worldwide interact and work. It's worth remembering that
your continued ability to access them is never guaranteed. If you lose
access to services you use for leisure, it may well be frustrating. If
you're relying on them for work, you may find yourself dealing with big
problems that you very quickly need to solve.&lt;/p&gt;
&lt;p&gt;With GitHub, I'm still not sure what my solution would be for work if
GitHub permanently kicked me out from their site. As much as GitHub,
historically at least, do seem to be on the side of developers, and I've
very few complaints about the site,&lt;sup id="fnref:3"&gt;&lt;a class="footnote-ref" href="#fn:3" rel="footnote"&gt;3&lt;/a&gt;&lt;/sup&gt; it's still slightly concerning
that this gives them a position of power.&lt;/p&gt;
&lt;div class="footnote"&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li id="fn:1"&gt;
&lt;p&gt;Incidentally, it's weird thinking that it's more than possible
  that to some listeners these days, Daft Punk may well only be known as
  "that robot band that did some songs with Pharrell", despite having
  been around for more than twenty years.&lt;/p&gt;
&lt;p&gt;If, for whatever reason, you haven't heard the &lt;a href="https://www.youtube.com/watch?v=PXYeARRyDWk&amp;amp;list=PLSdoVPM5Wnne47ib65gVG206M7qp43us-"&gt;Human After
All&lt;/a&gt;
album, I'd go straight to &lt;a href="https://www.youtube.com/watch?v=lVKbF8khsrI&amp;amp;list=PLSdoVPM5WnndV_AXWGXpzUsIw6fN1RQVN"&gt;Alive
2007&lt;/a&gt;
where those tracks work a lot better in context, rather than the
isolation of individually being played out; they're closer to the
realm of DJ tools that work magnificently live.&amp;#160;&lt;a class="footnote-backref" href="#fnref:1" rev="footnote" title="Jump back to footnote 1 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn:2"&gt;
&lt;p&gt;Some other thoughts: I have no idea what happens to open pull
  requests, are they still visible? Can you create new pull requests?
  What happens to organisations where you're the sole member? What
  happens to GitHub pages under your profile? Again, no idea.&amp;#160;&lt;a class="footnote-backref" href="#fnref:2" rev="footnote" title="Jump back to footnote 2 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn:3"&gt;
&lt;p&gt;Out of the main competitors, I've used Bitbucket considerably, and
  prefer GitHub, although Bitbucket is better in that personal private
  repositories don't require you to pay. The little use I've had of
  GitLab I've found very confusing. (Admittedly, that confusion may not
  have been helped by not being in charge of the GitLab group I was
  contributing to, so it was awkward trying to get permissions
  configured.)&amp;#160;&lt;a class="footnote-backref" href="#fnref:3" rev="footnote" title="Jump back to footnote 3 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</summary><category term="GitHub"></category></entry><entry><title>Windows 10 installation impressions</title><link href="http://www.stevenmaude.co.uk/posts/windows-10-installation-impressions" rel="alternate"></link><updated>2016-07-02T23:35:00+01:00</updated><author><name>Steven Maude</name></author><id>tag:www.stevenmaude.co.uk,2016-07-02:posts/windows-10-installation-impressions</id><summary type="html">&lt;p&gt;Windows 10 is only a free upgrade from Windows 7 or 8.1 until the end of
this month&lt;sup id="fnref:1"&gt;&lt;a class="footnote-ref" href="#fn:1" rel="footnote"&gt;1&lt;/a&gt;&lt;/sup&gt;. If you've hesitated so far, you might be a bit unsure as
to whether you should switch a system you're satisfied with for a
potentially less satisfactory one. But, if you want a free upgrade, you
haven't got long left, so you need to decide whether to take it up very
soon.&lt;/p&gt;
&lt;p&gt;Earlier this year, I installed it on one PC, partly to test Traktor out
on a clean install of Windows 10, and partly to claim the free upgrade
on that PC. That went OK. And, as I'm claiming free upgrades on other
PCs that I'm caring for, you might think that, at least, I don't loathe
the new version enough to not switch. From what I've seen, that's true,
though it has a few residual problems, even almost a year after release.&lt;/p&gt;
&lt;p&gt;What I do know reasonably well is the installation process as I've been
through that a few times now, so I'll focus on how that compares with
previous versions.&lt;/p&gt;
&lt;p&gt;Before you start, if you have an existing installation, it's worth
checking in the "Get Windows 10" app whether you have any compatibility
issues. As far as I can tell, there's no separate checker you can run.
If, like me, you disabled that annoying application, you'll want to
re-enable it and see if there are any potential issues from any
applications or hardware you have.&lt;/p&gt;
&lt;h2&gt;Clean installation&lt;/h2&gt;
&lt;p&gt;Clean installation is a lot simpler than when Windows 10 was first
launched, if you're claiming a free upgrade. Since the Threshold release
last year, you can simply enter your existing Windows 7/8 product key,
and that will be activated. No need to do a upgrade over an existing
installation solely to claim a digital entitlement, and then reinstall.&lt;/p&gt;
&lt;p&gt;The installation process is very similar to that of Windows 7 and 8, and
simple enough to navigate. Boot up the installer, select language
options, choose where you want to install the operating system, wait a
few minutes and you should soon have a working Windows install.&lt;/p&gt;
&lt;h3&gt;Drivers&lt;/h3&gt;
&lt;p&gt;In the past, even as recently as Windows 7, installing hardware was a
mess in that you'd often have to trawl badly designed hardware
manufacturer websites for several drivers you'd need to make everything
work. Often, you'd be prompted to check online for drivers, only for
Windows to unhelpfully say "sorry, go and find them yourself"
(polite paraphrasing mine).&lt;/p&gt;
&lt;p&gt;This seems particularly backwards compared to modern Linux installs
where, at least in my limited experience, most hardware works without
much user intervention. In this respect, Windows 10 has caught up&lt;sup id="fnref:2"&gt;&lt;a class="footnote-ref" href="#fn:2" rel="footnote"&gt;2&lt;/a&gt;&lt;/sup&gt;.
For the PCs I've tried Windows 10 on, almost all the hardware has been
correctly detected and the drivers installed.&lt;/p&gt;
&lt;p&gt;Even on a PC near a decade old, long since abandoned by the
manufacturer, it was a particularly pleasant surprise to find that
almost everything had been correctly installed. The main exception I
found was a Native Instruments audio interface, but I realise that's not
common hardware.&lt;/p&gt;
&lt;h2&gt;Updates&lt;/h2&gt;
&lt;p&gt;One of &lt;em&gt;the&lt;/em&gt; major drawbacks of Windows past is the update system. A
fresh install of Windows 7 now requires in excess of two hundred
updates, which greatly extends the time to complete the install. You'll
endure reboot on reboot, until it's done. &lt;em&gt;If&lt;/em&gt; it's done. Unfortunately,
it's also possible to run into failures while installing such an
inordinate number of updates; trying to install as many updates in one
go to minimise rebooting sees some phenomenal memory usage.&lt;/p&gt;
&lt;p&gt;That wasn't helped by there only being a single service pack for Windows
7, released several years ago, so you still need all updates released
since then.&lt;/p&gt;
&lt;p&gt;(While you can slipstream updates into Windows installers, that's not
going to be something that many users bother with.)&lt;/p&gt;
&lt;p&gt;Here, Windows 10 seems a big improvement. Installers available from
Microsoft's site are regularly updated: the one I've used recently is
from April of this year. This means that there shouldn't be many more
updates required for your newly installed system.&lt;/p&gt;
&lt;p&gt;On top of that, they've made the updates cumulative, so you only need
the latest to get all fixes. Furthermore, they're all rolled into a
single update, which means there's very little that a new system needs. &lt;/p&gt;
&lt;p&gt;The downside of this, of course, is that you can't pick and choose what
applies. The past has seen cases where rogue Windows updates can
critically break systems: &lt;a href="http://www.stevenmaude.co.uk/posts/the-case-of-a-windows-7-update-secure-boot-and-a-suspect-motherboard"&gt;recently, in my
experience&lt;/a&gt;. With Windows
10, all you can do is not apply &lt;em&gt;any&lt;/em&gt; subsequent updates whatsoever
until your issue with the updates gets resolved. Relying on the
stability of a house of cards doesn't seem that wise.&lt;/p&gt;
&lt;p&gt;More positively, there is an upside of the cumulative update system.
Previously â€” and I've encountered this firsthand for XP and Windows 7 â€”
as a particular Windows version grows older, Windows Update becomes far
creakier. In recent months, Windows Update has taken the best part of an
hour to check for updates on relatively modern Core i5 machines, and
hours on my ancient Core2Duo PC. If this new method of rolling out
updates avoids this, it will prevent much user frustration as the
operating system gets older, particularly if, as Microsoft claim, this
is the "last version" of Windows.&lt;/p&gt;
&lt;h2&gt;Upgrade install&lt;/h2&gt;
&lt;p&gt;I'm not a huge fan of upgrade installs with Windows. Usually, if a full
installation is warranted, enough time has passed that it's often
worthwhile to do a clean install. In one case I dealt with, I felt it
was worth a try first as reinstalling everything would be a lot of
work&lt;sup id="fnref:3"&gt;&lt;a class="footnote-ref" href="#fn:3" rel="footnote"&gt;3&lt;/a&gt;&lt;/sup&gt;. If all else failed, a clean install was still an available
alternative.&lt;/p&gt;
&lt;p&gt;In fact, the upgrade install went without a problem. Downloading the
installer for reuse is a smart idea if you have several PCs to upgrade.
You can download a USB creator or ISO from Microsoft's site, and run
&lt;code&gt;setup.exe&lt;/code&gt; within your current install to upgrade.&lt;/p&gt;
&lt;p&gt;The whole process didn't take too long either and didn't seem to cause
any problems following it. Microsoft do blatantly ignore your existing
choice of browser and select Edge as the default for you though...
thanks for that.&lt;/p&gt;
&lt;h2&gt;And after installation?&lt;/h2&gt;
&lt;p&gt;Despite it being out almost a year, I'm only really now starting to use
Windows 10 on a regular basis. Where possible, I'd rather hold off if I
have systems that are working well and let others find and report bugs.&lt;/p&gt;
&lt;p&gt;Even from the outset of installation, one noticeable difference to
previous versions of Windows is the number of privacy options there are.
Microsoft are intent on collecting much more data than in previous
versions of Windows. What you should be reading is this page on
&lt;a href="https://technet.microsoft.com/en-us/itpro/windows/manage/configure-windows-telemetry-in-your-organization"&gt;Microsoft's site that details
telemetry&lt;/a&gt;
to tell you exactly what can be disabled.&lt;/p&gt;
&lt;h3&gt;Other problems&lt;/h3&gt;
&lt;p&gt;Several other things I don't like have emerged over the few hours I've
used Windows 10.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Windows 10 sees the return of the Start menu on desktops, which was
   one of the big pain points of Windows 8. What still remains is a
   slightly uneasy mix of normal applications, and universal ones. This
   particularly affects settings. For example, there are two separate
   applications you can use to remove software: that as seen in the
   traditional Control Panel and another that's a universal looking app.
   That just feels indecisive. Likewise, prompts are a mixture of old
   and new. It's not enough to be too distracting, but does feel
   unpolished.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Speaking of the Start menu, there are lots of things that clutter it
   by default. There are more bundled apps (for instance, Twitter,
   Skype) too which some may find useful, but I'd prefer to not have
   them installed by default. OneDrive integration might be desirable
   for some people, but not for me, so it's disabled; the simplest way
   is to go to Group Policy and disable it there.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The default theme is ridiculously bright. When I used it earlier this
   year, I found it felt tiring to work with over long periods. The
   Anniversary Update to be released soon finally promises to
   reintroduce an Aero-like theme, which should address that complaint.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Another problem is that using BitLocker still requires a premium
   version of Windows. I have that, so it doesn't affect me, but I don't
   understand why Microsoft count what is nowadays a fundamental
   security feature as optional. Lots of consumer laptops will only have
   the Home version of Windows which doesn't feature BitLocker.&lt;/p&gt;
&lt;p&gt;Since Windows 8.1, there's another encryption option called
   "Device Encryption". It's also really difficult to find useful
   documentation about this option on Microsoft's site. I did find a
   couple of more informative links on Microsoft's site: &lt;a href="https://technet.microsoft.com/en-us/library/dn306081(v=ws.11).aspx#BKMK_Encryption"&gt;"What's
   New in
   BitLocker"&lt;/a&gt;
   and the &lt;a href="https://technet.microsoft.com/itpro/windows/keep-secure/windows-10-security-guide#information"&gt;Windows 10 Security
   Guide&lt;/a&gt;.
   The requirements are declared in the &lt;a href="https://www.microsoft.com/en-us/windows/windows-10-specifications#sysreqs"&gt;Windows 10
   Specifications&lt;/a&gt;.
   Spoiler alert:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Device encryption requires a PC with InstantGo and TPM 2.0.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;But lots of budget hardware skips on the Trusted Platform Module.
   And, I might be mistaken, that still doesn't cover securing
   removable drives for non-Pro/Enterprise users.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The frequent notification to "install a language to enable typing
   features" gets tiring fast. As far as I can tell, the only way to
   disable it is bowing to its demands. If you just ignore it, it
   decides to reappear at regular intervals. That's a sloppy bit of user
   interface design.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The issue where you need to use &lt;a href="http://www.stevenmaude.co.uk/posts/making-aero-theme-settings-stick-in"&gt;the &lt;code&gt;systempropertiesperformance&lt;/code&gt;
   fix&lt;/a&gt; to
   disable animations and other visual enhancements for non-admin users
   still remains. Otherwise, changes made disappear once you log out.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;But Windows 10 is worth a try&lt;/h2&gt;
&lt;p&gt;That's a long list of complaints, but actually I'm more positive about
Windows 10 than that might suggest. My near-decade old PC with an SSD
boots Windows 10 in around twenty seconds from power on, which feels
brisk. And there's nothing I've seen yet that seems particularly
detrimental in terms of major problems or compatibility issues. Lack of
BitLocker for home users aside, there's not much in the way of major
issues.&lt;/p&gt;
&lt;p&gt;If you've been hesitating, it's worth taking a look. Especially given
that my understanding from reading elsewhere is that the digital
entitlement may well work as follows: once you've claimed the Windows 10
free upgrade entitlement for a PC &lt;strong&gt;before&lt;/strong&gt; the deadline, even if you
revert to your previous version of Windows, the upgrade remains valid
even &lt;strong&gt;after&lt;/strong&gt; the deadline.&lt;/p&gt;
&lt;div class="footnote"&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li id="fn:1"&gt;
&lt;p&gt;That month is July 2016. And it holds unless Microsoft decide that
they need a greater user uptake than they have now, and announce a
deadline extension.&amp;#160;&lt;a class="footnote-backref" href="#fnref:1" rev="footnote" title="Jump back to footnote 1 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn:2"&gt;
&lt;p&gt;I never used Windows 8 enough to know if the improvements in
driver detection were there or not.&amp;#160;&lt;a class="footnote-backref" href="#fnref:2" rev="footnote" title="Jump back to footnote 2 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn:3"&gt;
&lt;p&gt;There was a substantial customised game installation which would
have taken a long time to install the addons all over again. The
previous upgrade strategy from XP to 7 was to copy everything over, then
reinstall whichever extras for that game required it.&amp;#160;&lt;a class="footnote-backref" href="#fnref:3" rev="footnote" title="Jump back to footnote 3 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</summary><category term="Windows"></category><category term="installation"></category></entry><entry><title>Book (and talk) review: Making Music. 74 Creative Strategies for Electronic Music Producers.</title><link href="http://www.stevenmaude.co.uk/posts/book-and-talk-review-making-music-74-creative-strategies-for-electronic-music-producers" rel="alternate"></link><updated>2016-06-26T12:40:00+01:00</updated><author><name>Steven Maude</name></author><id>tag:www.stevenmaude.co.uk,2016-06-26:posts/book-and-talk-review-making-music-74-creative-strategies-for-electronic-music-producers</id><summary type="html">&lt;p&gt;Last week, I went to SÃ³nar for a second time, and the sunshine and music
there feels a hazy and distant dream today. Nonetheless, it reminded me
that I had the bulk of a write-up of one of last year's SÃ³nar+D talks
sat around for a while. It's still relevant, because of the subject
rather than the quality of my writing. So, here it is.&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;At SÃ³nar 2015, I sat in on part of a session discussing how to push past
creative blocks while making electronic music. Dennis DeSantis, who has
written a &lt;a href="https://makingmusic.ableton.com"&gt;book&lt;/a&gt; published by Ableton
on this topic, was involved in a Q&amp;amp;A-style event to discuss it.&lt;/p&gt;
&lt;p&gt;What motivated the book? It was explained that the book came from
documenting his own strategies for solving specific problems in the
process of making electronic music.&lt;/p&gt;
&lt;p&gt;Furthermore, he was insistent that these were his own strategies for
dealing with them, not a definite prescription for what you should do.
Maybe they work, but they might not: you might need to vary them or try
a completely different approach. The idea as much as anything is that,
if you're at a creative dead end, the suggestions may inspire you to mix
up what you're doing, which could reveal a new path.&lt;/p&gt;
&lt;p&gt;Even in the time I attended, the session tackled several questions.
Here's what I took away from the insightful discussions then, much of
which the book covers too. (For whatever reason, despite enjoying the
talk, it took me a year to get around to reading the book, and you can
find my view on it below the discussion of the session.)&lt;/p&gt;
&lt;h2&gt;How to approach that fresh, empty project file?&lt;/h2&gt;
&lt;p&gt;When all you have is nothing, making something from that can be
difficult.&lt;/p&gt;
&lt;p&gt;It was mentioned that, if like Mozart, inspiration strikes &lt;a href="http://www.brainpickings.org/2015/02/24/mozart-on-creativity/"&gt;when you go
for a
walk&lt;/a&gt;,
then following that and seeing where it takes you is a good start. For
those of us not blessed with the talent to both be able to conjure up
wonderful music ideas away from an instrument and transcribe them into
software, we perhaps need to try something else.&lt;/p&gt;
&lt;p&gt;In that case, just doing something â€” &lt;em&gt;anything&lt;/em&gt; â€” is better than
nothing, even, as was cited, just mashing the keyboard.&lt;/p&gt;
&lt;p&gt;Beginning with the elements that electronic music is frequently built
on, for example, drums or bass, can help too. Building some kind of hook
with one element may spark ideas to fill in the blanks with other
elements.&lt;/p&gt;
&lt;p&gt;Developing and refining ideas by splitting production time into distinct
creative phases is another approach. First, keep everything you make,
then spend some time editing that ruthlessly. Remove anything that isn't
great. You can repeat that until you have enough material to start
building up a song.&lt;/p&gt;
&lt;h2&gt;Having too many tools to choose from&lt;/h2&gt;
&lt;p&gt;The problem of choice is one that surely almost everyone making music
with computers has faced at some point. With a plethora of cheap or free
VST plugins available, and settings for each one, it's possible to get
lost shifting faders and turning dials without getting anywhere.&lt;/p&gt;
&lt;p&gt;The advice there then is to deliberately restrict yourself. Just work
with a small number of tools you already have. That said, when your VST
list is large, it can actually be difficult to adhere to this.&lt;/p&gt;
&lt;p&gt;Initially sketching out parts with very basic presets only, even as
simple as General MIDI instruments, was another insightful strategy.
That way, you're solely working on the composition side first and
foremost, then can expand on those sketches.&lt;/p&gt;
&lt;p&gt;The idea that it's only the lack of a perfect plugin to do X, Y or Z
that's blocking your work was dismissed as well. People were making
great electronic music decades ago with much more restrictive tools than
those available to us today. DeSantis pointed out that you can go on
looking for the perfect compression plugin, but no need to look further:
you probably already have it in your collection.&lt;/p&gt;
&lt;h2&gt;Switching software to get out of creative dead ends&lt;/h2&gt;
&lt;p&gt;By contrast to focusing on certain tools you already have, switching
digital audio workstation (DAW) completely was proposed â€” he candidly
admitted that Ableton may not want him to say that. This sounds like a
big leap to make, but enables you to break free of the workflow that's
dictated by the current software you're using.&lt;/p&gt;
&lt;p&gt;By changing your DAW to one which doesn't let you quite work as you used
to, it can help break the patterns you may usually fall into, giving you
fresh inspiration. Taking this idea, it was mentioned that some
producers even move away from software entirely and use hardware
instead.&lt;/p&gt;
&lt;p&gt;This conflicting advice reflected the idea that there are no magic
solutions for sparking creativity, only suggestions. If an approach
doesn't work, you need to try something else until you find something
that works.&lt;/p&gt;
&lt;h2&gt;Actively listening to existing pieces for ideas&lt;/h2&gt;
&lt;p&gt;If you're a DJ, you're probably familiar with the idea that it can
sometimes be more effective to align tracks at a higher level than just
matching beats or, more commonly, bars (where the first beat of a
measure for multiple tracks play together).&lt;/p&gt;
&lt;p&gt;To do this, you can listen to a piece of music and count the number of
bars that constituent each part of its structure. That is, in terms of
verse/chorus, or intro/build-up/drop/breakdown/outro.  With this
knowledge, you could organise playback so that, for example, build-ups
of different tracks play at once, or a build-up coincides with a
breakdown.&lt;/p&gt;
&lt;p&gt;This also gives you a structure as a framework for making a new piece in
that style, too. You might opt for, say, a 16 bar intro and 32 bar build
up because other music in the genre uses that. And this makes the
creative process a little simpler because you already have constraints
on what you need to make a track.&lt;/p&gt;
&lt;p&gt;What DeSantis proposed during the session was going even further:
careful listening to build up a &lt;a href="https://makingmusic.ableton.com/catalog-of-attributes"&gt;catalogue of
attributes&lt;/a&gt;. By
listening to a piece of music in depth and breaking it down into its key
components â€”
&lt;a href="https://makingmusic.ableton.com/active-listening"&gt;elements&lt;/a&gt; like
rhythm, melody, and the sounds used â€” you have a instant starting point
of well-defined restrictions which you can take away and use as the
basis for your own work.&lt;/p&gt;
&lt;p&gt;When taking those elements outside of the context of that piece as
inspiration, you're likely to end up with something that sounds distinct
from the original work, rather than a poor imitation.&lt;/p&gt;
&lt;h2&gt;Knowing when a piece of music is complete&lt;/h2&gt;
&lt;p&gt;On answering this, DeSantis cited an aphorism paraphrased as "art is
never finished, only abandoned" (an internet search tells me this is
often attributed to &lt;a href="https://en.wikiquote.org/wiki/Paul_Val%C3%A9ry"&gt;Paul
ValÃ©ry&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;It's easy to be entangled in tweaking things forever, constantly
returning to a project and slightly adjusting it. At some point, you
should declare it as being "resolved". Resolved might mean declaring it
complete, or something that you're decidedly not going to pursue
further. In line with the above quote, it was noted that a work is never
going to achieve perfection, but it may still be good enough.&lt;/p&gt;
&lt;p&gt;It might be that you feel instinctively that it's done. Otherwise, if
you're at the point of &lt;a href="https://makingmusic.ableton.com/diminishing-returns"&gt;diminishing
returns&lt;/a&gt; â€” spending
lots of time on it without making any real progress â€” then that's an
indicator that your time may be better spent on the next project. If the
current project's really going nowhere, then best to look ahead to the
next.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://makingmusic.ableton.com/arbitrary-constraints"&gt;Deadlines&lt;/a&gt; were
also mentioned as a great incentive for getting things finished: if you
don't finish on time, you don't get the job. Producers who aren't
creating as a career don't have that pressure. But you can still apply
an informal deadline: perhaps aiming to finish a piece by a certain date
or abandoning it otherwise could help you work with some time
restriction in mind.&lt;/p&gt;
&lt;h2&gt;And how's the book?&lt;/h2&gt;
&lt;p&gt;The &lt;a href="https://makingmusic.ableton.com"&gt;sample&lt;/a&gt; on Ableton's site is a
sizeable and representative chunk of the entire book. That alone should
an idea of whether you'd find it worthwhile, without me needing to tell
you.&lt;/p&gt;
&lt;p&gt;There's much to like about the book. The chapters are concise and
breezy, and cover various aspects of the music creation process from
start to finish. Each chapter describes a problem and then explains a
suggested way of solving it: a style that books in other disciplines
could do well to consider. Learning how to accomplish an end goal is
highly motivating, especially when you learn something new in a five
minute read.&lt;/p&gt;
&lt;p&gt;As the book deals with a creative process, I also liked that, as
mentioned above, the ideas are labelled just that, as suggestions only.
There might be conventions that creators use, but there aren't usually
concrete rules in creating something new. Indeed, some of the guidance
offered contradicts that offered in other chapters, representing
different approaches from which you can work.&lt;/p&gt;
&lt;p&gt;It's short enough to read through the entire book from start to end
quickly, picking up a flavour of any ideas that are new to you, and then
placing on a shelf to refer back to as needed. The book doesn't always
delve into those ideas in great detail. However, there's enough there to
put the idea into practice and, importantly, making you aware of the
concept so that you can investigate further elsewhere.&lt;/p&gt;
&lt;p&gt;For a wide ranging audience, this is an easy read. The assumed knowledge
of the reader is minimal, outside of some experience of working with
digital audio workstations.  For my limited background in music, this is
a good thing. That said, I think some of the exercises and ideas
suggested in starting to create something when inspiration is lacking
may well benefit much more competent readers too.&lt;/p&gt;
&lt;p&gt;Having Ableton as book publisher is a boon for marketing the book to one
producer community, but could deter users of other software from
reading. It should be stressed that the ideas covered are software,
hardware and even genre agnostic. There's nothing presented that's
particularly Ableton specific. It would be a pity if fewer people
ignored it because of that; it's an enjoyable and enlightening read for
learners.&lt;/p&gt;</summary><category term="book review"></category><category term="music"></category><category term="production"></category></entry><entry><title>PyPI: releasing frustration</title><link href="http://www.stevenmaude.co.uk/posts/pypi-releasing-frustration" rel="alternate"></link><updated>2016-05-15T12:34:00+01:00</updated><author><name>Steven Maude</name></author><id>tag:www.stevenmaude.co.uk,2016-05-15:posts/pypi-releasing-frustration</id><summary type="html">&lt;p&gt;A while back I wrote an &lt;a href="https://github.com/StevenMaude/bbc-radio-tracklisting-downloader"&gt;automatic tracklisting downloader for BBC radio
shows&lt;/a&gt; in
Python. It's simple to use and it also hooks well into
&lt;a href="https://github.com/get-iplayer/get_iplayer"&gt;get_iplayer&lt;/a&gt; to retrieve or tag
tracklistings when you download a radio show.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/StevenMaude/bbc-radio-tracklisting-downloader/issues/21"&gt;One of the outstanding
issues&lt;/a&gt;
was to actually release it on PyPI â€” the official source for third party Python
packages â€” to make it a bit simpler to install, and to make it easier for
Python users to find. It was already packaged such that it could be installed
using &lt;code&gt;pip&lt;/code&gt;, but this was via GitHub rather than PyPI.&lt;/p&gt;
&lt;p&gt;I remembered I never got round to releasing my package on PyPI and, for some
reason yesterday, thought it would be a good time to see what the process was
like. Maybe it'll only take half an hour, I thought, naively. It actually took
me more like double to triple that time to complete the task.&lt;/p&gt;
&lt;p&gt;Anyway, perhaps documenting this process, along with the numerous errors I
encountered, might help save anyone else running up against the same painful
brick walls that I did, and allow them to share their work with the Python
community.&lt;/p&gt;
&lt;h2&gt;Starting out&lt;/h2&gt;
&lt;p&gt;A good starting point is a
&lt;a href="https://packaging.python.org/en/latest/distributing/#uploading-your-project-to-pypi"&gt;guide&lt;/a&gt;
on the official Python site that's fairly comprehensive.&lt;/p&gt;
&lt;p&gt;The first thing you notice when reading it is that there are lots of options
that are labelled "not recommended" and instead suggest using the
&lt;a href="https://github.com/pypa/twine/"&gt;&lt;code&gt;twine&lt;/code&gt;&lt;/a&gt; package instead. This is because
older versions of Python will happily submit your PyPI credentials in plaintext
when uploading packages. More recent versions are OK, but you're best to check.&lt;/p&gt;
&lt;p&gt;It's clearly a good thing to warn people about this. But it would be much nicer
if they didn't even need such warnings in the first place. (I'm also willing to
bet there's still a non-zero number of people on affected versions of Python
who follow instructions elsewhere without even being aware of sending their
passwords in the clear.)&lt;/p&gt;
&lt;h2&gt;Testing times&lt;/h2&gt;
&lt;p&gt;As the Python packaging guide mentions, there's a &lt;a href="https://testpypi.python.org"&gt;PyPI test
site&lt;/a&gt; that you can use to test out uploading your
package before you do the same on the live site.&lt;/p&gt;
&lt;p&gt;Why's this useful? If you make mistakes in your setup and your package doesn't
install, the only real recourse is to release a new version. Rather than having
to create new versions, you're really best using the test PyPI site first to
make sure everything's OK before you begin.&lt;/p&gt;
&lt;p&gt;The test site looks to be an exact duplicate of the main site albeit with a
different selection of packages. This also means that you have the same
restriction as on the live site: that is, you can't replace an existing
version. You have to bump the version in &lt;code&gt;setup.py&lt;/code&gt; and upload it as a new
version.&lt;/p&gt;
&lt;p&gt;I understand why this is in place for the live site. But, it's a little
frustrating when testing: every change requires you to also increase the
version number. Or, as I more often did, forget to do so, then see the error
message telling you that the version already exists and only then increase the
version number.&lt;/p&gt;
&lt;p&gt;The details in the guide show the structure of the &lt;code&gt;.pypirc&lt;/code&gt; configuration.
However, they don't point out that you can also add the PyPI test site too:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;[distutils]
index-servers=
    pypi
    testpypi

[testpypi]
repository = https://testpypi.python.org/pypi

[pypi]
repository = https://pypi.python.org/pypi
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;You can also add your username and password to each entry too, although you may
not want it lying around in plain text in a configuration file. If you don't
already have accounts on the live and test PyPI sites, this point is a
good time to create them. You won't be able to progress much further otherwise.&lt;/p&gt;
&lt;h3&gt;Building the project distribution&lt;/h3&gt;
&lt;p&gt;Provided you've got &lt;code&gt;setup.py&lt;/code&gt; configured correctly, it's not too difficult to
build for distribution. I used the example from the &lt;a href="https://github.com/pypa/sampleproject"&gt;PyPA sample
project&lt;/a&gt; as a starting point. It's also
sensible to have tagged the commit in your repository that marks the version to
be released.  &lt;/p&gt;
&lt;p&gt;The Python packaging guide linked above is also really helpful in  determining
which arguments you should use with &lt;code&gt;setup.py&lt;/code&gt; to build your package.&lt;/p&gt;
&lt;p&gt;If you're trying to build Python wheels, one hiccup is that you likely need the
&lt;code&gt;wheel&lt;/code&gt; package installed. Otherwise, you may find with a command like:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;python setup.py sdist bdist_wheel
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;you get the error:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;error: invalid command &amp;#39;bdist_wheel&amp;#39;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Registering the project&lt;/h3&gt;
&lt;p&gt;Since &lt;code&gt;twine&lt;/code&gt; is recommended, it seemed sensible to use that. As my
package is for Python 2 only â€” since a dependency doesn't support Python
3 yet â€” it also seemed sensible to do the distribution upload using
Python 2.7.&lt;/p&gt;
&lt;p&gt;The first problem I hit was running &lt;code&gt;twine register dist/* -r testpypi&lt;/code&gt; to
register the project. Note that you need to specify the repository using &lt;code&gt;-r&lt;/code&gt;
if you want to use something other than the default, and the name is taken from
your &lt;code&gt;.pypirc&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;Registering bbc-radio-tracklisting-downloader-0.0.1.tar.gz
UnicodeDecodeError: &amp;#39;ascii&amp;#39; codec can&amp;#39;t decode byte 0xc2 in position 27:
ordinal not in range(128)
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;That's the entirety of the error message from the &lt;code&gt;register&lt;/code&gt; command. There was
nothing to indicate where the problem lay at all, making it very difficult to
start fixing it.&lt;/p&gt;
&lt;p&gt;Switching to Python 3.4 for the upload avoided the Unicode error, but instead
gave me:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;HTTPError: 401 Client Error: You must login to access this feature for
url: https://pypi.python.org/pypi
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;It still could have been a problem with the way I was inputting my password.
I'd tried both typing it at the command line &lt;code&gt;-p PASSWORD&lt;/code&gt; and pasting it into
the prompt which appears if no password is entered. I'd even tried entering it
directly into &lt;code&gt;.pypirc&lt;/code&gt;. It's possible I was just doing something wrong, but,
to me, it implies that &lt;code&gt;twine&lt;/code&gt; wasn't correctly handling one of the characters
in my password.&lt;/p&gt;
&lt;p&gt;At this stage, I gave up trying at this point and went directly to the test
site to register the package so I could at least make some progress and feel
slightly less incompetent. That worked without a hitch.&lt;/p&gt;
&lt;h3&gt;Adding a description&lt;/h3&gt;
&lt;p&gt;On to the next problem. Unfortunately, the PyPI site doesn't support the
display of Markdown READMEs for package descriptions. So, before you actually
upload a package, you should provide the package description in a form that
PyPI can use.&lt;/p&gt;
&lt;p&gt;To me, Markdown always seemed much simpler than reStructuredText (reST), so I
naturally gravitate to writing documentation in it. My README for this project
was no different.&lt;/p&gt;
&lt;p&gt;The main options I was aware of for solving this were:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;specifying a &lt;code&gt;long_description&lt;/code&gt; in your &lt;code&gt;setup.py&lt;/code&gt; which uses reST markup,
whether read in from a file, or included in full in the &lt;code&gt;setup.py&lt;/code&gt; itself, or&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;converting &lt;code&gt;README.md&lt;/code&gt; to a reStructuredText &lt;code&gt;README.rst&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I went for the latter for simplicity.&lt;/p&gt;
&lt;p&gt;Using &lt;code&gt;pandoc&lt;/code&gt;, it's pretty simple to convert an existing Markdown file:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;pandoc --from&lt;span class="o"&gt;=&lt;/span&gt;markdown --to&lt;span class="o"&gt;=&lt;/span&gt;rst --output&lt;span class="o"&gt;=&lt;/span&gt;README.rst README.md
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;On checking the output from &lt;code&gt;pandoc&lt;/code&gt; in an online viewer, everything
looked the same as it did when using Markdown. I also edited the README
slightly to use nicer looking markup for headings than the source Pandoc
generated. &lt;/p&gt;
&lt;h3&gt;Uploading&lt;/h3&gt;
&lt;p&gt;Whew! Back to &lt;code&gt;twine&lt;/code&gt;, and now the project's registered, let's try uploading it
via:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;twine upload dist/* -r testpypi
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;I was still having the same problem as before: the 401 error. Systematically
removing unusual characters from my password until the upload worked fixed
this.  (Note that the PyPI site itself was OK with me logging in with the same
password, this seemed a &lt;code&gt;twine&lt;/code&gt; problem, or something I was just doing wrong.)&lt;/p&gt;
&lt;p&gt;OK. Now it's uploaded, let's check what everything looks like on the test PyPI
site.&lt;/p&gt;
&lt;p&gt;What? Where's the description taken from the README? There's &lt;strong&gt;nothing&lt;/strong&gt; there
at all. The README's not even present as plain text instead of formatted HTML!&lt;/p&gt;
&lt;p&gt;What I then did first was to replace my &lt;code&gt;README.rst&lt;/code&gt; with one borrowed from
someone else's package that I knew displayed correctly on PyPI. Then, I
uploaded a new version of my package to the test site to make sure that I had
everything configured and uploaded correctly.&lt;/p&gt;
&lt;p&gt;Once I'd proved that the problem was with the content of my README, I
somehow instinctively figured that it was the transition markers that
I'd added that were to blame. Again, this was the second time in this
entire process that I had little or no indication of where the problem
actually was.&lt;/p&gt;
&lt;p&gt;Anyway, removing these transition markers, running &lt;code&gt;setup.py&lt;/code&gt; and uploading yet
again &lt;strong&gt;finally&lt;/strong&gt; enabled my README to be correctly displayed as the package
description.&lt;/p&gt;
&lt;h3&gt;Releasing&lt;/h3&gt;
&lt;p&gt;Once that worked, all I had to do was revert the change to the version number
I'd made in &lt;code&gt;setup.py&lt;/code&gt; during testing, and then repeat the whole process on the
real PyPI site. Having negotiated all the obstacles the first time, I was
relieved to find this just worked.&lt;/p&gt;
&lt;p&gt;The end result of all that is that you can finally do &lt;code&gt;pip install
bbc-radio-tracklisting-downloader&lt;/code&gt; instead of having to install it from GitHub.&lt;/p&gt;
&lt;p&gt;Obviously in a process like this, there's going to be a couple of configuration
hoops to jump through, especially the first time you attempt the process. Now
I've been through it, I could actually probably release a new project in the
thirty minutes I originally estimated. &lt;/p&gt;
&lt;p&gt;On the other hand, the number of barriers I faced, along with the cases of
little or no helpful error information was frustrating. Every stumbling block
encountered is a point where someone could decide that they've had finally
enough and just give up. In those cases, it's the community's loss. Developers
who may well have useful packages to contribute may ultimately decide that it's
not worth the trouble to release on PyPI.&lt;/p&gt;</summary><category term="Python"></category><category term="PyPI"></category></entry><entry><title>Taking web page screenshots smartly with Firefox's Developer Tools</title><link href="http://www.stevenmaude.co.uk/posts/taking-web-page-screenshots-smartly-with-firefoxs-developer-tools" rel="alternate"></link><updated>2016-04-20T20:30:00+01:00</updated><author><name>Steven Maude</name></author><id>tag:www.stevenmaude.co.uk,2016-04-20:posts/taking-web-page-screenshots-smartly-with-firefoxs-developer-tools</id><summary type="html">&lt;h2&gt;Snap happy&lt;/h2&gt;
&lt;p&gt;Firefox has a buried feature in its Developer Tools, which is potentially
useful even if you're not a developer. If you've never used the Developer
Tools, just press F12 and you'll see the tools.&lt;/p&gt;
&lt;p&gt;You should see a cog icon towards the upper right of the pane that's just
displayed. The cog is on the same row as the Inspector, Console etc. buttons.&lt;/p&gt;
&lt;p&gt;Clicking this displays a page of options that you can use to customise the
Developer Tools. By ticking "Take a fullpage screenshot" under "Available
Toolbox Buttons", you should see a camera icon appear near the cog icon you
previously clicked. Selecting this gives you a screenshot of the page where you
opened the Developer Tools. The resulting PNG file can be found in your Firefox
Downloads.&lt;/p&gt;
&lt;p&gt;This is a really handy feature. It means that you can take an image of a
scrollable page that's &lt;strong&gt;larger&lt;/strong&gt; than your current window. No need for
screenshotting parts of the page then joining them together by hand.&lt;/p&gt;
&lt;h2&gt;Solving bigger problems&lt;/h2&gt;
&lt;p&gt;But what if you want to enlarge the visible area beyond the size of your
current window, and then take a screenshot?&lt;/p&gt;
&lt;p&gt;Why would this be even useful?&lt;/p&gt;
&lt;p&gt;Let's say that you want a screenshot of a web page displaying a map, where the
map expands to fill your browser window. And let's say that you want the
screenshot to cover a larger area than fits into the largest browser window you
can have on your desktop. Just expanding the window isn't going to give you the
size that you need.  &lt;/p&gt;
&lt;p&gt;How can you do this? If you hover over the toolbox icons in the Developer Tools
panel, near to the cog, you should be able to find the Responsive Design mode.
(It's a very small, dotted rectangle inside a larger, thicker rectangle.) Click
this. Your display will change to have a border and extra options appear. The
selected resolution is shown above the display. Clicking on the resolution
dropdown menu, you can directly type the resolution you want this preview
display to have and press Enter to have it take effect.&lt;/p&gt;
&lt;p&gt;All that's left is to take a screenshot again using the "Take a fullpage
screenshot" option in the Developer Tools toolbox. (Note that Responsive
Design mode has its own screenshot tool, near to the resolution menu,
but this only takes an image of the page visible within the display
window you've just set, i.e.  it's not necessarily the full page if
there would still be scroll bars at that actual display resolution
you've selected.)&lt;/p&gt;</summary><category term="Firefox"></category><category term="screenshot"></category></entry><entry><title>Managing a Bitbucket user's permissions when they've left your team</title><link href="http://www.stevenmaude.co.uk/posts/managing-a-bitbucket-users-permissions-when-theyve-left-your-team" rel="alternate"></link><updated>2016-04-16T01:54:00+01:00</updated><author><name>Steven Maude</name></author><id>tag:www.stevenmaude.co.uk,2016-04-16:posts/managing-a-bitbucket-users-permissions-when-theyve-left-your-team</id><summary type="html">&lt;h2&gt;Kicking the Bitbucket&lt;/h2&gt;
&lt;p&gt;What I noticed this week is that users who'd left a Bitbucket team&lt;sup id="fnref:1"&gt;&lt;a class="footnote-ref" href="#fn:1" rel="footnote"&gt;1&lt;/a&gt;&lt;/sup&gt;
that I'm currently a member of were still billed as having admin access
to several repositories. But, this wasn't by virtue of being a team
member, as we'd removed them.  Instead, this was via their own user
accounts. This seems like the intended behaviour. It's documented
&lt;a href="https://bitbucket.org/site/master/issues/5148/repos-transferred-to-a-team-retain-creator#comment-22446820"&gt;here&lt;/a&gt;:
a user gets admin access to the repository when they create it.&lt;/p&gt;
&lt;p&gt;I tested this by just creating a new repository that was owned by the
team. Checking the access management settings showed that the team was
the owner of the repository, but I had separate admin permissions for
the repository.&lt;/p&gt;
&lt;p&gt;If you've got the required permissions yourself, you can go and clean up
user access on a repository basis, via that same repository access
management settings. A short look around â€” though short does mean very
short, admittedly â€” for suitable bits of the API that would let me purge
old users without having to manually click through each repository
didn't reveal anything. Click, click, click seemed the only way to fix
it. And if you have a lot of repositories, that's a lot of clicking.&lt;/p&gt;
&lt;h2&gt;Stop it (and tidy up)&lt;/h2&gt;
&lt;p&gt;Looking now at this late hour, it seems that I was looking in entirely
the wrong place previously. A much, much quicker route to cleaning up is
to browse to your team's page and select "Manage team". From there, look
at "Plan details". There you can see exactly who has access to your
team's repositories and what access type they have.&lt;/p&gt;
&lt;p&gt;This might be "group". That is, because they're part of a user group in
your team â€” groups are another aspect of access management, you can be
in the team, but maybe you're in a group that maybe doesn't have access
to any team repositories at all.&lt;/p&gt;
&lt;p&gt;A user's access type can also be "repository", i.e. they have access
because their user account has explicitly set permissions on that
repository.&lt;/p&gt;
&lt;p&gt;Clicking "View access" shows you which team repositories they can
access. Next to "View access", there's a cross icon that you can click
to remove &lt;strong&gt;all&lt;/strong&gt; the user's permissions from your team. In just one
click. What happens if you do that for a user that's still on the team?
I can't answer that; maybe it boots them out of the team too? (I wasn't
about to try it.)&lt;/p&gt;
&lt;h2&gt;A potentially money saving tip&lt;/h2&gt;
&lt;p&gt;It's sensible to keep access permissions to your repositories to a
minimum to ensure that only users who need access have it. Of course, it
may be that you have equally sensible reasons to retain access for
ex-team members.&lt;/p&gt;
&lt;p&gt;However, it's also worth considering how Bitbucket counts users in your
team's plan. The definition of users on the Bitbucket plan details page
is:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The number of users (including you) with any level of access to one or
more of your private repos.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;This is whether they are a formal team member or not&lt;/strong&gt;. (Team members
without repository access don't count here.) So, this spring cleaning
might allow you to switch to a cheaper Bitbucket plan for your team too.&lt;/p&gt;
&lt;div class="footnote"&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li id="fn:1"&gt;
&lt;p&gt;Organisation in GitHub parlance.&amp;#160;&lt;a class="footnote-backref" href="#fnref:1" rev="footnote" title="Jump back to footnote 1 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</summary><category term="Bitbucket"></category></entry><entry><title>The case of a Windows 7 update, Secure Boot and a suspect motherboard</title><link href="http://www.stevenmaude.co.uk/posts/the-case-of-a-windows-7-update-secure-boot-and-a-suspect-motherboard" rel="alternate"></link><updated>2016-05-20T00:12:00+01:00</updated><author><name>Steven Maude</name></author><id>tag:www.stevenmaude.co.uk,2016-04-12:posts/the-case-of-a-windows-7-update-secure-boot-and-a-suspect-motherboard</id><summary type="html">&lt;p&gt;Because, obviously, I have nothing I'd rather do than try to fathom how Secure
Boot works on a Monday evening, I'm writing this up. &lt;/p&gt;
&lt;p&gt;Maybe you're experiencing this problem right now. Maybe you're not, but you're
intrigued as to how I go about diagnosing computer problems.&lt;/p&gt;
&lt;h2&gt;A stubborn PC&lt;/h2&gt;
&lt;p&gt;I maintain a PC that has Windows 7 installed (due to be upgraded to Windows 10)
and, yesterday evening, installed several optional updates.&lt;sup id="fnref:1"&gt;&lt;a class="footnote-ref" href="#fn:1" rel="footnote"&gt;1&lt;/a&gt;&lt;/sup&gt; Nothing unusual
there.&lt;/p&gt;
&lt;p&gt;A day later, an owner of the machine restarted it. Except, well, the PC
refused.&lt;/p&gt;
&lt;p&gt;Instead it said this:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The system found unauthorized changes on the firmware, operating system or
UEFI drivers.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Hmm. That's certainly not good since it's related to &lt;a href="https://technet.microsoft.com/en-GB/library/hh824987.aspx"&gt;Secure
Boot&lt;/a&gt;'s check of
boot integrity. Warily, I disabled Secure Boot in the BIOS to get the machine
to boot Windows, and checked the System Event Log.&lt;/p&gt;
&lt;p&gt;Looking around the log, it turns out that the last time that the machine had
previously successfully started was just before I installed the updates, which
is consistent with what had happened. As the PC was fine until that point, it
ruled out anything malicious, and pointed to the update as being a likely
candidate.&lt;/p&gt;
&lt;p&gt;Having looked through the list of recently installed updates, most of them
seemed fairly routine, except &lt;a href="https://support.microsoft.com/en-gb/kb/3133977"&gt;the KB3133977 update for a Bitlocker
issue&lt;/a&gt;. What stood out were the
changes to Windows Boot Manager files &lt;code&gt;Bootmgr.efi&lt;/code&gt; and &lt;code&gt;Bootmgfw.efi&lt;/code&gt;, which
also suggested the update was at fault.&lt;/p&gt;
&lt;h2&gt;ASUSpect?&lt;/h2&gt;
&lt;p&gt;Searching around led me to several recent links, as I mentioned in comments on
this &lt;a href="https://superuser.com/questions/1054790/system-found-unauthorized-changes-on-the-firmware"&gt;SuperUser
question&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;In those posts, Windows users were reporting the same issue: the BIOS
complaining that there was an unauthorised change. This being a relatively new
issue isn't surprising as the update was only released on March 14th, 2016.&lt;/p&gt;
&lt;p&gt;ASUS being the motherboard manufacturer seems to be common to those
experiencing the problem. It seems to affect different models; here it's a
H87-PRO. Even then it's unclear what the root cause is:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;maybe ASUS motherboards are the only ones that allow you to enable Secure
Boot with Windows 7?&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;maybe there's something unusual with the signing process of this update that
only affected ASUS motherboards?&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;or maybe it's just a coincidence? (But, it's odd that it's a common link in
several cases. You'd think if users with other motherboards would have been
affected, they'd have mentioned it too.)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;As linked above, Microsoft's site suggests Secure Boot is supported on Windows
8 and up, and I can't find any documentation to suggest Secure Boot should work
on Windows 7. It's possible that this is just behaviour out of specification
that didn't cause any problem until now.&lt;/p&gt;
&lt;div class="admonition article-edit"&gt;
&lt;p&gt;Edit 2016-05-15: It turns out that it was a bad configuration on the
part of ASUS as documented by their
&lt;a href="https://www.asus.com/support/faq/1016356/"&gt;FAQ&lt;/a&gt;. Judging from the
news stories published around 4th May 2016 and onwards, that note
has only been released by ASUS this month. Pretty slow response,
really, seeing as this problem's been known for several weeks. Their
fix is one of those already suggested here: disable Secure Boot.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;(It's a while ago since I installed the PC, but I guess that I originally must
have tried turning on Secure Boot during installation and, since the PC booted
without a problem, left it enabled.)&lt;/p&gt;
&lt;h2&gt;What to do?&lt;/h2&gt;
&lt;p&gt;Other posts I'd read indicated that removing KB3133977 didn't solve this.
Perhaps there are EFI changes that don't get reverted when you uninstall the
update? Who knows?&lt;/p&gt;
&lt;p&gt;However, restoring a previous system backup fixes the issue. You could then
leave everything as is, but have to make sure that you don't install this
update (hiding it would work). This is inconvenient then, but fine provided you
have regular backups.&lt;/p&gt;
&lt;p&gt;Oh, but the update might actually fix a problem you're experiencing with
Bitlocker. In which case, you're going to have to install it regardless then,
aren't you?&lt;/p&gt;
&lt;p&gt;Another solution is to disable Secure Boot in the BIOS. That's not a perfect
solution though, especially if you're booting other operating systems that work
with Secure Boot.&lt;/p&gt;
&lt;p&gt;It's always possible, but unlikely, that Microsoft could reissue the update and
enabling the Secure Boot option might be possible again.&lt;/p&gt;
&lt;p&gt;None of that explains completely what happened, but that's at least enough to
hopefully stop you panicking and make your Windows install accessible, if
you've been affected.&lt;/p&gt;
&lt;p&gt;What fun will today's later batch of updates brings, I wonder?&lt;/p&gt;
&lt;div class="admonition article-edit"&gt;
&lt;p&gt;Edit 2016-05-20: Marc-Andre Renaud kindly emailed me to share his
experience:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Your hunch about deleting keys while booting in UEFI mode possibly
fixing this was correct. I deleted the keys on my ASUS Sabertooth
z97 motherboard and was able to boot.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;h2&gt;One more thing&lt;/h2&gt;
&lt;p&gt;Incidentally, I wondered what happens if you disable Secure Boot, then do an
in-place upgrade of Windows in this situation, where we can't enable Secure
Boot? Can you later enable it?&lt;/p&gt;
&lt;p&gt;My hunch is that you should be able to, provided your operating system was
installed when your BIOS was in UEFI mode. With the ASUS motherboard I was
looking at, if you were doing an in-place upgrade in this particularly strange
case, I think you'd need to clear the Secure Boot keys to disable Secure Boot
while allowing UEFI (otherwise you wouldn't be able to boot Windows 7).&lt;/p&gt;
&lt;p&gt;Once the upgrade's complete, I'd then expect I could go back to the BIOS and
install the default Secure Boot keys, which should let you set Secure Boot
again.&lt;/p&gt;
&lt;div class="footnote"&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li id="fn:1"&gt;
&lt;p&gt;Previously, I had recommended updates set to automatically install, but
unfortunately it's now necessary to make sure you don't &lt;a href="https://blogs.windows.com/windowsexperience/2015/10/29/making-it-easier-to-upgrade-to-windows-10/"&gt;inadvertently install
Windows 10&lt;/a&gt;.&amp;#160;&lt;a class="footnote-backref" href="#fnref:1" rev="footnote" title="Jump back to footnote 1 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</summary><category term="Windows"></category><category term="Secure Boot"></category></entry><entry><title>Firefox keyword searches, and how to fix adding them</title><link href="http://www.stevenmaude.co.uk/posts/firefox-keyword-searches-and-how-to-fix-adding-them" rel="alternate"></link><updated>2016-04-03T17:00:00+01:00</updated><author><name>Steven Maude</name></author><id>tag:www.stevenmaude.co.uk,2016-04-03:posts/firefox-keyword-searches-and-how-to-fix-adding-them</id><summary type="html">&lt;h2&gt;What are keyword searches?&lt;/h2&gt;
&lt;p&gt;Keyword searches, or quick searches, are really handy when browsing. If
you think of something that you want to search for, they remove the
extra step of first navigating to the site and selecting the search box. &lt;/p&gt;
&lt;p&gt;Instead, you can just directly enter your query into your address bar,
preceded by some keyword. For instance, if I look up "Ubuntu" on
&lt;a href="https://duckduckgo.com"&gt;DuckDuckGo&lt;/a&gt;, I can just hit Ctrl+L to access
the address bar, type &lt;code&gt;d Ubuntu&lt;/code&gt; and hit enter, to directly access the
page of search results.&lt;/p&gt;
&lt;h2&gt;How keyword searches save time&lt;/h2&gt;
&lt;p&gt;This might not seem like a big time saving, but when you consider that
you have to repeat the same process for every site you search on, it
soon adds up. It's a feature you can use not only with traditional
search engines, but with most sites that have a search box. One example
is YouTube, I'll often â€” maybe &lt;strong&gt;too&lt;/strong&gt; often â€” type &lt;code&gt;yt Yet another timewasting
distraction&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;Creating and using custom keyword searches in Firefox&lt;/h2&gt;
&lt;p&gt;This is really simple to do. You're really just adding a bookmark, but
one that refers to whatever URL the search box will send you to, not the
page itself.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Right click a search box on a webpage.&lt;/li&gt;
&lt;li&gt;Select "Add a Keyword for this Search..."&lt;/li&gt;
&lt;li&gt;In the dialogue that opens, enter a keyword and the search URL is
   then added to your bookmarks with a placeholder for a query.&lt;/li&gt;
&lt;li&gt;When you next type that keyword followed by a search query into the
   address bar, the bookmark gets loaded with your query automatically inserted
   into the URL.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;These keyword searches are normal bookmarks; you can edit them like any
other bookmark. The only difference is that they contain the &lt;code&gt;%s&lt;/code&gt;
&lt;a href="https://en.wikipedia.org/wiki/Printf_format_string"&gt;placeholder&lt;/a&gt; in the
URL. When you carry out a keyword search, the term following the keyword
replaces the &lt;code&gt;%s&lt;/code&gt; in the bookmark.&lt;/p&gt;
&lt;p&gt;If you're browsing through your bookmarks in the Library, you'll only
see "Name", "Location" and "Tags", but if you click "More", you'll see
(and can change) the keyword you've set too. &lt;/p&gt;
&lt;p&gt;(This all works because, as you've probably noticed, using a search
option on a site usually sends you to a URL that contains the search
term. Hopefully you can see that if you construct the URL without even
visiting the site first, that this should still work. That said, this
assumes that the site uses GET requests where the query is contained in
the URL itself.)&lt;/p&gt;
&lt;h2&gt;But my keyword searches aren't being added?&lt;/h2&gt;
&lt;p&gt;As I find them so useful, I sorely missed it when recently, for whatever
reason, Firefox decided that it wouldn't add them any more.&lt;/p&gt;
&lt;p&gt;The bookmark would get created, but the keyword I added didn't get
saved. Even if I manually edited the bookmark, I could enter a keyword
but on navigating away to another bookmark and back again, the keyword
would be lost again.&lt;/p&gt;
&lt;p&gt;The simple fix was just to exit Firefox, locate &lt;code&gt;places.sqlite&lt;/code&gt; inside
the Firefox profile directory,&lt;sup id="fnref:1"&gt;&lt;a class="footnote-ref" href="#fn:1" rel="footnote"&gt;1&lt;/a&gt;&lt;/sup&gt; rename &lt;code&gt;places.sqlite&lt;/code&gt;, and let the
file be rebuilt on the next restart (as documented in &lt;a href="https://support.mozilla.org/en-US/kb/cant-add-change-or-save-bookmarks"&gt;Mozilla's support
pages&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;The documentation states that you lose history, but any bookmarks are
rebuilt from a backup. Once you're happy everything's OK, you can delete
the old &lt;code&gt;places.sqlite&lt;/code&gt;. After that, new keyword searches were added
without a problem.&lt;/p&gt;
&lt;div class="footnote"&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li id="fn:1"&gt;
&lt;p&gt;Its location depends on &lt;a href="https://support.mozilla.org/en-US/kb/profiles-where-firefox-stores-user-data"&gt;your operating system&lt;/a&gt;.
For me, on Linux, it was in the hidden &lt;code&gt;~/.mozilla/firefox&lt;/code&gt;. On
Windows, it'll be in &lt;code&gt;%APPDATA%\Mozilla\Firefox\Profiles\&lt;/code&gt;. Make sure
that you're in the correct profile directory, if you have multiple
Firefox profiles.&amp;#160;&lt;a class="footnote-backref" href="#fnref:1" rev="footnote" title="Jump back to footnote 1 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</summary><category term="Firefox"></category><category term="keyword search"></category><category term="quick search"></category></entry><entry><title>Answers to some Windows 10 activation questions</title><link href="http://www.stevenmaude.co.uk/posts/answers-to-some-windows-10-activation-questions" rel="alternate"></link><updated>2016-01-12T22:23:00+00:00</updated><author><name>Steven Maude</name></author><id>tag:www.stevenmaude.co.uk,2016-01-12:posts/answers-to-some-windows-10-activation-questions</id><summary type="html">&lt;p&gt;With a Windows 10 1511 Threshold 2 ISO that I downloaded (using the
&lt;a href="http://www.stevenmaude.co.uk/posts/getting-an-official-windows-10-disk-image"&gt;source I've previously
described&lt;/a&gt;),
I was recently testing out Windows 10.&lt;/p&gt;
&lt;p&gt;The Threshold 2 release was the first major release of Windows 10 since
launch and was made available in November 2015. Previously, the route to
claiming the free Windows 10 upgrade from an existing version of Windows
was to do an in-place upgrade from a current install. The Threshold 2
release changes this so that you can enter a Windows 7 or 8 product key
on a clean install of Windows 10 and successfully activate it.&lt;/p&gt;
&lt;p&gt;But I still had a lot of questions about how the activation process
worked and, probably because Threshold 2 is still fairly new, I couldn't
find much to tell me how this was actually going to work out. Here's
what I learned.&lt;/p&gt;
&lt;h2&gt;What happens if you clean install Windows 10 on a PC with an embedded Windows licence?&lt;/h2&gt;
&lt;p&gt;These days, Windows licences for mass produced consumer systems are
usually included in the BIOS itself, rather than printed on a sticker.&lt;/p&gt;
&lt;p&gt;What the Windows 10 install does is automatically installs and activates
the corresponding Windows 10 version if your hardware has an embedded
licence. (Pro if your laptop had a Win 7 Pro/Ultimate or Win 8 Pro
licence, or Home if you had a Win 7/8 Home licence.)&lt;/p&gt;
&lt;p&gt;I suspect that this is still counted as part of the free upgrade
entitlement rather than offered in perpetuity, so won't be an option
once Microsoft's free upgrade offer expires in July 2016. You'll
probably have to pay for an upgrade then.&lt;/p&gt;
&lt;h2&gt;Can you use a Windows 8/8.1 Pro Pack key to claim a Windows 10 Pro upgrade?&lt;/h2&gt;
&lt;p&gt;Yes. You can go to "change product key" and try entering your key, but
you'll probably see the error &lt;code&gt;0xc004f210&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;This is because you're on Home, not Pro, so the key's not valid for that
version of Windows.&lt;/p&gt;
&lt;p&gt;What works instead is to use the &lt;a href="https://answers.microsoft.com/en-us/windows/forum/windows_10-windows_install/windows-10-pro-becomes-home-after-reinstallation/f1d7d4e5-cdf6-4fd7-b0e7-f87084b73df8"&gt;generic Pro
key&lt;/a&gt;
which will then install the Pro upgrade. Your Windows install will then
show as not being activated as it only had a Home licence.&lt;/p&gt;
&lt;p&gt;Now, entering that Pro Pack key should activate without any problem, I
think, provided that it was previously used on the same hardware.&lt;/p&gt;
&lt;p&gt;Clarifying this with how this worked for me might help explain this
process if it's still somewhat unclear. My laptop had a Windows 8 Home
licence which got upgraded to Windows 10 Home automatically on install.
Then, I changed the product key to the generic Pro key. Following the
Pro upgrade, the Windows 8 Pro Pack key that I'd previously used on the
same laptop activated Windows 10 Pro.&lt;/p&gt;
&lt;h2&gt;Can you clean install Windows 10 Pro on a laptop which has an embedded Home licence?&lt;/h2&gt;
&lt;p&gt;Once you've activated Windows 10, you get a digital entitlement. Any
product key you first used to activate is no longer needed: in future,
the Windows activation servers just check your hardware and see that you
have a valid licence.&lt;/p&gt;
&lt;p&gt;The issue here is that â€” &lt;strong&gt;even if your hardware has a entitlement for
the Pro version&lt;/strong&gt; â€” if the hardware has a key for a Home version, that
will be recognised on install and you'll end up with a Home version
install.  You'd then have to enter the generic Pro key and hopefully
your PC should activate without a problem then, since it should have the
digital entitlement.&lt;/p&gt;
&lt;p&gt;This is inconvenient: it does mean you don't get a clean Pro install,
but one that's upgraded from Home to Pro (though in practice there's
probably little difference between these two routes).&lt;/p&gt;
&lt;p&gt;I haven't tested this, but as far as I can tell, the solution is to
&lt;a href="https://technet.microsoft.com/en-us/library/hh824952.aspx"&gt;modify the installer disk
image&lt;/a&gt; with a
text file that contains a product key. If you use the generic Pro key,
you should get the Pro version installed.&lt;/p&gt;
&lt;p&gt;From there, you could enter your Windows 7/8 product key as described
above or, if reinstalling, the digital entitlement should allow you to
activate without entering any product key.&lt;/p&gt;
&lt;h2&gt;First impressions of Windows 10&lt;/h2&gt;
&lt;p&gt;So far, I've noticed that the start menu is an improvement on Windows 8,
but not as good as the one in Windows 7, the default theme is awful to
look at compared with Windows 7's Aero â€” it's far too white and bright,
with very little contrast in Explorer and Control Panel windows â€” and
that there are lots of telemetry tracking and unwanted bundled software
(e.g. OneDrive) to remove. There is a &lt;a href="https://technet.microsoft.com/en-us/library/mt577208%28v=vs.85%29.aspx"&gt;Microsoft guide on how to do
so&lt;/a&gt;.
Set aside some time. It's a lengthy read.&lt;/p&gt;
&lt;p&gt;Activation confusion aside, Windows 10 installed without a problem. The
installation process has been streamlined to require very little
interaction beyond picking install language. Another pleasant surprise
was that every piece of built-in laptop hardware had drivers installed
automatically which saves a lot of delving into badly designed
manufacturer websites to retrieve them. Even on Windows 7, a clean
install would usually result in a lot of small pieces of hardware having
missing drivers. And, in the brief testing I've done running Traktor,
Windows 10 seemed stable enough.&lt;/p&gt;</summary><category term="Windows"></category><category term="activation"></category></entry><entry><title>Using Garmin Forerunner watches with Linux</title><link href="http://www.stevenmaude.co.uk/posts/using-garmin-forerunner-watches-with-linux" rel="alternate"></link><updated>2015-12-30T23:30:00+00:00</updated><author><name>Steven Maude</name></author><id>tag:www.stevenmaude.co.uk,2015-12-30:posts/using-garmin-forerunner-watches-with-linux</id><summary type="html">&lt;div class="admonition article-edit"&gt;
&lt;p&gt;Edit September 2016: What I didn't mention here was how you could
get EPO data when on Linux. This can help reduce the time it takes
for your watch to get a GPS signal lock. There's a helpful
&lt;a href="https://www.kluenter.de/garmin-ephemeris-files-and-linux/"&gt;blog post&lt;/a&gt;
that gives a lot of the details. There's a
&lt;a href="https://github.com/scrapper/postrunner/"&gt;Ruby utility&lt;/a&gt; that manages
FIT files and features an option to collect the EPO data from
Garmin's servers. Alternatively, I also wrote a &lt;a href="https://github.com/StevenMaude/armstrong"&gt;Go
program&lt;/a&gt; (which
just compiles to a single binary rather than needing lots of
dependencies) to collect this data which I've been using on Linux;
you should be able to compile it easily to work on OS X or Windows.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;I'm now the owner of a Garmin GPS watch. When I was looking at GPS
watches, I couldn't find a huge amount of information on using them with
Linux. This post concerns the Forerunner 15 (FR15) particularly, but
think may well apply to several others in that range that function as
USB storage devices, with the usual "your mileage may vary" caveats.&lt;/p&gt;
&lt;h2&gt;Can you use it with Linux?&lt;/h2&gt;
&lt;p&gt;Yes, to some extent. Though you won't be able to use all the fancy
display features on Garmin's site. That said, I'm not bothered about
that and would actually prefer to keep my data offline, especially with
the number of website data breaches there have been recently.&lt;/p&gt;
&lt;p&gt;The FR15 shows up as a normal USB storage device so you can copy over
.FIT files from the watch directly and work with them on your computer.
My run data was stored in &lt;code&gt;GARMIN/ACTIVITY&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Note that, when researching this, you may read older posts about the
unofficial Garmin Communication web browser plugin that was capable of
uploading data to Garmin's servers.  This no longer functions and &lt;a href="https://github.com/adiesner/GarminPlugin/issues/14"&gt;this
GitHub issue&lt;/a&gt;
suggests it won't be fixed anytime soon.&lt;/p&gt;
&lt;h3&gt;Installing GPSBabel&lt;/h3&gt;
&lt;p&gt;The next job is to get the FIT files into a format that's more widely
usable.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.gpsbabel.org/"&gt;GPSBabel&lt;/a&gt; is a application for Windows, OS X
and Linux that lets you convert between GPS data formats, including
converting Garmin's FIT (Flexible and Interoperable Data Transfer)
format into .GPX (GPS Exchange Format) which is well supported by
various free, open source applications.&lt;/p&gt;
&lt;p&gt;Support for FIT was added to GPSBabel in versions 1.4.3 and later,
judging from the &lt;a href="https://www.gpsbabel.org/changes.html"&gt;GPSBabel
changelog&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If your distribution's repositories have an older version, you'll need
to compile it from source. In Ubuntu, it was reasonably straightforward
to clone it from &lt;a href="https://github.com/gpsbabel/gpsbabel"&gt;GitHub&lt;/a&gt; and then
do the following:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;./configure --prefix&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$HOME&lt;/span&gt;/.local
make
make install
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Using &lt;code&gt;prefix&lt;/code&gt; in &lt;code&gt;configure&lt;/code&gt; allows you to &lt;a href="https://unix.stackexchange.com/a/42569"&gt;install to a local
directory&lt;/a&gt; and avoids the need
for &lt;code&gt;sudo&lt;/code&gt; in &lt;code&gt;make install&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The only hiccup was that the &lt;code&gt;configure&lt;/code&gt; step gave the error message:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="go"&gt;configure: error: Qt4 or Qt5 is required, but neither was found&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;a href="https://stackoverflow.com/questions/16607003/qmake-could-not-find-a-qt-installation-of"&gt;The fix&lt;/a&gt;
was to do the following:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo apt-get install qtcreator
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;which was probably overkill as it installed a lot of packages, but
compiling then worked. (I then removed &lt;code&gt;qtcreator&lt;/code&gt; via &lt;code&gt;apt-get
remove&lt;/code&gt;.)&lt;/p&gt;
&lt;h3&gt;Converting Garmin's FIT data to GPX&lt;/h3&gt;
&lt;p&gt;An example use of GPSBabel is:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;gpsbabel -i garmin_fit -f input.FIT -o gpx -F output.gpx
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This gives you a GPX file which can be loaded into far more software. &lt;/p&gt;
&lt;p&gt;As a quick test, I loaded the output GPX file into
&lt;a href="https://apps.ubuntu.com/cat/applications/viking/"&gt;Viking&lt;/a&gt; which seems a
little bit limited, but at least let me visualise speed against time,
and see where I've been.&lt;/p&gt;
&lt;p&gt;There are web apps out there that will save you this hassle and do the
conversion for you, but, again, I'd rather keep my location data to
myself.&lt;/p&gt;
&lt;p&gt;(Some of the high-end watches also have the ability to send the data to
Garmin via Bluetooth to mobile apps that collect the data, so that's
another way you could avoid the requirement for Windows or OS X.)&lt;/p&gt;
&lt;h3&gt;Upgrading the watch's firmware&lt;/h3&gt;
&lt;p&gt;My watch came with the latest firmware installed and the watch has been
out a while, so I doubt there are any major issues remaining. But, there
may still be further updates as it's still a supported product.&lt;/p&gt;
&lt;p&gt;The official update method is via Garmin's Windows or OS X software. If
you search their site, you can find that updates exist, but you're told
to use Garmin Express to install them.&lt;/p&gt;
&lt;p&gt;However, it is possible to find download URLs for firmware updates, if
you look in the HTML source. For instance, the &lt;a href="http://download.garmin.com/software/Forerunner15_270.rgn"&gt;current FR15
firmware&lt;/a&gt; is
available via direct download using any client you like, albeit via
insecure http. (I haven't tested the official software, it may well use
the same links.)&lt;/p&gt;
&lt;p&gt;I haven't needed this information yet, but there are &lt;a href="https://forums.garmin.com/archive/index.php/t-103787.html"&gt;more details
regarding a different
model&lt;/a&gt; on the
Garmin forums, but may well be relevant here. As a post there states,
you may need to remove 60 bytes of an extraneous header using &lt;code&gt;tail&lt;/code&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;To verify that an original file needs this header-removing, open it
with &lt;code&gt;hexdump -C [Download FileName] | head&lt;/code&gt;. You should see it
starting with the string KpGrd The main watch firmware has two of
those KpGrd headers, but we only remove the first one.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Also bear in mind that there may be multiple firmware files to update,
e.g. the watch firmware itself, as well as language files and the ANT
firmware. And apparently &lt;em&gt;all&lt;/em&gt; these need the header removing. Anyway,
you can search Garmin's site for e.g. "Forerunner 15 update" and see
what you find.&lt;/p&gt;
&lt;h2&gt;What's the watch actually like?&lt;/h2&gt;
&lt;p&gt;I've only started using it today, but it seems good at what it does. I
tracked a run and, at a glance, the data looked consistent with where
I'd been and how I'd run.&lt;/p&gt;
&lt;p&gt;It's a basic model, but capable. It's got what seems like a decent
battery, apparently eight hours in active GPS use. Anecdotally, I headed
out taking it straight from the box without charging and it was flashing
an empty battery warning for most of the run (an hour or so), but still
managed to record the entire distance.&lt;/p&gt;
&lt;p&gt;It's also waterproof which was handy since I was caught up in a heavy
downpour while out. And it didn't feel noticeably less comfortable or
more cumbersome than the (near-weightless) Casio digital watch that I'm
usually wearing.&lt;/p&gt;
&lt;p&gt;There are also activity tracker features available to count steps and
calories, though I'm less concerned about those. Recording a run for
later inspection, tracking my heart rate, distance travelled and time
elapsed while running, and keeping my best times are the features I
really want. And the FR15 does all of these things.&lt;/p&gt;
&lt;p&gt;The FR15 was on offer when I bought it. Would I have paid the full
retail price? I don't know. At that price and adding on an optional
heart rate monitor bundled, it's very similar in price to higher-end
watches like Garmin's 225.&lt;/p&gt;
&lt;p&gt;On the other hand, I did look into more expensive watches and all of
them, at least the Garmin watches, seemed to have drawbacks. There
wasn't an obvious candidate that stood out as the one to get.&lt;/p&gt;
&lt;p&gt;As a starter watch, the FR15 seems like a good deal, especially as it
seems we're in a time where the technology's still improving. (Perhaps
indicative of that, Garmin, much to the chagrin of unlucky purchasers,
released a newer version of their FR225 only a few months after they
launched it.) There's also competition from the likes of Fitbit and
Jawbone which will probably push improvements to these devices in
future. Newer, more expensive watches are already switching over to
wrist monitoring of heart rate instead of using more traditional heart
rate bands.&lt;/p&gt;
&lt;p&gt;So, if this is technology that I use long term, then the next step would
be to a watch featuring wrist heart rate monitoring and cadence
measurement. Nonetheless, the expandability of the FR15 is a bonus: you
can use a separate ANT heart rate monitor (it optionally is bundled with
one), as well as a footpod. Excluding these extras keeps the price down,
but it's still possible to augment the device with these features in
future; I've already ordered a heart rate monitor.&lt;/p&gt;
&lt;p&gt;The one downside of the design I've seen so far is that I think the
battery will be a chore to replace when it expires. It's not officially
user-replaceable. That drawback aside, it seems a decent choice.&lt;/p&gt;</summary><category term="Garmin"></category><category term="Forerunner"></category><category term="Linux"></category><category term="GPS"></category><category term="running"></category></entry></feed>