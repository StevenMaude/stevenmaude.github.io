<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>stevenmaude.co.uk</title><link href="http://www.stevenmaude.co.uk/" rel="alternate"></link><link href="http://www.stevenmaude.co.uk/feeds/all.atom.xml" rel="self"></link><id>http://www.stevenmaude.co.uk/</id><updated>2016-12-16T00:11:00+00:00</updated><entry><title>UEFaIeeee</title><link href="http://www.stevenmaude.co.uk/posts/uefaieeee" rel="alternate"></link><published>2016-12-16T00:11:00+00:00</published><updated>2016-12-16T00:11:00+00:00</updated><author><name>Steven Maude</name></author><id>tag:www.stevenmaude.co.uk,2016-12-16:posts/uefaieeee</id><summary type="html">&lt;p&gt;In writing this, I checked the &lt;a href="https://en.oxforddictionaries.com/definition/aie"&gt;valid spelling of
"aieeee"&lt;/a&gt; and it is
apparently with four e letters at the end.&lt;/p&gt;
&lt;p&gt;If you're currently panicking how to fix a system where the UEFI boot
entry for your operating system has disappeared (i.e. from what you
might think of as the "BIOS" boot entries), you may be yelling a much
more extended form of that exclamation than that correct spelling could
ever suggest.&lt;/p&gt;
&lt;p&gt;In that case, go straight to &lt;a href="#fixing-the-problem"&gt;"Fixing the problem"&lt;/a&gt;
— go directly to that section and do not collect £200 — for advice.&lt;/p&gt;
&lt;h2 id="background"&gt;Background&lt;/h2&gt;
&lt;p&gt;Recently I've been undergoing the arduous process of getting a recent
version of Ubuntu on my laptop and dual booting with Windows. While I
was experimenting, I'd got everything working reasonably, when I'd
installed some updates and then, on shutting down that time, to let them
take effect, the laptop decide to lock up with the blinking
boot/shutdown dots illuminating but nothing happening.&lt;/p&gt;
&lt;p&gt;I figured I'd check if everything was OK. I found that you can use
debsums to check if installed packages are as expected. Running it
(&lt;code&gt;sudo debsums -s&lt;/code&gt; to ignore OK files) gave a few warnings. Since one of
them referred to a kernel image, it was a little concerning.&lt;/p&gt;
&lt;p&gt;Since I hadn't done much with the laptop except install from a DVD for
which I'd verified the SHA256SUM (and verified the signature of the sum
file too), I didn't think anything untoward could have happened. And,
looking around, it seems that this has happened in previous releases
too: the mismatch was likely a genuine error in the release, not
indicative of anything wrong with my install. Of course, my rigorous
side stupidly got the better of me and I figured I might as well
investigate further.&lt;/p&gt;
&lt;p&gt;Simple. I can just install Ubuntu again to a USB stick, not touching my
existing installation and then rerun debsums there. That thought there 
turned out to be anything but simple.&lt;/p&gt;
&lt;p&gt;But I wasn't to know that at the time. An hour and a USB installation
later, yes, I'd demonstrated that the same warnings from running debsums
came up on this install too.&lt;/p&gt;
&lt;p&gt;Satisfied with that explanation, I'd removed the USB stick, plugged my
hard disk back in and decided to boot, and saw:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Boot failure&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;uh, OK.&lt;/p&gt;
&lt;h2 id="installing-ubuntu-to-a-usb-stick-broke-my-existing-ubuntu-install"&gt;Installing Ubuntu to a USB stick broke my existing Ubuntu install&lt;/h2&gt;
&lt;p&gt;My guess as to what had happened is as follows. When I'd installed
Ubuntu to the USB stick, it installed to /dev/sdb, not /dev/sda. The
previous "ubuntu" boot entry that worked fine for my hard disk was
referencing /dev/sda and looked for a bootloader on the EFI partition of
my hard disk.&lt;/p&gt;
&lt;p&gt;The USB install had been to /dev/sdb and the currently existing "ubuntu"
boot entry had been overwritten by one with the same name. Now that boot
entry was referencing /dev/sdb and looking for a bootloader on the EFI
partition of my USB install, couldn't find it, and therefore no longer
booted. The USB install could be booted without a hitch since the EFI
entry was pointing correctly to it.&lt;/p&gt;
&lt;p&gt;Incidentally, the Windows install on the same hard disk was still
booting fine, again as expected, because the Windows EFI entry hadn't
changed.&lt;/p&gt;
&lt;h2 id="fixing-the-problem"&gt;Fixing the problem&lt;/h2&gt;
&lt;p&gt;Some PCs give you UEFI setup options to add a boot entry, so you can
resolve the problem directly there. You'll need to know the path to the
bootloader for whatever operating system you want to boot, but that
should be relatively easy to locate.&lt;/p&gt;
&lt;p&gt;However, my laptop is sparse in its configuration options and does not
offer this option. In that case — and even if your PC does have an
option to add boot entries directly) — you can use efibootmgr to add the
entry back. See &lt;a href="https://superuser.com/a/697012"&gt;the answer here&lt;/a&gt;&lt;sup id="fnref:1"&gt;&lt;a class="footnote-ref" href="#fn:1" rel="footnote"&gt;1&lt;/a&gt;&lt;/sup&gt; which
shows that you'll want something along the lines of:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;efibootmgr -c -d /dev/sda -p 1 -l &amp;#39;\EFI\ubuntu\shimx64.efi&amp;#39; -L &amp;quot;Ubuntu&amp;quot;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;As the post says, you can equally use Microsoft's &lt;code&gt;bcdedit&lt;/code&gt; to do the
same, but that requires you to have Windows. You can always run
&lt;code&gt;efibootmgr&lt;/code&gt; from a bootable Linux DVD or USB. And, you'll need to
change the disk (&lt;code&gt;/dev/sda&lt;/code&gt;) and partition number (the &lt;code&gt;-p 1&lt;/code&gt;) to
reflect which one is the EFI System Partition, which you can find by
doing &lt;code&gt;fdisk -l&lt;/code&gt; in a terminal.&lt;/p&gt;
&lt;p&gt;Then the entry will be readded and your install should be bootable
again.&lt;/p&gt;
&lt;p&gt;That answer was exactly what I needed. Unfortunately, it took me far
longer to find than it should have, probably because it's talking about
"repairing GRUB". Hopefully, the keywords I've used here might help
others find this a bit more easily.&lt;/p&gt;
&lt;h2 id="what-are-the-failures-here"&gt;What are the failures here?&lt;/h2&gt;
&lt;p&gt;This was unexpected. Yes, installing to a hard disk, then USB is
probably not a common use case, but you certainly wouldn't expect it to
break an existing installation. Maybe it's possible that it was because
I had a slightly unusual dual boot setup, but I don't see that should
make a difference. I'd expect this to happen even if you're single
booting. (Feel free to correct me if you've tested and found otherwise.)&lt;/p&gt;
&lt;h3 id="hardware-side"&gt;Hardware side&lt;/h3&gt;
&lt;p&gt;For my laptop in particular, you can't add EFI boot entries at all.
Auto detection would be ideal, but you can't even add entries manually.&lt;/p&gt;
&lt;h3 id="ubuntu"&gt;Ubuntu&lt;/h3&gt;
&lt;p&gt;Why does the installer not check for or warn of the possible issue of
clobbering an existing valid boot entry? Wouldn't it be preferable for
this to be far more explicit, check for an existing boot entry and ask
the user whether they want to leave the boot entries intact (and abandon
the install), add a new entry or replace the existing entry (with the
warning that this will probably break the existing installation)?&lt;/p&gt;
&lt;div class="footnote"&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li id="fn:1"&gt;
&lt;p&gt;The author of the answer maintains &lt;a href="https://en.wikipedia.org/wiki/REFInd"&gt;an EFI boot
manager&lt;/a&gt;, so he definitely knows
his stuff here.&amp;#160;&lt;a class="footnote-backref" href="#fnref:1" rev="footnote" title="Jump back to footnote 1 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</summary><category term="EFI"></category><category term="UEFI"></category><category term="boot entry"></category><category term="efibootmgr"></category></entry><entry><title>A Year of Garmin: a Forerunner 15 review</title><link href="http://www.stevenmaude.co.uk/posts/a-year-of-garmin-a-forerunner-15-review" rel="alternate"></link><published>2016-12-14T15:43:00+00:00</published><updated>2016-12-14T15:43:00+00:00</updated><author><name>Steven Maude</name></author><id>tag:www.stevenmaude.co.uk,2016-12-14:posts/a-year-of-garmin-a-forerunner-15-review</id><summary type="html">&lt;p&gt;As I mentioned in &lt;a href="http://www.stevenmaude.co.uk/posts/using-garmin-forerunner-watches-with-linux"&gt;a previous
post&lt;/a&gt;
just after Christmas last year, I bought a new &lt;a href="https://buy.garmin.com/en-GB/GB/p/145621"&gt;Garmin
watch&lt;/a&gt;. That's also the first
GPS watch I've owned. Now I've been using it regularly for the best part
of a year, I've got a much better idea of how I use it, and what I like
about it.&lt;/p&gt;
&lt;p&gt;And I like the Forerunner 15 a lot. Many of my favourite things focus on
doing one or a small number of tasks well. It's &lt;a href="http://www.stevenmaude.co.uk/posts/still-rocking-rockbox"&gt;why I use Rockbox on
dedicated audio player
hardware&lt;/a&gt; as opposed to some
music player app on a phone, and why I tend to use a separate camera,
not a phone, for taking photographs.&lt;/p&gt;
&lt;p&gt;The FR15 is a slightly chunky digital watch, compared with the
low profile, cheap and cheerful Casio I usually wear. But it's not bulky
enough that I've ever noticed it as an extra weight on my wrist. It's
easy to just forget that it's there altogether. The strap's also
comfortable to wear. It's also waterproof to 50 metres, which means that
your investment won't be ruined by using the watch in the rain, although
it's not a swimming fitness watch. The battery life could be better, but
I usually get several runs out of it from a full charge. And it should
be capable of lasting for a marathon, even if I'm not yet.&lt;/p&gt;
&lt;h2 id="connectivity"&gt;Connectivity&lt;/h2&gt;
&lt;p&gt;Charging and data transfer are by USB only. There's no Bluetooth
connectivity, but I prefer that there's no specific mobile or desktop
application that I'm forced to use to get my data off the watch.&lt;/p&gt;
&lt;p&gt;As I don't use them, I can't comment on Garmin's client software or
their website where you can submit and view your data, as I copy the
data off to a PC running Linux. But, I imagine they'd have most of the
features you'd want, provided you're comfortable with Garmin storing
your location history. Alternatively, it's simple to copy the data
directly from the watch for your own processing, which is how I use it.&lt;/p&gt;
&lt;p&gt;One thing you miss out on if you don't regularly use the official
software is updates to the ephemeris Extended Prediction Orbit (EPO)
data. This provides a cache of satellite locations for a short period of
time and helps to speed up the initial location detection of the watch.
It's also possible to download this data from Garmin without using their
software; I've mentioned solutions, &lt;a href="https://github.com/StevenMaude/armstrong"&gt;including my
own&lt;/a&gt;, in the previous post I
made on &lt;a href="http://www.stevenmaude.co.uk/posts/using-garmin-forerunner-watches-with-linux"&gt;Garmin watches and
Linux&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Without that data to hand, the time to get a location lock can
occasionally be long enough that I've warmed up and just set off and
waited for it to catch up ten minutes later. It does vary depending on
where you are. That's not too common a problem fortunately, but if
you're racing then having the EPO data and getting the FR15 ready well
ahead of time is a good idea. Though you can prepare the watch this way
for a run, you'll need to occasionally press a button to keep the FR15
awake before starting a run, otherwise the watch's power saving feature
(which you can't disable) will turn it off. Not a huge deal, but not a
perfect design either.&lt;/p&gt;
&lt;h1 id="why-wear-a-gps-watch-while-running"&gt;Why wear a GPS watch while running?&lt;/h1&gt;
&lt;p&gt;There's the slightly gimmicky thing of mapping runs and seeing how fast
you were running. That said, having an archive of previous runs
completed might be useful if you particularly enjoyed a route and want
to file it away to revisit at a later date.&lt;/p&gt;
&lt;p&gt;The data collection itself isn't really important for me. Having a live
status of how far I've gone and my current pace is. That's useful both
in training runs to see if I should be trying to push myself more, or in
races to know how long I've got to go before I can finally stop. It's
useful in races for pacing too. You can set a target pace and you get an
audio alert when you're on pace, or go above or drop below it.  And
keeping good track of your progress can be a useful motivator too.  In a
10 km race this year, I worked out that if I pushed for the last 1.5 km
or so, I might just beat that time and tried to up my pace. In the very
last minute, I worked out it was possible if I ran the last 200 metres
very quickly, and that encouraged me to both try and go on to succeed.&lt;/p&gt;
&lt;p&gt;Likewise, the watch keeping tabs on your recorded best times at various
distances (e.g. 1 km, 1 mile, 5 km) is nice to have when you realise
that you've improved on your previous best.&lt;/p&gt;
&lt;p&gt;With all that in mind, even a low-end watch like this is more than
capable. You do lose bundled features like heart rate monitor and GPS
route navigation, but you get the most essential and useful features, at
a price that's reasonable enough. At the same time, this means the watch
is pared down to the essential features, implements them well and they
are all easy to access through the simple menus.&lt;/p&gt;
&lt;p&gt;For a first-time user of GPS watches, I'm pleased with how good a
purchase the Forerunner 15 was, especially considering it was on sale at
the time. I looked around for a good couple of hours at reviews and
comments on watches, and concluded that you could spend a lot and still
not be entirely satisfied. It seemed most sensible to buy something
cheap and cheerful, and not be disappointed by its flaws: I'm more
forgiving of a sub-£100 watch, than maybe one that's closer to £200.&lt;/p&gt;
&lt;p&gt;Finally, if you are shopping for GPS watches, the best resource I found
for looking at these watches is the &lt;a href="https://www.dcrainmaker.com/product-reviews"&gt;comprehensive set of reviews by DC
Rainmaker&lt;/a&gt;. When I say
"comprehensive", that is not just in the number of devices covered, but
in how rigorously they're evaluated too. Incidentally, he currently
rates the TomTom Runner as a good budget watch for Winter 2016; looking
around UK pricing, it's slightly cheaper than what the Forerunner 15
typically sells for, so may be another option to consider if you're
buying right now.&lt;/p&gt;</summary><category term="Garmin"></category><category term="Forerunner"></category><category term="review"></category><category term="running"></category></entry><entry><title>Still rocking Rockbox</title><link href="http://www.stevenmaude.co.uk/posts/still-rocking-rockbox" rel="alternate"></link><published>2016-12-10T23:06:00+00:00</published><updated>2016-12-10T23:06:00+00:00</updated><author><name>Steven Maude</name></author><id>tag:www.stevenmaude.co.uk,2016-12-10:posts/still-rocking-rockbox</id><summary type="html">&lt;p&gt;In the days of the iPod, when travelling on public transport, in the UK
at least, those trademark white earphones were everywhere. But it seems
that portable audio players have become a thing of history; with the
advent of phones as all-in-one devices, these have pretty much replaced
audio players (and cameras too). Why carry extra devices when the one
you've already got in your pocket will do?&lt;/p&gt;
&lt;p&gt;Returning back to those past days, I'd put up with a couple of very
cheap MP3 players, which would often glitch in all kinds of infuriating
ways. That ranged from failing to read certain MP3s, going further in
their obstinance and just locking up entirely, or further still and
actively protesting noisily. I'm not sure that "randomly firing a loud
burst of white noise into my ears until power off" is a particular
bullet point to stick on the box blurb.&lt;/p&gt;
&lt;p&gt;Fortunately, it didn't take long before I'd spotted Rockbox, a open
source replacement firmware for audio players. Since then, Rockbox has
become one of the open source projects that I use most. I've used it
near daily on some device or other for probably around a decade, and I
don't see that changing anytime soon.&lt;/p&gt;
&lt;h2 id="easy-listening"&gt;Easy listening&lt;/h2&gt;
&lt;p&gt;As an audio player is one of the things I'm using all the time, I like
having a separate device with its own, usually lengthy, battery life.
With that in mind, I'm probably a little ignorant if there's phone audio
player software that's as competent and fully featured as Rockbox. It's
certainly possible there's a suitable competitor. But I'd be surprised.&lt;/p&gt;
&lt;p&gt;In terms of the range of audio formats supported and the number of
features Rockbox offers, it seems difficult to match. There's gapless
playback, bookmarking, equalizer, compressor, crossfeed, control of
pitch and speed, and ReplayGain support. On top of that, adjusting many
aspects of a Rockbox-enabled device is possible. Even the display theme
is fully customisable should you wish to create your own.  Furthermore,
if a device has the option of adding external media card storage, such
as microSD, Rockbox sometimes goes beyond a device's official support,
enabling the use of larger memory cards.&lt;/p&gt;
&lt;h2 id="installing-rockbox"&gt;Installing Rockbox&lt;/h2&gt;
&lt;p&gt;If you want to give it a try, the first step is to take a look at the
&lt;a href="https://rockbox.org"&gt;official site&lt;/a&gt; and see what devices are currently
supported. It's also worth checking around the forums there too,
particularly under "New Ports" as there may be newer devices where less
stable ports-in-progress are available, but not listed on the main site.&lt;/p&gt;
&lt;p&gt;Devices that run Rockbox are commonly fairly cheap as it's usually
older, out of demand hardware that's supported. It does mean getting
hold of one in good condition might not be necessarily easy. I've used
Rockbox on several different devices, first and second generation iPod
Nanos, and the Sansa Fuze and Fuze+. There have been devices I have
preferred, but most devices are quite usable since once you've selected
what to play, there's little more to do. The main differences really
come down to screen size, ease of accessing the user interface (for
instance, the Fuze+ has a touch sensitive pad which isn't ideal compared
with the definite precision of the iPod Nano or Fuze wheels), and
whether a device supports storage expansion.&lt;/p&gt;
&lt;p&gt;When you've got a compatible device, it's relatively straightforward to
get things going. The Rockbox Utility is a program that you can use to
install Rockbox directly to hardware that's plugged into your PC, or you
can install manually if you prefer, although it may involve using a
compiler. The actual installation process varies depending on hardware,
for instance, you may also have to download some official firmware file
for your hardware first so that it can be patched to add Rockbox. After
that, you should be ready to copy files onto your player's storage and
start using it.&lt;/p&gt;
&lt;p&gt;On a security point: when I last used the Rockbox Utility, only a few
weeks back, it was using insecure HTTP URLs for downloading from the
site. This is despite the download servers the Utility downloads files
from during installation actually supporting HTTPS. I don't have the
changes I made to hand, but it's possible to use your favourite
find-replace tool to patch the source to replace URLs that match, for
example (but not limited to) http://download.rockbox.org to use HTTPS. I
really should have submitted a patch but I couldn't face the hassle of
creating a account to access Rockbox's Gerrit instance at the time.&lt;/p&gt;
&lt;h2 id="the-future"&gt;The future?&lt;/h2&gt;
&lt;p&gt;What's the long, long term future of the project? If you've hardware for
which Rockbox is claimed to be stable, you'll probably find that's the
case. I've had devices occasionally lock up, but these haven't happened
frequently enough to be frustrating. As mentioned above, it's as
feature-filled as you'd likely require too, so even if development
stopped on it entirely it would still continue to be usable too.
Nonetheless, it's still actively maintained with a steady run of code
changes being made.&lt;/p&gt;
&lt;p&gt;You're limited to what devices you can install Rockbox on, but these
were often produced in large quantities (e.g. iPods) so there should be
an abundance of them on the market. All this makes it relatively simple
to pick up a working used one to install Rockbox. For now. Getting hold
of one of these is unlikely to be a problem as there are so many out
there, but getting one in good working order may prove increasingly
difficult as time goes on. If it's a failed battery that's a problem,
it's probably easy to get a replacement, although replacing the battery
may prove trickier: these devices weren't often designed to be
user-serviceable.&lt;/p&gt;
&lt;p&gt;There has been work on making Rockbox an Android app. Ultimately, that's
likely the way things will go in the far distant future as old audio
hardware becomes scarce and fewer new devices are designed and
manufactured. In the meantime, it's nice to have software that does one
thing and does it particularly well. As nothing better seems to have
come along to usurp Rockbox's place, it's quite possible that I'll be
using it over the next ten years as I have for the last ten.&lt;/p&gt;</summary><category term="open source"></category><category term="Rockbox"></category></entry><entry><title>Conversation conservation: recording audio input and output simultaneously in Linux</title><link href="http://www.stevenmaude.co.uk/posts/conversation-conservation-recording-audio-input-and-output-simultaneously-in-linux" rel="alternate"></link><published>2016-12-01T12:00:00+00:00</published><updated>2016-12-01T12:00:00+00:00</updated><author><name>Steven Maude</name></author><id>tag:www.stevenmaude.co.uk,2016-12-01:posts/conversation-conservation-recording-audio-input-and-output-simultaneously-in-linux</id><summary type="html">&lt;h2 id="why"&gt;Why?&lt;/h2&gt;
&lt;p&gt;Sometimes you might need to record both the audio playing out on your
computer as well as an input. Often, this might be if you're recording a
screencast or podcast, or if you want to record both sides of an online
voice chat or video call, e.g. with Hangouts, Skype or some WebRTC app,
for instance.&lt;/p&gt;
&lt;p&gt;In my case, I wanted to record an interview and, ideally, want to hear
what both of us were saying, without having to record both sides of the
conversation separately and later try to combine them into a single
piece of audio.&lt;/p&gt;
&lt;h2 id="how"&gt;How&lt;/h2&gt;
&lt;p&gt;The solution if you're using Linux and PulseAudio is &lt;a href="https://superuser.com/questions/769249/how-to-record-both-input-and-output-audio-simultaneously"&gt;mentioned
here&lt;/a&gt;
but I've clarified this below so I can find it quickly:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Run &lt;code&gt;pactl load-module module-loopback&lt;/code&gt; in a terminal. You should
    start hearing your microphone input; with headphones on at least,
    you shouldn't get feedback. What you do get is a very slight delay
    in hearing yourself.  For me, using earphones and removing one
    seemed to help remove most of the off-putting distraction this delay
    causes, while still being able to hear the other participant in the
    conversation.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Start recording in, say, &lt;a href="http://www.audacityteam.org/"&gt;Audacity&lt;/a&gt; or
    some other audio recording software.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Open the PulseAudio Volume Control. If you don't have it installed,
    &lt;code&gt;apt install pavucontrol&lt;/code&gt; should get you it in Ubuntu. You may then
    have a shortcut to it wherever your programs get listed, e.g. in
    Ubuntu, you can access it via the Unity dash.&lt;/p&gt;
&lt;p&gt;Alternatively, run &lt;code&gt;pavucontrol&amp;amp;&lt;/code&gt; in a terminal, open the Recording
tab. to Recording tab, select what should be something like "Monitor
of Built-in Audio Analogue Stereo" for the selection for Audacity.
This is one thing that's a little counterintuitive; you don't see
this unless you've already started recording.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;When you've finished, you can run &lt;code&gt;pactl unload-module
    module-loopback&lt;/code&gt; to stop hearing audio input in the output. You
    might also want to reset the Audacity recording setting to what it
    was, so that you don't forget you changed it.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;</summary><category term="audio"></category><category term="recording"></category><category term="Linux"></category><category term="Ubuntu"></category></entry><entry><title>A beginner's guide to OS encryption: (almost) 2017 edition</title><link href="http://www.stevenmaude.co.uk/posts/a-beginners-guide-to-os-encryption-almost-2017-edition" rel="alternate"></link><published>2016-11-28T00:26:00+00:00</published><updated>2016-11-28T00:26:00+00:00</updated><author><name>Steven Maude</name></author><id>tag:www.stevenmaude.co.uk,2016-11-28:posts/a-beginners-guide-to-os-encryption-almost-2017-edition</id><summary type="html">&lt;p&gt;Previously I wrote about setting up my laptop to &lt;a href="http://www.stevenmaude.co.uk/posts/a-beginners-guide-to-os-encryption-dual"&gt;dual boot Windows and
Ubuntu&lt;/a&gt;.
As the Ubuntu LTS I had installed was now aging badly&lt;sup id="fnref:1"&gt;&lt;a class="footnote-ref" href="#fn:1" rel="footnote"&gt;1&lt;/a&gt;&lt;/sup&gt;, it really,
really, &lt;em&gt;really&lt;/em&gt; needed upgrading.&lt;/p&gt;
&lt;p&gt;I'd been hesitant to upgrade. The last time I installed this way, it
took a week of following several guides, many of them out of date or not
working, and several failed installs.&lt;/p&gt;
&lt;h2 id="a-quick-guide"&gt;A quick guide&lt;/h2&gt;
&lt;p&gt;Fortunately, thanks to someone really helpful on the internet, I don't
have to write much this time:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Follow this &lt;a href="https://askubuntu.com/a/293029/623909"&gt;guide&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;That's pretty much it.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="installing-windows"&gt;Installing Windows&lt;/h2&gt;
&lt;p&gt;Seeing as I have my text editor open, I'll clarify a little more.&lt;/p&gt;
&lt;p&gt;To start with, I booted Windows 10 with my computer set to boot in UEFI
mode and with Secure Boot enabled. Starting from a clean hard disk, when
the Windows installer booted, I was using a clean drive, and instructed
the installer to create a new partition using a certain proportion of
space on my drive, leaving the rest of the disk as unformatted space.&lt;/p&gt;
&lt;p&gt;You'll find you don't get one partition but four: a recovery partition,
the system (or EFI partition), a reserved space partition and the
primary partition where Windows will actually be installed.&lt;/p&gt;
&lt;p&gt;Another hour or so later, and following running Windows Update,
hopefully you have a working and updated Windows machine. One big plus
of the Windows 10 installer versus what I've experienced previously is
that most computer hardware tends to get detected and installed
automatically, without you needing to find drivers buried away on a
manufacturer's website. Another is that, although Windows 10's
cumulative updates can be problematic if there's an issue with one part
of them, they do mean that you have only one big update to install, not
several hundred, as is seriously the case with Windows 7.&lt;/p&gt;
&lt;p&gt;At this point, you can go ahead and encrypt the Windows operating system
drive with BitLocker, provided you have a version of Windows that offers
it. If you don't have a Trusted Platform Module in your PC, it's still
possible to use BitLocker, but you'll need to override this using &lt;a href="https://technet.microsoft.com/en-us/library/jj679890(v=ws.11).aspx"&gt;Group
Policy&lt;/a&gt;
(search for &lt;code&gt;gpedit.msc&lt;/code&gt; in the Windows search bar and run it). &lt;/p&gt;
&lt;p&gt;You can find the options in Group Policy under (breathe in): Computer
Configuration\Administrative Templates\Windows Components\BitLocker
Drive Encryption\Operating System Drives. The specific option you need
to change is "Require additional authentication at startup" and you can
then tick "Allow BitLocker without a compatible TPM".&lt;/p&gt;
&lt;p&gt;You should probably consider enabling "Allow enhanced PINs for startup"
which is in the same Group Policy section while in there, seeing as this
lets you use characters, not just numbers.&lt;sup id="fnref:2"&gt;&lt;a class="footnote-ref" href="#fn:2" rel="footnote"&gt;2&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;p&gt;Right clicking on the drive in Windows Explorer and selecting "Turn on
BitLocker" should let you then go through the process of encrypting the
drive.&lt;/p&gt;
&lt;p&gt;Although I'm discussing Windows and Ubuntu here, note that the guide
I've linked to may well work for two Linux installations too.&lt;/p&gt;
&lt;h2 id="installing-ubuntu"&gt;Installing Ubuntu&lt;/h2&gt;
&lt;p&gt;The usual advice is to install Linux &lt;em&gt;after&lt;/em&gt; Windows, since Windows
doesn't necessarily play as nicely with Linux. I'm not sure if that
still holds in the days of UEFI booting, but it seemed sensible to do.&lt;/p&gt;
&lt;p&gt;Going back to the &lt;a href="https://askubuntu.com/a/293029/623909"&gt;excellent
guide&lt;/a&gt; that was posted, it's not
difficult to follow. Pay attention to the comments, as there were three
steps that were unnecessary in the process, which were pointed out
there.&lt;/p&gt;
&lt;p&gt;The process has quite a few steps, but even if you don't understand
fully what's going on, it should Just Work™. Here's an overview of
what's involved once you've loaded Ubuntu from a DVD or USB:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Use your unpartitioned disk space to create two partitions. One will
    be the unencrypted /boot partition and the other will be a LUKS
    container that contains an LVM physical volume. This is then
    subdivided into two logical volumes, one for the root partition, /,
    and the other for /swap.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Install Ubuntu to the root partition you created with the installer,
    as normal, although make sure that you choose "Something else" when
    asked how to install.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Don't immediately reboot after installing. Access your new
    installation by using a
    &lt;a href="https://en.wikipedia.org/wiki/Chroot"&gt;chroot&lt;/a&gt;. This gives a
    convenient way of modifying a configuration file in the new install
    (crypttab) to add details of your drive which need to be available at
    boot, and updating its
    &lt;a href="https://en.wikipedia.org/wiki/Initramfs"&gt;initramfs&lt;/a&gt; with that
    configuration.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;After that, booting up into Ubuntu should work and prompt you to unlock
the LUKS container. Depending on your UEFI setup and your preference,
you may need to go into your PC's boot menu at startup and select Ubuntu
directly (or reorder the default boot order so that it boots by
default). &lt;/p&gt;
&lt;h3 id="some-more-tips"&gt;Some more tips&lt;/h3&gt;
&lt;p&gt;The guide's pretty good, and my install was successful first time with
no real hiccups, which was a pleasant surprise. There are, however, a
few points which aren't mentioned:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;When you're using GParted to partition your drive, you may wish to
    use the "cleared" option instead of "unformatted" to avoid any
    confusion. Otherwise, if your drive has previous partitions present,
    you may see GParted inform you that the type of partition is
    whatever used to be there. It shouldn't make a difference however,
    as you later should format the partitions anyway. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Make sure you read what the terminal's telling you. I was really
    confused when the &lt;code&gt;luksOpen&lt;/code&gt; command didn't work as I'd run the
    &lt;code&gt;luksFormat&lt;/code&gt; command before. Where I'd gone wrong is that
    &lt;code&gt;luksFormat&lt;/code&gt; asks you to confirm you want to format the drive.
    Instead of typing uppercase "YES" as it instructs, I'd typed "yes",
    and the program just exited instead, without warning it hadn't done
    anything.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;When creating the logical volumes where / and /swap will live, you
    use the &lt;code&gt;lvcreate&lt;/code&gt; command. With the &lt;code&gt;-L&lt;/code&gt; flag as used in the guide,
    you directly specify the size it should take. If you want to ensure
    that the second partition uses the rest of the space, you can use the
    &lt;code&gt;-l&lt;/code&gt; flag as in &lt;code&gt;-l 100%FREE&lt;/code&gt; instead of e.g. &lt;code&gt;-L 7.5g&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;You can also check the status of the volumes you've created using
&lt;code&gt;pvs&lt;/code&gt; and &lt;code&gt;lvs&lt;/code&gt; to ensure everything is as you like, before
proceeding.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;When installing the GRUB bootloader, it belongs in the EFI
    partition.  If you select the disk where you're installling the
    operating system, the Ubuntu installer should automatically detect
    the partition and install GRUB there. It's likely that it's /dev/sda
    if the only hard disk that's plugged in. Alternatively, you can
    identify the EFI partition directly and choose that, e.g. /dev/sda2.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The guide suggests using &lt;code&gt;mount&lt;/code&gt; and &lt;code&gt;swapon&lt;/code&gt; to check which volumes
    are being used in the new installation. Running &lt;code&gt;lsblk&lt;/code&gt; in the
    terminal can do this in a single command. It will show you which
    block devices are mounted and where: you should see the / and /swap
    inside your encrypted LUKS container.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="reinstalling"&gt;Reinstalling&lt;/h2&gt;
&lt;p&gt;How would reinstalling one of the operating systems work? I haven't
tried it yet, so can't say for certain. Below is a thought experiment,
although please heed the warning that it is only a thought experiment.&lt;/p&gt;
&lt;p&gt;My hunch is that an Ubuntu reinstall should be fairly straightforward:
delete the two partitions you created (/boot and the LUKS/LVM
partition), create new ones and follow the whole process again. It
shouldn't impact the Windows installation, as the Windows bootloader
should still exist in the EFI partition. And reinstalling Ubuntu should
just overwrite the existing Ubuntu bootloaders.&lt;/p&gt;
&lt;p&gt;Reinstalling Windows might be trickier. If you retain the existing EFI
partition and install Windows to the same operating system partition
(i.e. without wiping all four partitions and telling Windows to install
to the unpartitioned space), that shouldn't break Ubuntu as I'd guess
that Windows just uses the existing EFI partition, and therefore would
leave GRUB in place. Otherwise, if you do decide to wipe out all four
partitions that Windows created, you'll need to reinstall the GRUB
bootloader to the new EFI partition; see &lt;a href="https://wiki.debian.org/GrubEFIReinstall"&gt;Debian's
wiki&lt;/a&gt; and &lt;a href="https://superuser.com/a/376471"&gt;this
guide&lt;/a&gt;.
It still shouldn't otherwise break your Linux installation, apart from
this though.&lt;/p&gt;
&lt;p&gt;Again, I've not tested any of this has been tested yet. If I ever try
reinstalling one operating system and not both, I'll no doubt edit this
post or add a new one describing that process.&lt;/p&gt;
&lt;div class="footnote"&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li id="fn:1"&gt;
&lt;p&gt;A subject for another post. My brief advice if you're intending to
use Ubuntu LTS releases is to upgrade every time, and not skip any,
especially if you're running it as a desktop.&amp;#160;&lt;a class="footnote-backref" href="#fnref:1" rev="footnote" title="Jump back to footnote 1 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn:2"&gt;
&lt;p&gt;Yes, in this case "PIN" does then become a misnomer.&amp;#160;&lt;a class="footnote-backref" href="#fnref:2" rev="footnote" title="Jump back to footnote 2 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</summary><category term="BitLocker"></category><category term="encryption"></category><category term="LUKS"></category><category term="Ubuntu"></category><category term="Windows"></category></entry><entry><title>Securely erasing frozen hard disks with hdparm</title><link href="http://www.stevenmaude.co.uk/posts/securely-erasing-frozen-hard-disks-with-hdparm" rel="alternate"></link><published>2016-11-22T13:54:00+00:00</published><updated>2016-11-22T13:54:00+00:00</updated><author><name>Steven Maude</name></author><id>tag:www.stevenmaude.co.uk,2016-11-22:posts/securely-erasing-frozen-hard-disks-with-hdparm</id><summary type="html">&lt;p&gt;Yesterday I was trying to erase a hard drive before I used it for a new
install. It may well have never been used, but I couldn't remember and,
for the sake of a few minutes, it seemed sensible to do so first.&lt;/p&gt;
&lt;p&gt;The best way to erase, especially if the drive is a solid state drive,
is to use the &lt;a href="https://ata.wiki.kernel.org/index.php/ATA_Secure_Erase"&gt;ATA Secure
Erase&lt;/a&gt; command
which &lt;a href="http://www.stevenmaude.co.uk/posts/securely-erasing-ssd-drives"&gt;I've mentioned
before&lt;/a&gt;.
This command should also work for most magnetic hard drives too, unless
they're ancient.&lt;/p&gt;
&lt;p&gt;Instead of just mentioning the tool, I've summarised the details from
the lengthy page where I found them below, and discuss how to deal with
"frozen" drives.&lt;/p&gt;
&lt;p&gt;You can access hdparm by booting into, for example, an Ubuntu
installation DVD or USB. Installing Linux isn't required: you can just
"Try Ubuntu" instead which doesn't install anything at all.&lt;/p&gt;
&lt;h2 id="safety-first"&gt;Safety first&lt;/h2&gt;
&lt;p&gt;First, the most sensible thing to do when erasing a drive is remove any
drives other than those you wish to erase. It means even if you
accidentally type the wrong thing that you won't erase a drive that you
didn't intend to.&lt;/p&gt;
&lt;p&gt;Next, you need to get the drive's name. Open a terminal by pressing
Ctrl+Alt+T.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo lshw -class disk
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This will show you details of the disk, including the name. Replace the
&lt;code&gt;/dev/sdX&lt;/code&gt; in the commands below with that name.&lt;/p&gt;
&lt;h2 id="setting-a-password"&gt;Setting a password&lt;/h2&gt;
&lt;p&gt;The next task is to set a password. I'm not sure that you really need to
do this, but the
&lt;a href="https://ata.wiki.kernel.org/index.php/ATA_Secure_Erase"&gt;kernel.org guide&lt;/a&gt;
advises it due to problems with certain PCs, and it only takes one extra
command. Note that the "foo" password below can be replaced by something
of your choice, but it doesn't really matter; when the drive is erased,
the password should be removed.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo hdparm --user-master u --security-set-pass foo /dev/sdX
security_password: &lt;span class="s2"&gt;&amp;quot;foo&amp;quot;&lt;/span&gt;
/dev/sdX:
 Issuing SECURITY_SET_PASS command, &lt;span class="nv"&gt;password&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;foo&amp;quot;&lt;/span&gt;, &lt;span class="nv"&gt;user&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;user, &lt;span class="nv"&gt;mode&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;high
SECURITY_SET_PASS: Input/output error
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Well, that error wasn't expected.&lt;/p&gt;
&lt;p&gt;When I've used hdparm in this way previously, I haven't had a problem.
You might expect it if the drive has a password set already, but in this
case I couldn't recall doing that. If that's the same for you, it could
be a simple fix.  First, check the drive's current status via:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo hdparm -I /dev/sdX
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;and you may see "frozen",  as opposed to "not frozen", in the "Security"
section of the &lt;code&gt;hdparm&lt;/code&gt; output. This means you can't change security
settings, so attempting to set a password fails.&lt;/p&gt;
&lt;h2 id="unfreezing"&gt;Unfreezing&lt;/h2&gt;
&lt;p&gt;In this case, the &lt;a href="https://superuser.com/questions/810867/new-ssd-hdparm-shows-frozen-whether-secure-erase-is-needed-before-installing"&gt;actual
fix&lt;/a&gt;
is simple. Suspending the PC, then powering it back on should then give
you an unfrozen drive: you can check by running the &lt;code&gt;hdparm -I&lt;/code&gt; command
above again.&lt;/p&gt;
&lt;p&gt;Now, if you retry setting a password, you should be able to run the
&lt;code&gt;SECURITY_SET_PASS&lt;/code&gt; command without error. Also, rerunning the &lt;code&gt;hdparm
-I&lt;/code&gt; command yet another time should show that a password is "enabled" as
opposed to "not enabled".&lt;/p&gt;
&lt;h2 id="erasing"&gt;Erasing&lt;/h2&gt;
&lt;p&gt;You can now proceed with the erase. If your drive's &lt;code&gt;hdparm&lt;/code&gt; output
states &lt;code&gt;supported: enhanced erase&lt;/code&gt;, you could replace the
&lt;code&gt;--security-erase&lt;/code&gt; below with &lt;code&gt;--security-erase-enhanced&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo &lt;span class="nb"&gt;time&lt;/span&gt; hdparm --user-master u --security-erase foo /dev/sdX
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;After the erase, the password should be removed, and running the &lt;code&gt;hdparm
-I&lt;/code&gt; command one final time should show that the password is "not
enabled".&lt;/p&gt;</summary><category term="hdparm"></category><category term="erase"></category></entry><entry><title>Collecting disposable email with go-mailin8</title><link href="http://www.stevenmaude.co.uk/posts/collecting-disposable-email-with-go-mailin8" rel="alternate"></link><published>2016-11-12T21:47:00+00:00</published><updated>2016-11-12T21:47:00+00:00</updated><author><name>Steven Maude</name></author><id>tag:www.stevenmaude.co.uk,2016-11-12:posts/collecting-disposable-email-with-go-mailin8</id><summary type="html">&lt;p&gt;&lt;a href="https://github.com/StevenMaude/go-mailin8"&gt;go-mailin8&lt;/a&gt; is a command
line utility I've created to get the most recent message from a
Mailinator email inbox.&lt;/p&gt;
&lt;h1 id="whats-mailinator"&gt;What's Mailinator?&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://mailinator.com"&gt;Mailinator&lt;/a&gt; is one of a number of free services
that allows you to use a disposable email address. This is handy when
you're signing up for something but when you know that the account or
email is only needed ephemerally, as a one-off. My frequent use case is
for free Bandcamp downloads that require an email address. It can also
be useful for testing on the web, if you're developing something that
sends email.&lt;/p&gt;
&lt;p&gt;What using a disposable email address offers is not having to hand out
your real email address when that's not needed, with the advantage of
reducing the number of unwanted messages you receive. Yes, of course,
you can usually unsubscribe from mailing lists, but that's extra work.
Better to just not let the unwanted messages anywhere near your real
inbox, where possible.&lt;/p&gt;
&lt;h1 id="cant-you-just-visit-the-site"&gt;Can't you just visit the site?&lt;/h1&gt;
&lt;p&gt;Yes, you can. But I'm lazy, and this means switching to a new tab,
visiting the URL and loading their home page, then entering the inbox
address, loading the inbox page, and clicking the mail to display it and
then finally copying the activation or download URL I'm looking for.&lt;/p&gt;
&lt;p&gt;Much easier if I can just run a command line program that just takes the
local-part of the mailbox name (the part before the @):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;./go-mailin8 &amp;lt;local-part&amp;gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;and gives me back the most recent message. Copy-pasting the URL directly
from the terminal is then simple.&lt;/p&gt;
&lt;h1 id="why-go-and-not-python"&gt;Why Go and not Python?&lt;/h1&gt;
&lt;p&gt;It would be probably have been easier to write in Python as I know that
better than I do Go. But I'm conscious that I spent some time over the
summer reading up on Go; the more chance to practise, the better.&lt;/p&gt;
&lt;p&gt;In this case, features Go offers like being faster, and easier to write
concurrent code aren't really important. You could equally well write
this code in Python and it would be just as useful.&lt;/p&gt;
&lt;p&gt;Where Go excels is that the code has no dependencies to install once it
is compiled. Much simpler than telling someone to first install Python
and then the packages that they need. (I realise that the target
audience of such a tool are probably more than capable of doing so, but
this reduces the barrier for someone to get the program running on their
computer nonetheless.)&lt;/p&gt;</summary><category term="golang"></category><category term="Mailinator"></category><category term="email"></category></entry><entry><title>Archiving a WordPress site with wget and hosting for free</title><link href="http://www.stevenmaude.co.uk/posts/archiving-a-wordpress-site-with-wget-and-hosting-for-free" rel="alternate"></link><published>2016-09-21T23:54:00+01:00</published><updated>2016-09-21T23:54:00+01:00</updated><author><name>Steven Maude</name></author><id>tag:www.stevenmaude.co.uk,2016-09-21:posts/archiving-a-wordpress-site-with-wget-and-hosting-for-free</id><summary type="html">&lt;p&gt;After what seems quite a long time from when the idea was first mentioned to
change the name of my employer, it's finally happened, and they've got a &lt;a href="http://sensiblecode.io"&gt;new
website&lt;/a&gt; and everything. We still have the old company
mugs, sadly.&lt;/p&gt;
&lt;p&gt;I'd been helping out in renaming things. It's surprising just how deep
the hooks of a name go: email addresses, documentation, licences, even
mentions in code too. A more startlingly obvious case is that of a
website. And as there's now a new website, we don't really need to
maintain the old one anymore. Just taking everything down would be a
shame as there's lots of content on there that people have found
useful in the past.&lt;/p&gt;
&lt;h2 id="wordpress-migration"&gt;WordPress migration&lt;/h2&gt;
&lt;p&gt;Like many sites, it used WordPress. One option for migration away from
WordPress is to export the content as an XML file, which either various
other hosts may be able to import for you directly, or you can try
converting into a useful format yourself, e.g. if you're using a static
site generator to build a new site.&lt;/p&gt;
&lt;p&gt;We just wanted to archive the site, rather than move to a new site and
reuse the old content, which is a different task.&lt;/p&gt;
&lt;p&gt;There are several WordPress plugins that are supposed to convert your site into
a static one. However, none of the two I tried were successful; one just froze
without seemingly doing anything, while the other only pulled a couple of pages
from the site.&lt;/p&gt;
&lt;h2 id="gathering-the-site-content-with-wget"&gt;Gathering the site content with &lt;code&gt;wget&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;In the end, I resorted to &lt;a href="https://www.gnu.org/software/wget/"&gt;&lt;code&gt;wget&lt;/code&gt;&lt;/a&gt; which
did an admirably good job after a few attempts.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;wget&lt;/code&gt; is more often known as a command-line download tool, but is much more
powerful than a simple downloader. The downside with this is that there are
options present that you might not even know about until you try this kind of
site archiving, hit a problem and then discover which &lt;code&gt;wget&lt;/code&gt; option you should
have used to fix it. The upside is that &lt;code&gt;wget&lt;/code&gt; probably does feature the option
you require.&lt;/p&gt;
&lt;p&gt;After lots of trial and error, what I ended up with was (deep breath):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;wget --page-requisites --convert-links --adjust-extension --mirror --span-hosts --domains&lt;span class="o"&gt;=&lt;/span&gt;blog.scraperwiki.com,scraperwiki.com --exclude-domains beta.scraperwiki.com,classic.scraperwiki.com,media.scraperwiki.com,mot.scraperwiki.com,newsreader.scraperwiki.com,premium.scraperwiki.com,status.scraperwiki.com,x.scraperwiki.com scraperwiki.com
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Let's look at what each option does:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;--page-requisites&lt;/code&gt; collects other files need to render a HTML page,
  e.g.  images and CSS.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;--convert-links&lt;/code&gt; converts links in the retrieved document to one that
  will correctly display in the local mirror; this all happens at the
  end of a collection; if you check files while the collection is in
  progress, the links won't yet have changed.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;--adjust-extension&lt;/code&gt; gives HTML files an &lt;code&gt;.html&lt;/code&gt; file extension if
  they don't have one (&lt;code&gt;--convert-links&lt;/code&gt; adheres to these modified
  filenames too, so if a HTML file has a modified name, then the link to
  will be correct).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;--mirror&lt;/code&gt; is an alias for a series of options that facilitate
  mirroring a site.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;--span-hosts&lt;/code&gt; enables wget to move across different hostnames.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;--domains&lt;/code&gt; and &lt;code&gt;--exclude-domains&lt;/code&gt; list domains that &lt;code&gt;wget&lt;/code&gt; should or
  shouldn't retrieve content from.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Later the files from our multiple domains got moved into one directory for
simplicity. I think you could have done this using &lt;code&gt;--no-host-directories&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Running this command will then proceed to collect the content from the sites
you've allowed it to crawl.&lt;/p&gt;
&lt;h2 id="hosting-for-free"&gt;Hosting for free&lt;/h2&gt;
&lt;p&gt;If you have a free GitHub account and are competent enough with the
basics of &lt;code&gt;git&lt;/code&gt;, note that you can host static sites, also for free, on
GitHub Pages.  Introducing &lt;code&gt;git&lt;/code&gt; version control is an entirely other
post, but there are plenty of online tutorials. To do something like
this, don't feel overwhelmed by the different commands. You only really
need the basics, i.e. knowing how to create a new repository, add files
to it, make commits and push them to a remote repository.&lt;/p&gt;
&lt;p&gt;Another nice feature of preparing your static site in a version
controlled repository is that when you encounter things that need
fixing, you can try them and always be able to restore to an earlier
version, should you need to.&lt;/p&gt;
&lt;h2 id="problems-i-had-to-solve"&gt;Problems I had to solve&lt;/h2&gt;
&lt;h3 id="broken-links"&gt;Broken links&lt;/h3&gt;
&lt;p&gt;Initially, the links to images or other pages were broken, the
&lt;code&gt;--convert-links&lt;/code&gt; option fixed that.&lt;/p&gt;
&lt;h3 id="unrestricted-crawling"&gt;Unrestricted crawling&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;wget&lt;/code&gt; was crawling other scraperwiki.com domains than the ones we wanted and
collecting a lot of unnecessary content. All I needed was the main site, so I
specified the domains to exclude.&lt;/p&gt;
&lt;h3 id="removing-dynamic-features-in-the-static-site-version"&gt;Removing dynamic features in the static site version&lt;/h3&gt;
&lt;p&gt;Some features of the site, as expected, no longer functioned after collecting
the pages. For example, the comment and contact forms we had involve some
processing on the WordPress server, and therefore were displayed on the static
site, but didn't work.&lt;/p&gt;
&lt;p&gt;Removing this content is possible in a couple of ways. Either you could process
the HTML, using blunt instruments of find/replace, or the finer tools of
reprocessing the HTML with a proper parser, and remove the unwanted elements,
for instance using Python and &lt;a href="http://lxml.de"&gt;&lt;code&gt;lxml&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Easier still is just hiding the broken elements. Finding an appropriate
selector for those elements, and then adding a CSS rule for that
selector containing &lt;code&gt;display: none;&lt;/code&gt; (perhaps with &lt;code&gt;!important&lt;/code&gt; if
required) will hide them. This also preserves the HTML as it was without
mangling it.&lt;/p&gt;
&lt;p&gt;It probably won't affect you, but it's worth noting that automated bots
may well still be trying to trigger elements "hidden" in this way.
They're still on the page, just not displayed to normal users of the
site (unless they tweak the CSS). We had an odd issue possibly caused by
a redirect from the old site: bots were presumably attempting to submit
to a form on our new site, even though they were visiting the archive of
the old site. (It was flagged by the form provider asking us to approve
submissions from that URL.)&lt;/p&gt;
&lt;h3 id="query-strings-in-filenames"&gt;Query strings in filenames&lt;/h3&gt;
&lt;p&gt;This was caused by WordPress hosting resources with version query
strings in the URL, e.g.  CSS and JS. &lt;/p&gt;
&lt;p&gt;When &lt;code&gt;wget&lt;/code&gt; retrieved the files initially, it retained the &lt;code&gt;?&lt;/code&gt; and the
trailing part of the name, e.g. &lt;code&gt;jetpack.css?ver=4.1.1&lt;/code&gt;. The problem is
that the links also look like this too.  The "&lt;code&gt;?&lt;/code&gt;" gets interpreted by
clients as a query string, and not part of a static filename. In a
static version of the site, the query string won't work: the browser
requests the file without the &lt;code&gt;?&lt;/code&gt; and passes a (now) useless query
string. Our copy of the file actually has a filename of
&lt;code&gt;jetpack.css?ver=4.1.1&lt;/code&gt;, not &lt;code&gt;jetpack.css&lt;/code&gt;. We don't want the client to
request &lt;code&gt;jetpack.css&lt;/code&gt; with a query string of &lt;code&gt;?ver=4.1.1&lt;/code&gt;, but to
actually request a static file with the question mark in its name.&lt;/p&gt;
&lt;p&gt;I'm not entirely sure what fixed this; I didn't notice at first. From
some point onwards, the &lt;code&gt;?&lt;/code&gt; ended up getting encoded as &lt;code&gt;%3F&lt;/code&gt; which then
gets correctly requested as a filename with a question mark in it. Not
particularly clean, but it worked. It may have just been using a recent
version of &lt;code&gt;wget&lt;/code&gt; that solved this. This was nice as the alternative was
a horrendous find/replace task using commands like:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;find . -type f -exec grep -Iq . &lt;span class="o"&gt;{}&lt;/span&gt; &lt;span class="se"&gt;\;&lt;/span&gt; -and -exec sed -i
&lt;span class="s1"&gt;&amp;#39;s!wp-content/plugins/jetpack/css/jetpack.css?ver=4.1.1!wp-content/plugins/jetpack/css/jetpack.css!g&amp;#39;&lt;/span&gt;
&lt;span class="o"&gt;{}&lt;/span&gt; &lt;span class="se"&gt;\;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;to fix up the content by hand for every CSS and JS file. (You could optimise by
having &lt;code&gt;sed&lt;/code&gt; perform all the replacements in one command, rather than executing
the same find repeatedly, but I was verifying the changes by eye after
processing each filename; &lt;code&gt;git diff&lt;/code&gt; is useful here.) That equally worked, but
was much more work to check.&lt;/p&gt;
&lt;p&gt;Searching now, by far the simplest fix would be use a Wordpress plugin
to remove the query strings before archiving. There are a couple out
there.&lt;/p&gt;
&lt;h3 id="srcset-images"&gt;&lt;code&gt;srcset&lt;/code&gt; images&lt;/h3&gt;
&lt;p&gt;Some of our images were responsive &lt;code&gt;srcset&lt;/code&gt; images listed in &lt;code&gt;img&lt;/code&gt;
attributes.  Until recently, &lt;code&gt;wget&lt;/code&gt; didn't handle this, but from &lt;code&gt;wget&lt;/code&gt;
1.18, it supports &lt;code&gt;srcset&lt;/code&gt; images just as it does images in &lt;code&gt;src&lt;/code&gt;
attributes of &lt;code&gt;img&lt;/code&gt; elements. To clarify, it both correctly retrieves
the images &lt;em&gt;and&lt;/em&gt; updates the links. (I assume only when using
&lt;code&gt;--convert-links&lt;/code&gt;.)&lt;/p&gt;
&lt;h3 id="links-in-option-values"&gt;Links in option values&lt;/h3&gt;
&lt;p&gt;As part of the site archive navigation, there were links to option
values.  These weren't updated. I just hid those elements as it didn't
seem a critical part of the site.&lt;/p&gt;
&lt;h3 id="wordpress-emoji-code"&gt;WordPress emoji code&lt;/h3&gt;
&lt;p&gt;Recent versions of WordPress feature code to add emoji support for certain
browsers. This embedded JavaScript is in the HTML and was still pulling from
the old WordPress site because it contains an absolute URL within it. Saving
the file locally and correcting the URL is non-trivial as a relative URL
depends on how deep in the local mirror you are. The simplest solution was
disabling this feature, by adding the &lt;a href="https://wordpress.org/plugins/disable-emojis/"&gt;"Disable
Emojis"&lt;/a&gt; plugin to the
site, then recrawling.&lt;/p&gt;
&lt;p&gt;It's not essential to fix this, but means the static site is not making
requests for files that don't exist when you move from WordPress.&lt;/p&gt;
&lt;h3 id="fixing-up-incorrect-indexhtml-urls"&gt;Fixing up incorrect &lt;code&gt;index.html&lt;/code&gt; URLs&lt;/h3&gt;
&lt;p&gt;Lots of URLs on the original site ended with &lt;code&gt;/&lt;/code&gt;, rather than
&lt;code&gt;/some_page.html&lt;/code&gt;. &lt;code&gt;wget&lt;/code&gt; instead saved these pages with a filename of
&lt;code&gt;index.html&lt;/code&gt;. Fixing these up was a pain. In terms of making the site
work, this strictly wasn't necessary. GitHub Pages will respond with a
request to &lt;code&gt;foo/&lt;/code&gt; as the &lt;code&gt;index.html&lt;/code&gt; in the &lt;code&gt;foo&lt;/code&gt; directory, so any
existing links to the site would still work. However, fixing this does
ensure anyone sharing links to our pages uses the same URL as the pages
always had.&lt;/p&gt;
&lt;p&gt;I'm not even completely sure that this was entirely fixed correctly; there are
just too many URLs to verify, but it appeared to have the desired behaviour.
You can see the &lt;a href="https://github.com/scraperwiki/scraperwiki-site-archive/commit/73881788c40a427068e6af415a3a16399bdecffa"&gt;commit
message&lt;/a&gt;
for the code I used.&lt;/p&gt;
&lt;p&gt;Essentially, it used lots of regular expressions to substitute:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;foo/index.html&lt;/code&gt; to &lt;code&gt;foo/&lt;/code&gt;;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;foo/index.html#bar&lt;/code&gt; to &lt;code&gt;foo#bar&lt;/code&gt;;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;foo/baz.html&lt;/code&gt; to &lt;code&gt;foo/baz&lt;/code&gt;;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;foo/baz.html#foobar&lt;/code&gt; to &lt;code&gt;foo/baz#foobar&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;There are a few other tweaks I did to clean up URL links too. They are
detailed in the other &lt;a href="https://github.com/scraperwiki/scraperwiki-site-archive/commits/master"&gt;commit messages in the
repository&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id="some-other-redirect-problems"&gt;Some other redirect problems&lt;/h3&gt;
&lt;p&gt;For us, some redirects we had set up on the old site caused a couple of cases
where files ended up in the wrong place or with the wrong name compared with
the original site. We had to be careful to fix up relative URLs here. We also
had multiple copies of certain files. These weren't difficult to fix by
hand as there were only a few to modify.&lt;/p&gt;
&lt;p&gt;Finally, we had to correctly set up redirects to the new site in our server
configuration, and everything was finally done.&lt;/p&gt;
&lt;h2 id="moving-on"&gt;Moving on&lt;/h2&gt;
&lt;p&gt;After much work, the static version's now working well. Everything's
pretty much the same on &lt;a href="https://scraperwiki.com/"&gt;the site&lt;/a&gt; aside from
the interactive forms. It was much more of a task to get done than I'd
imagined. I think it was around half a day spent trying out &lt;code&gt;wget&lt;/code&gt;
options and another couple of days spent on resolving all the other
issues.&lt;/p&gt;
&lt;p&gt;The advantages are that we don't need to maintain a WordPress
installation to run the site and the site's getting hosted
for free.&lt;/p&gt;
&lt;p&gt;Good luck if you're tackling the same problem! Hopefully some of the
tips here might help you with your migration.&lt;/p&gt;</summary><category term="WordPress"></category></entry><entry><title>Stopping Windows from rebooting at the BitLocker boot password prompt</title><link href="http://www.stevenmaude.co.uk/posts/stopping-windows-from-rebooting-at-the-bitlocker-boot-password-prompt" rel="alternate"></link><published>2016-09-17T23:52:00+01:00</published><updated>2016-09-17T23:52:00+01:00</updated><author><name>Steven Maude</name></author><id>tag:www.stevenmaude.co.uk,2016-09-17:posts/stopping-windows-from-rebooting-at-the-bitlocker-boot-password-prompt</id><summary type="html">&lt;p&gt;Short post, but more noting this for myself more than anything. There
are several times when I've blogged little fixes and they've proven
handy to have in the future, e.g. when I'm setting up a new PC. Partly
because I know they're on my blog, and partly because the posts are
titled in the way I would search for a solution.&lt;/p&gt;
&lt;p&gt;If you have a Windows PC (I think 8 upwards; but definitely 10, and 8.1)
with BitLocker enabled, you may find that it reboots shortly without you
even doing anything. If you've a long password and aren't a quick
typist, you may even find that this means you struggle to enter your
password in time. This is apparently a problem if you have a UEFI install,
which will be a common configuration these days.&lt;/p&gt;
&lt;p&gt;Having just tested this simple fix that I saw on &lt;a href="https://social.technet.microsoft.com/Forums/office/en-US/932630c2-ae3d-4cbd-8d79-a492806363ea/windows-81-bitlocker-automatic-shutdown-during-password-prompt?forum=w8itproinstall"&gt;Microsoft's
forums&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;bcdedit /set {bootmgr} bootshutdowndisabled 1&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;it seems to have resolved the problem; the password prompt will remain on
indefinitely.&lt;/p&gt;</summary><category term="BitLocker"></category></entry><entry><title>What happens when GitHub decides you're not a human</title><link href="http://www.stevenmaude.co.uk/posts/what-happens-when-github-decides-youre-not-a-human" rel="alternate"></link><published>2016-09-11T23:47:00+01:00</published><updated>2016-09-11T23:47:00+01:00</updated><author><name>Steven Maude</name></author><id>tag:www.stevenmaude.co.uk,2016-09-11:posts/what-happens-when-github-decides-youre-not-a-human</id><summary type="html">&lt;blockquote&gt;
  &lt;p&gt;Human, human, human, human,&lt;br&gt;
     Human, human, human, human,&lt;br&gt;
     Human, human, human, human,&lt;br&gt;
     Human, human, human after all.
  &lt;/p&gt;
  &lt;cite&gt;Daft Punk — Human After All&lt;/cite&gt;
&lt;/blockquote&gt;

&lt;p&gt;I logged into GitHub this week and saw an unusual message:&lt;/p&gt;
&lt;p&gt;&lt;img class="article-image" src="http://www.stevenmaude.co.uk/images/2016/GitHub_not_human.png" alt="The GitHub message prompting me that I'm possibly not human."&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;One of our mostly harmless robots seems to think you are not a human.&lt;/p&gt;
&lt;p&gt;Because of that, it's hidden your profile from the public. If you really are
human, please contact support to have your profile reinstated. We promise we
won't require DNA proof of your humanity.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Putting aside the irony of GitHub detecting bots with their own
automated systems, one short email later, it was politely resolved in
ten minutes by GitHub's support team, who decided I was human after
all.&lt;sup id="fnref:1"&gt;&lt;a class="footnote-ref" href="#fn:1" rel="footnote"&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;h2 id="what-might-have-caused-it"&gt;What might have caused it?&lt;/h2&gt;
&lt;p&gt;Perhaps creating several similar looking repositories (albeit with different
code) in a relatively short space of time. These contain example code to access
&lt;a href="https://github.com/pdftables"&gt;the API&lt;/a&gt; that we offer at work. Maybe it's
because the commits looked similar, maybe because the commit messages or the
commit content contained a URL. Who can say?&lt;/p&gt;
&lt;h2 id="why-is-this-not-ideal"&gt;Why is this not ideal?&lt;/h2&gt;
&lt;p&gt;Despite the quick resolution, the way this situation is handled might be
flawed.&lt;/p&gt;
&lt;p&gt;First, though the warning was omnipresent, large and red, it didn't describe
the full nature of the problem. The phrase "hidden your profile from the
public" to me just implied that GitHub had hidden my profile page.&lt;/p&gt;
&lt;p&gt;Seemingly, I could still do and access everything as normal, albeit with a
warning on every page, so I didn't fully appreciate the consequences.&lt;/p&gt;
&lt;p&gt;From reading around, what apparently happens is that &lt;strong&gt;any repository
that's under your profile becomes a nice 404 error&lt;/strong&gt; to anyone who's not
you. I didn't check this firsthand (because I wasn't under any
impression that anything had really changed with my account).  If this
is true, that might create some issues which I'll discuss later in this
post.&lt;sup id="fnref:2"&gt;&lt;a class="footnote-ref" href="#fn:2" rel="footnote"&gt;2&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;p&gt;Second, they didn't send me any email warning at all, unless it went into my
junk mail. I only noticed because I logged into my account and there was a big
red banner at the top of every screen. What if I didn't log into GitHub at all
for a while?&lt;/p&gt;
&lt;p&gt;Finally, I assume that the process happens instantly when their system
considers you a bot. There's no grace period where you can confirm your
identity, before they hide your profile publically. It just gets hidden
and, what I suspect happens is, the first you know of it is when it has
been hidden.&lt;/p&gt;
&lt;h2 id="how-might-this-cause-problems"&gt;How might this cause problems?&lt;/h2&gt;
&lt;p&gt;Let's say that you have a very high profile project under your GitHub account
that lots of people rely on. Let's also suppose that this is the definitive
installation source.&lt;/p&gt;
&lt;p&gt;At least for Go projects, this may be true: Go developers will often host
projects on GitHub and that's the official source. Now, for whatever reason,
your account gets labelled as a bot, and perhaps all of a sudden, &lt;em&gt;your&lt;/em&gt;
software is unavailable to anyone else, potentially breaking &lt;em&gt;their&lt;/em&gt; software.
If this was a major problem, I'd imagine this would get fixed pretty promptly,
but still, it would be an inconvenience, and a baffling one for anyone
encountering it.&lt;/p&gt;
&lt;p&gt;Again, I'm prepared to be corrected on this. If this isn't how things
work, that's great. Maybe popular accounts, e.g. those with lots of
followers, or owning projects with lots of stars, have some protection
against this before their accounts are tagged in this way?&lt;/p&gt;
&lt;p&gt;If there is a possibility that this could actually happen though, then
if there was some kind of short delay and an email warning before
labelling your account as "not human", at least you'd have a chance to
fix up your account first, without your account temporarily becoming a
Ghost of GitHub Past.&lt;/p&gt;
&lt;h2 id="whats-the-relevance-to-other-online-services"&gt;What's the relevance to other online services?&lt;/h2&gt;
&lt;p&gt;This kind of situation isn't restricted specifically to GitHub. It does
illustrate features of online services that are ever present, but remain
latent until you encounter them. These are likely some variant of:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;the site owners can modify your account's privileges, disable your
  account, or even delete your account and all its content without
  warning.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;this might happen without any way of you appealing the decision;
  that's entirely down to the policies of the site.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;even if you behave in line with the site's terms and conditions, you
  may inadvertently break "rules" that the site owners don't even
  realise they have in place, but are instead derived by some automated
  machine learning system. In very much the same way that you might have
  experienced: has your bank ever suddenly prevented you from making a
  payment until you confirm the transaction? All of a sudden, you find
  yourself in the midst of some real life version of
  &lt;a href="https://en.wikipedia.org/wiki/Mao_(card_game)"&gt;Mao&lt;/a&gt; where you lose
  out because you don't even know what you did wrong.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="more-on-github"&gt;More on GitHub&lt;/h2&gt;
&lt;p&gt;OK, diversion aside, let's go back to speculating about GitHub accounts.
Let's go further than hiding my account for a short time. What if my
GitHub account was disabled entirely either for some period of time, or
even deleted permanently?&lt;/p&gt;
&lt;p&gt;A considerable amount of my work is done via GitHub. Using an
alternative would be a major inconvenience. With my employer, I'd have
to figure out some solution to resolving it, enabling me to contribute
again. That might mean moving to a competitor, or some self-hosted
solution, or that I submit patches instead. But who'd want to deal with
the overhead of working with patches from one developer when everyone
else is capable of just pushing straight to GitHub?&lt;/p&gt;
&lt;p&gt;Even if you're just coding in your free time, this is also a problem if
you want to assist with any of the numerous open source projects that
take contributions directly via GitHub.&lt;/p&gt;
&lt;p&gt;Another side issue if you're not rigorous with backups, you won't have
access to the repositories that you didn't have locally. However, GitHub
do state in their terms that they will attempt to "make a reasonable
effort to provide the affected account owner with a copy of their
account contents upon request".&lt;/p&gt;
&lt;p&gt;GitHub's terms do state you can only have one account. It's less clear
whether having an account disabled precludes you from signing up again.
Nonetheless, they do say that they can "refuse any and all current or
future use of the Service, or any other GitHub service, for any reason
at any time". So it may be that any future accounts you create may well
be subject to being disabled due to your prior history.&lt;/p&gt;
&lt;p&gt;The major online services are ubiquitous and have transformed the way
many people worldwide interact and work. It's worth remembering that
your continued ability to access them is never guaranteed. If you lose
access to services you use for leisure, it may well be frustrating. If
you're relying on them for work, you may find yourself dealing with big
problems that you very quickly need to solve.&lt;/p&gt;
&lt;p&gt;With GitHub, I'm still not sure what my solution would be for work if
GitHub permanently kicked me out from their site. As much as GitHub,
historically at least, do seem to be on the side of developers, and I've
very few complaints about the site,&lt;sup id="fnref:3"&gt;&lt;a class="footnote-ref" href="#fn:3" rel="footnote"&gt;3&lt;/a&gt;&lt;/sup&gt; it's still slightly concerning
that this gives them a position of power.&lt;/p&gt;
&lt;div class="footnote"&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li id="fn:1"&gt;
&lt;p&gt;Incidentally, it's weird thinking that it's more than possible
  that to some listeners these days, Daft Punk may well only be known as
  "that robot band that did some songs with Pharrell", despite having
  been around for more than twenty years.&lt;/p&gt;
&lt;p&gt;If, for whatever reason, you haven't heard the &lt;a href="https://www.youtube.com/watch?v=PXYeARRyDWk&amp;amp;list=PLSdoVPM5Wnne47ib65gVG206M7qp43us-"&gt;Human After
All&lt;/a&gt;
album, I'd go straight to &lt;a href="https://www.youtube.com/watch?v=lVKbF8khsrI&amp;amp;list=PLSdoVPM5WnndV_AXWGXpzUsIw6fN1RQVN"&gt;Alive
2007&lt;/a&gt;
where those tracks work a lot better in context, rather than the
isolation of individually being played out; they're closer to the
realm of DJ tools that work magnificently live.&amp;#160;&lt;a class="footnote-backref" href="#fnref:1" rev="footnote" title="Jump back to footnote 1 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn:2"&gt;
&lt;p&gt;Some other thoughts: I have no idea what happens to open pull
  requests, are they still visible? Can you create new pull requests?
  What happens to organisations where you're the sole member? What
  happens to GitHub pages under your profile? Again, no idea.&amp;#160;&lt;a class="footnote-backref" href="#fnref:2" rev="footnote" title="Jump back to footnote 2 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn:3"&gt;
&lt;p&gt;Out of the main competitors, I've used Bitbucket considerably, and
  prefer GitHub, although Bitbucket is better in that personal private
  repositories don't require you to pay. The little use I've had of
  GitLab I've found very confusing. (Admittedly, that confusion may not
  have been helped by not being in charge of the GitLab group I was
  contributing to, so it was awkward trying to get permissions
  configured.)&amp;#160;&lt;a class="footnote-backref" href="#fnref:3" rev="footnote" title="Jump back to footnote 3 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</summary><category term="GitHub"></category></entry></feed>