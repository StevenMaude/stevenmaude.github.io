<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>stevenmaude.co.uk</title><link href="http://www.stevenmaude.co.uk/" rel="alternate"></link><link href="http://www.stevenmaude.co.uk/feeds/all.atom.xml" rel="self"></link><id>http://www.stevenmaude.co.uk/</id><updated>2015-12-30T23:30:00+00:00</updated><entry><title>Using Garmin Forerunner watches with Linux</title><link href="http://www.stevenmaude.co.uk/posts/using-garmin-forerunner-watches-with-linux" rel="alternate"></link><updated>2015-12-30T23:30:00+00:00</updated><author><name>Steven Maude</name></author><id>tag:www.stevenmaude.co.uk,2015-12-30:posts/using-garmin-forerunner-watches-with-linux</id><summary type="html">&lt;p&gt;I'm now the owner of a Garmin GPS watch. When I was looking at GPS
watches, I couldn't find a huge amount of information on using them with
Linux. This post concerns the Forerunner 15 (FR15) particularly, but
think may well apply to several others in that range that function as
USB storage devices, with the usual "your mileage may vary" caveats.&lt;/p&gt;
&lt;h2&gt;Can you use it with Linux?&lt;/h2&gt;
&lt;p&gt;Yes, to some extent. Though you won't be able to use all the fancy
display features on Garmin's site. That said, I'm not bothered about
that and would actually prefer to keep my data offline, especially with
the number of website data breaches there have been recently.&lt;/p&gt;
&lt;p&gt;The FR15 shows up as a normal USB storage device so you can copy over
.FIT files from the watch directly and work with them on your computer.
My run data was stored in &lt;code&gt;GARMIN/ACTIVITY&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Note that, when researching this, you may read older posts about the
unofficial Garmin Communication web browser plugin that was capable of
uploading data to Garmin's servers.  This no longer functions and &lt;a href="https://github.com/adiesner/GarminPlugin/issues/14"&gt;this
GitHub issue&lt;/a&gt;
suggests it won't be fixed anytime soon.&lt;/p&gt;
&lt;h3&gt;Installing GPSBabel&lt;/h3&gt;
&lt;p&gt;The next job is to get the FIT files into a format that's more widely
usable.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.gpsbabel.org/"&gt;GPSBabel&lt;/a&gt; is a application for Windows, OS X
and Linux that lets you convert between GPS data formats, including
converting Garmin's FIT (Flexible and Interoperable Data Transfer)
format into .GPX (GPS Exchange Format) which is well supported by
various free, open source applications.&lt;/p&gt;
&lt;p&gt;Support for FIT was added to GPSBabel in versions 1.4.3 and later,
judging from the &lt;a href="https://www.gpsbabel.org/changes.html"&gt;GPSBabel
changelog&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If your distribution's repositories have an older version, you'll need
to compile it from source. In Ubuntu, it was reasonably straightforward
to clone it from &lt;a href="https://github.com/gpsbabel/gpsbabel"&gt;GitHub&lt;/a&gt; and then
do the following:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;./configure --prefix&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$HOME&lt;/span&gt;/.local
make
make install
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Using &lt;code&gt;prefix&lt;/code&gt; in &lt;code&gt;configure&lt;/code&gt; allows you to &lt;a href="https://unix.stackexchange.com/a/42569"&gt;install to a local
directory&lt;/a&gt; and avoids the need
for &lt;code&gt;sudo&lt;/code&gt; in &lt;code&gt;make install&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The only hiccup was that the &lt;code&gt;configure&lt;/code&gt; step gave the error message:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="go"&gt;configure: error: Qt4 or Qt5 is required, but neither was found&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;a href="https://stackoverflow.com/questions/16607003/qmake-could-not-find-a-qt-installation-of"&gt;The fix&lt;/a&gt;
was to do the following:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo apt-get install qtcreator
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;which was probably overkill as it installed a lot of packages, but
compiling then worked. (I then removed &lt;code&gt;qtcreator&lt;/code&gt; via &lt;code&gt;apt-get
remove&lt;/code&gt;.)&lt;/p&gt;
&lt;h3&gt;Converting Garmin's FIT data to GPX&lt;/h3&gt;
&lt;p&gt;An example use of GPSBabel is:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;gpsbabel -i garmin_fit -f input.FIT -o gpx -F output.gpx
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This gives you a GPX file which can be loaded into far more software. &lt;/p&gt;
&lt;p&gt;As a quick test, I loaded the output GPX file into
&lt;a href="https://apps.ubuntu.com/cat/applications/viking/"&gt;Viking&lt;/a&gt; which seems a
little bit limited, but at least let me visualise speed against time,
and see where I've been.&lt;/p&gt;
&lt;p&gt;There are web apps out there that will save you this hassle and do the
conversion for you, but, again, I'd rather keep my location data to
myself.&lt;/p&gt;
&lt;p&gt;(Some of the high-end watches also have the ability to send the data to
Garmin via Bluetooth to mobile apps that collect the data, so that's
another way you could avoid the requirement for Windows or OS X.)&lt;/p&gt;
&lt;h3&gt;Upgrading the watch's firmware&lt;/h3&gt;
&lt;p&gt;My watch came with the latest firmware installed and the watch has been
out a while, so I doubt there are any major issues remaining. But, there
may still be further updates as it's still a supported product.&lt;/p&gt;
&lt;p&gt;The official update method is via Garmin's Windows or OS X software. If
you search their site, you can find that updates exist, but you're told
to use Garmin Express to install them.&lt;/p&gt;
&lt;p&gt;However, it is possible to find download URLs for firmware updates, if
you look in the HTML source. For instance, the &lt;a href="http://download.garmin.com/software/Forerunner15_270.rgn"&gt;current FR15
firmware&lt;/a&gt; is
available via direct download using any client you like, albeit via
insecure http. (I haven't tested the official software, it may well use
the same links.)&lt;/p&gt;
&lt;p&gt;I haven't needed this information yet, but there are &lt;a href="https://forums.garmin.com/archive/index.php/t-103787.html"&gt;more details
regarding a different
model&lt;/a&gt; on the
Garmin forums, but may well be relevant here. As a post there states,
you may need to remove 60 bytes of an extraneous header using &lt;code&gt;tail&lt;/code&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;To verify that an original file needs this header-removing, open it
with &lt;code&gt;hexdump -C [Download FileName] | head&lt;/code&gt;. You should see it
starting with the string KpGrd The main watch firmware has two of
those KpGrd headers, but we only remove the first one.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Also bear in mind that there may be multiple firmware files to update,
e.g. the watch firmware itself, as well as language files and the ANT
firmware. And apparently &lt;em&gt;all&lt;/em&gt; these need the header removing. Anyway,
you can search Garmin's site for e.g. "Forerunner 15 update" and see
what you find.&lt;/p&gt;
&lt;h2&gt;What's the watch actually like?&lt;/h2&gt;
&lt;p&gt;I've only started using it today, but it seems good at what it does. I
tracked a run and, at a glance, the data looked consistent with where
I'd been and how I'd run.&lt;/p&gt;
&lt;p&gt;It's a basic model, but capable. It's got what seems like a decent
battery, apparently eight hours in active GPS use. Anecdotally, I headed
out taking it straight from the box without charging and it was flashing
an empty battery warning for most of the run (an hour or so), but still
managed to record the entire distance.&lt;/p&gt;
&lt;p&gt;It's also waterproof which was handy since I was caught up in a heavy
downpour while out. And it didn't feel noticeably less comfortable or
more cumbersome than the (near-weightless) Casio digital watch that I'm
usually wearing.&lt;/p&gt;
&lt;p&gt;There are also activity tracker features available to count steps and
calories, though I'm less concerned about those. Recording a run for
later inspection, tracking my heart rate, distance travelled and time
elapsed while running, and keeping my best times are the features I
really want. And the FR15 does all of these things.&lt;/p&gt;
&lt;p&gt;The FR15 was on offer when I bought it. Would I have paid the full
retail price? I don't know. At that price and adding on an optional
heart rate monitor bundled, it's very similar in price to higher-end
watches like Garmin's 225.&lt;/p&gt;
&lt;p&gt;On the other hand, I did look into more expensive watches and all of
them, at least the Garmin watches, seemed to have drawbacks. There
wasn't an obvious candidate that stood out as the one to get.&lt;/p&gt;
&lt;p&gt;As a starter watch, the FR15 seems like a good deal, especially as it
seems we're in a time where the technology's still improving. (Perhaps
indicative of that, Garmin, much to the chagrin of unlucky purchasers,
released a newer version of their FR225 only a few months after they
launched it.) There's also competition from the likes of Fitbit and
Jawbone which will probably push improvements to these devices in
future. Newer, more expensive watches are already switching over to
wrist monitoring of heart rate instead of using more traditional heart
rate bands.&lt;/p&gt;
&lt;p&gt;So, if this is technology that I use long term, then the next step would
be to a watch featuring wrist heart rate monitoring and cadence
measurement. Nonetheless, the expandability of the FR15 is a bonus: you
can use a separate ANT heart rate monitor (it optionally is bundled with
one), as well as a footpod. Excluding these extras keeps the price down,
but it's still possible to augment the device with these features in
future; I've already ordered a heart rate monitor.&lt;/p&gt;
&lt;p&gt;The one downside of the design I've seen so far is that I think the
battery will be a chore to replace when it expires. It's not officially
user-replaceable. That drawback aside, it seems a decent choice.&lt;/p&gt;</summary><category term="Garmin"></category><category term="Forerunner"></category><category term="Linux"></category><category term="GPS"></category><category term="running"></category></entry><entry><title>Beatmatching to beat grid in Traktor</title><link href="http://www.stevenmaude.co.uk/posts/beatmatching-to-beat-grid-in-traktor" rel="alternate"></link><updated>2015-12-21T13:50:00+00:00</updated><author><name>Steven Maude</name></author><id>tag:www.stevenmaude.co.uk,2015-12-21:posts/beatmatching-to-beat-grid-in-traktor</id><summary type="html">&lt;h2&gt;Tracks that beat Traktor's beat detection&lt;/h2&gt;
&lt;p&gt;Traktor's not always perfect in automatic beat detection. I was trying to set
the correct beats per minute (bpm) value for a particular track and not having
a lot of luck with the tap function that Traktor provides. The estimated bpm
kept jumping around on each click.&lt;/p&gt;
&lt;p&gt;If you're not familiar, a tap feature is common in music software for beat
detection: tap a button along to the beat of the music, and after a few clicks,
you should have a fairly good estimation of what the bpm is.&lt;/p&gt;
&lt;p&gt;Another option you have is to manually adjust the beat grid to set the bpm; the
beat grid is a series of line markers that you want to mark the track's beats.
It acts as a visual guide for the user that shows whether the bpm is set
correctly.&lt;/p&gt;
&lt;p&gt;This is a chore as it requires fine adjustment. You'll end up clicking a lot to 
stretch or compress the grid and correct it. Also, if you're zoomed in to precisely
align this, you can't see if everything's still OK further along the track
without going back and forth, like Cameo.&lt;/p&gt;
&lt;h2&gt;Beatmatching to find the bpm&lt;/h2&gt;
&lt;p&gt;The last time I was contemplating doing this I realised that if you can
beatmatch by ear, then to find an unknown track's bpm, you can simply beatmatch
to a track with a known good bpm. It's more fun too as you're actually
&lt;em&gt;listening&lt;/em&gt; to the music and DJing, rather than &lt;em&gt;click-click-clicking&lt;/em&gt; like
you're gold farming in some video game.&lt;/p&gt;
&lt;p&gt;Once you're happy that the tracks are beatmatched, if you have the current bpm
for the known good track displayed — you can change what's displayed in each
deck's heading in Preferences — then that should give you the correct bpm for
the track with unknown bpm. You can then type this in where the bpm is
displayed on the "Grid" panel for the deck playing the track.&lt;/p&gt;
&lt;p&gt;All that's left to do is seek to the first downbeat and add that as a beat grid
cue point (use the "Cue" panel for the deck) and the track should be ready for
beatmatching. Traktor usually does a decent job on finding that downbeat
though.&lt;/p&gt;
&lt;p&gt;That would be all, except you might only have a correct bpm for the particular
section you've been listening to: it's possible that the bpm fluctuates. If the
beat detection fails, this is quite a common problem, particularly for older
pieces of music which weren't created digitally and may drift slightly due to
human timing. A fix for this is to just work with a loop in the track which
does have a sufficiently steady bpm to mix. You can add loops in the "Cue"
panel.&lt;/p&gt;
&lt;p&gt;While I'm here, I should wistfully wish that Native Instruments would improve
the beat matching aspect. Using multiple beat markers, Ableton's capable of
adjusting — "warping" they call it — the track to fix it such that it has a
consistent tempo, something that Traktor lacks. So, I'm still saving for
Ableton.&lt;/p&gt;</summary><category term="Traktor"></category><category term="beatmatching"></category><category term="DJ"></category><category term="beat grid"></category></entry><entry><title>As easy as 123(-reg)</title><link href="http://www.stevenmaude.co.uk/posts/as-easy-as-123-reg" rel="alternate"></link><updated>2015-12-11T17:04:00+00:00</updated><author><name>Steven Maude</name></author><id>tag:www.stevenmaude.co.uk,2015-12-11:posts/as-easy-as-123-reg</id><summary type="html">&lt;h2&gt;Two factor or not two factor&lt;/h2&gt;
&lt;p&gt;We're living in the future right now: it's almost 2016. Almost as unbelievably,
123-reg &lt;em&gt;still&lt;/em&gt; haven't implemented any kind of two factor authentication for
their site.&lt;/p&gt;
&lt;p&gt;From their own &lt;a href="https://www.123-reg.co.uk/blog/security-issues/how-to-create-a-strong-password-and-protect-your-online-life/"&gt;blog&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Two-factor authentication adds another layer of protection and you should use
it where it is available.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Well, yeah, I would. If I could.&lt;/p&gt;
&lt;p&gt;It's stupid for me to not be using a registrar that provides two factor
authentication. Get control of the domain and you could hijack my website or my
email.&lt;/p&gt;
&lt;p&gt;It's also stupid on their part not to implement this. It's a security feature I
expect as standard on important web services these days. And I'm sure that I'm
not the only person who's decided to leave or not use their service as a
result. Moreover, the implication of no two factor support does have me
questioning what else they can't be bothered to do security-wise.&lt;/p&gt;
&lt;p&gt;Apart from this issue, I wouldn't say I'd be exactly content, but I'd have the
apathy towards transferring my domain out that many people have towards
switching bank accounts, rather than any more urgent impetus to leave.&lt;/p&gt;
&lt;p&gt;As I don't ever really use the 123-reg site itself, I don't really have a
problem with them not redesigning it in years. The only major outage I've
knowingly experienced in over 12 years(!) of being with them is that email was
&lt;a href="http://www.theregister.co.uk/2006/12/18/123_says_sorry/"&gt;hideously delayed&lt;/a&gt; a
few years back. However, when reading about domain transfer, I also learned of
some recent &lt;a href="http://www.mayne.net/123reg-domain-name-hostage"&gt;moneygrabbing
tricks&lt;/a&gt; they've
tried.&lt;sup id="fnref:1"&gt;&lt;a class="footnote-ref" href="#fn:1" rel="footnote"&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;p&gt;Searching around for other domain registrars, it seems there is no single
standout provider. You can find complaints about every one, so it's a bit of a
crapshoot in choosing one. Namecheap were, true to their branding, a name that
was reasonably cheap. And, they appeared to have no more complaints than any
other provider.&lt;/p&gt;
&lt;p&gt;But as a prelude to committing to moving, I figured I'd buy some other domain
names with Namecheap and see what I made of the site. My first impressions were
that the initial signup and buying services from Namecheap was pretty easy.
Their dashboard also simple to navigate and fairly fresh looking. This is a
marked improvement on the 123-reg control panel that is well overdue for a
modern, clean redesign.&lt;/p&gt;
&lt;p&gt;The final thing to give me the confidence to start looking into domain transfer
was the quick response I received from Namecheap in resolving an issue when
extending my domain name expiry. So, I started delving into the murky waters of
domain transfers.&lt;/p&gt;
&lt;h2&gt;12(free)-reg&lt;/h2&gt;
&lt;p&gt;When you dive in, you find the depths are actually not as bad as they first
look. Certainly, the process isn't actually that complicated. The confusing
part is navigating around help pages that usually tell an incomplete story of
what you need to do to move your domain. Neither 123-reg nor Namecheap did a
great job here: I ended up reading several different pages to do something
that's, I imagine, a reasonably common procedure for their customers.&lt;/p&gt;
&lt;p&gt;To give you an idea, I probably spent about five to ten minutes actually making
changes on the old and new domain registrar's sites, and probably spent ten
times that time reading around, and double and triple checking what I was
doing. I didn't want to bungle the whole thing and spend hours in dialogue with
support to resolve it.&lt;/p&gt;
&lt;h2&gt;Migrating .uk domains&lt;/h2&gt;
&lt;p&gt;One important note is that .uk domains are handled a bit differently to others.
The stages you need to carry out and avoid downtime aren't much more than:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;set up new name servers on your new registrar, and copy over whichever
   existing DNS settings are needed from your current registrar to the new one;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;change name servers on your current registrar to those of the new registrar
   and wait for this to be updated everywhere;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;maybe&lt;/em&gt; you need to make WHOIS data public (not sure if this is absolutely
   necessary for UK domains);&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;change the Internet Provider Security (IPS) tag on your current registrar to
   that of the new registrar;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;request a transfer in at your new registrar.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Again, all that matters for .uk domains is the IPS tag. Anything you read about
EPP authorisation code or lock status just doesn't apply at all for them.&lt;/p&gt;
&lt;p&gt;Also note by .uk domains, this is &lt;em&gt;any&lt;/em&gt; .uk domain, i.e. this applies for
stevenmaude.co.uk, not just stevenmaude.uk.&lt;/p&gt;
&lt;h2&gt;How to move from 123-reg to Namecheap&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;First, set up FreeDNS on Namecheap. Add your existing domain as detailed
   &lt;a href="https://www.namecheap.com/support/knowledgebase/article.aspx/536/51/how-do-i-set-my-domain-to-use-namecheaps-freedns-service"&gt;here&lt;/a&gt;.
   If you want to potentially activate that more quickly, note that you can
   prompt for an activation email. This also means you don't need to change
   name servers before you activate should you wish. You'll receive a link to
   activate the FreeDNS service in that case.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Go to Advanced DNS on Namecheap's dashboard and copy over entries from the
   123-reg Advanced DNS settings. There were a couple of 123-reg IP addresses
   in there which I didn't move as they were no longer needed. Everything else
   I just copied over by hand. MX records are added in Namecheap by selecting
   "Custom MX" in "Mail Settings" which is in the Advanced DNS dashboard.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Optional&lt;/strong&gt;: if you were using web forwarding and want to preserve it, you
   can set this up on Namecheap's Manage options for the domain ("Redirect
   Domain") or go to Advanced DNS and add entries manually. See their
   &lt;a href="https://www.namecheap.com/support/knowledgebase/article.aspx/385/77/how-do-i-setup-url-forwarding-for-a-domain"&gt;help pages&lt;/a&gt;
   for more.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Go to 123-reg's control panel and select the option to add name servers to
   your domain. I added two of Namecheap's FreeDNS servers.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Possibly optional&lt;/strong&gt;: you may need to make the WHOIS contact details public
   for the domain if they're not already. Go to 123-reg's control panel and do
   this. You may wish to change the address first to one which you're happy
   with making publically accessible.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Check the new name servers have been added and that they work. Windows, Linux
   and OS X all have a &lt;code&gt;whois&lt;/code&gt; command you can use to see if the name servers
   are at least visible on the DNS server you're accessing. You may see this
   change fairly quickly e.g. within a few seconds or minutes.&lt;/p&gt;
&lt;p&gt;My way of testing that the name servers were working as expected was to add
a temporary web forwarding rule on the new registrar which didn't exist on
the old one. Once I could confirm that redirect worked, I could remove the
rule. As I was confident things were working OK, I then removed the 123-reg
name servers from my domain, leaving only the FreeDNS ones there.&lt;/p&gt;
&lt;p&gt;If you can verify that everything is working OK, you should now wait
sometime for the settings to propagate everywhere. 123-reg currently
recommend &lt;a href="https://www.123-reg.co.uk/support/answers/Domains-Archive/Domain-Configuration/why-do-people-always-tell-me-that-my-dns-changes-take-24-48-hours-to-propagate-2653/"&gt;48 hours&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;As mentioned, make sure you've waited for the name server changes to
   propagate before continuing. Do something exciting in the meantime.
   Or just sleep.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Change the IPS tag on 123-reg to Namecheap's IPS tag as detailed in the
   &lt;a href="https://www.123-reg.co.uk/support/answers/Domain-Transfers/Transfers-Out/how-do-i-change-the-ips-tag-on-my-domain-name-1264/"&gt;123-reg help&lt;/a&gt;.
   Enter Namecheap's IPS tag which you can find
   &lt;a href="https://www.namecheap.com/support/knowledgebase/article.aspx/260/8/what-is-an-ips-tag"&gt;here&lt;/a&gt;.
   If they've changed the link, a search for "IPS tag site:namecheap.com" will
   probably get you to the right place to find it.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Go through the Namecheap transfer, select your domain in the dashboard and
   select "Transfer in". You'll probably have to pay them some money. The
   process should hopefully begin and be complete within an hour or two.&lt;sup id="fnref:2"&gt;&lt;a class="footnote-ref" href="#fn:2" rel="footnote"&gt;2&lt;/a&gt;&lt;/sup&gt; My
   transfer only took maybe half an hour or even less. You can see the status
   of your transfer in the Namecheap dashboard.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Finally, check that the FreeDNS has changed to the normal DNS, and that
    all of your DNS records are still present.&lt;/p&gt;
&lt;p&gt;For some reason, in the advanced DNS, the mail settings had changed from
"Custom MX" to "No Email Service". Email still appeared to work in the
meantime, and the records were all still there when I reselected "Custom
MX" which was odd.&lt;/p&gt;
&lt;p&gt;While here, you may also wish to set the public WHOIS to private if your
domain is for use by a "UK Individual".&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;And that's it!&lt;/p&gt;
&lt;div class="footnote"&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li id="fn:1"&gt;
&lt;p&gt;I wasn't charged for changing IPS tag; no idea if 123-reg changed their
  policy for everyone or it's because the domain was registered long ago.&amp;#160;&lt;a class="footnote-backref" href="#fnref:1" rev="footnote" title="Jump back to footnote 1 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn:2"&gt;
&lt;p&gt;It's a little disconcerting that all this happens without receiving any
  email to the domain contact to confirm the move. I'm not sure what
  procedure's in place to prevent someone else transferring your domain to
  the same registrar but under their control, once you've changed the IPS
  tag...&amp;#160;&lt;a class="footnote-backref" href="#fnref:2" rev="footnote" title="Jump back to footnote 2 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</summary><category term="domain"></category><category term="Namecheap"></category><category term="registrar"></category><category term="transfer"></category></entry><entry><title>Getting an official Windows 10 disk image</title><link href="http://www.stevenmaude.co.uk/posts/getting-an-official-windows-10-disk-image" rel="alternate"></link><updated>2015-10-26T17:00:00+00:00</updated><author><name>Steven Maude</name></author><id>tag:www.stevenmaude.co.uk,2015-10-26:posts/getting-an-official-windows-10-disk-image</id><summary type="html">&lt;p&gt;Currently looking to test out installing Windows 10 and one stumbling block was
just getting hold of an official disk image. (I'm cautious these days and want
to see how setting up a dual boot encrypted Windows 10/Ubuntu goes on a spare
drive prior to actually committing to an upgrade.)&lt;/p&gt;
&lt;h2&gt;Start me up&lt;/h2&gt;
&lt;p&gt;The obvious searches for installing Windows 10 inevitably lead you to &lt;a href="https://www.microsoft.com/en-gb/software-download/windows10"&gt;this
page&lt;/a&gt; where it
tells you to install the Media Creation tool and use that.&lt;/p&gt;
&lt;p&gt;Critically, that's not an option if you don't have access to a current Windows
install. (Yes, it should be easy enough to find a Windows PC &lt;em&gt;somewhere&lt;/em&gt;
around, but there might not be one to hand.) The other drawback is that, as far
as I can see without testing, is that it only creates media for one particular
version of Windows, so you'd have to run through the process twice for Home and
Pro.  The actual ISO disk image is buried on the site under &lt;a href="https://www.microsoft.com/en-us/software-download/techbench"&gt;"Tech
Bench"&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Though the filename differed, the 64-bit download from that page &lt;em&gt;did&lt;/em&gt; match
the SHA1 as listed on the MSDN site as of 2015-10-23:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;File Name: en_windows_10_multiple_editions_x64_dvd_6846432.iso
Languages: English
SHA1: 60CCE9E9C6557335B4F7B18D02CFE2B438A8B3E2
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Note that there's a 90-day Win10 Enterprise
&lt;a href="https://www.microsoft.com/en-us/evalcenter/evaluate-windows-10-enterprise"&gt;trial&lt;/a&gt;,
but there was no checksum at all to verify that download, and you need a
Microsoft account just to get to the download. It also had the following
ambiguous information:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;In order to use Windows 10 Enterprise, you must sign in to your PC with a
Microsoft account. The option to create a local account will be made available
at the time of the final release.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;which was unclear as to whether this still applies or not.&lt;/p&gt;
&lt;h2&gt;Clean installing Windows 10&lt;/h2&gt;
&lt;p&gt;The other question I had was which version, Home or Pro, gets installed from
this single ISO. If it's a clean install, how is the version to install (Home
or Pro) determined? From what I remember reading, the answer should be that if
you skip entering a product key on request by the installer (which would
automatically install the appropriate version if you provide a key), the
installer prompts you to choose the version to install.&lt;/p&gt;</summary><category term="Windows"></category><category term="ISO"></category><category term="disk"></category></entry><entry><title>Thinking of using a static site generator for your blog?</title><link href="http://www.stevenmaude.co.uk/posts/thinking-of-using-a-static-site-generator-for-your-blog" rel="alternate"></link><updated>2015-07-19T00:37:00+01:00</updated><author><name>Steven Maude</name></author><id>tag:www.stevenmaude.co.uk,2015-07-18:posts/thinking-of-using-a-static-site-generator-for-your-blog</id><summary type="html">&lt;p&gt;When I first thought about moving from Blogger to Pelican, it was
because I'd had more than enough of Blogger's drawbacks. What hadn't
crossed my mind, because I had no experience of using them, were the
problems that static site generators could have. At the time, my hunch
was that it wasn't possible for them to be worse than Blogger.&lt;/p&gt;
&lt;p&gt;As it turns out, that was the case. But, they are not entirely perfect
and, going through this migration, I better understood what the
good and the bad of static site generators are. If you're thinking of
making a similar migration, these points might give you an idea of what
you might deal with in shifting.&lt;/p&gt;
&lt;p&gt;While I'm familiar with Pelican and Blogger, most of the points apply
generally so could still be informative for you if you're considering a
move from, say, Wordpress to Jekyll.&lt;/p&gt;
&lt;h2&gt;Converting and writing content (Markdown)&lt;/h2&gt;
&lt;h3&gt;Bad&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Depending on what you used to create a blog previously, and how much
    content you had on your old blog, it may be time consuming to move
    content. Even armed with a &lt;a href="https://github.com/getpelican/pelican/pull/1390"&gt;fork of Pelican&lt;/a&gt; where
    someone helpful had added Blogger conversion, the output
    wasn't perfect and still had plenty of residual cruft that had to be
    fixed up by hand.&lt;sup id="fnref:1"&gt;&lt;a class="footnote-ref" href="#fn:1" rel="footnote"&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Markdown's quick to write with, but only gives you a small subset of
    HTML and so doesn't handle every eventuality. There are dialects of
    Markdown which expand this with more layout options that may be
    available in your blog software of choice.&lt;/p&gt;
&lt;p&gt;With Pelican at least, it's possible to use
&lt;a href="http://pandoc.org/"&gt;Pandoc&lt;/a&gt; via a
&lt;a href="https://github.com/liob/pandoc_reader"&gt;plugin&lt;/a&gt;. Pandoc is one of
the more versatile Markdown converters, but does introduces another
dependency. Pelican also offers reStructuredText support which has
support for more formatting options than vanilla Markdown, but just
isn't as nimble to write.&lt;/p&gt;
&lt;p&gt;Instead, I opted to occasionally allow fall back to raw HTML in
posts, mainly for handling images. This isn't ideal, but is a decent
compromise that's at least compatible with different Markdown
implementations.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Good&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;All my content is in fairly plain Markdown which I love writing in.
    It also means that I'm far less locked into Pelican than I was ever
    tied into Blogger. Should I wish to switch to another static site
    generator, only the metadata and Python-Markdown specific tweaks may
    need adjusting.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Adding content to the site and hosting&lt;/h2&gt;
&lt;h3&gt;Bad&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;My git repositories are structured in a way that I like: blog HTML,
    the theme I use, my Pelican configuration, my Markdown posts, and
    the post images are all separate. However, for making small
    adjustments to posts, this is a nuisance: you need to edit the post
    and remember to push that, &lt;em&gt;then&lt;/em&gt; generate the HTML, &lt;em&gt;then&lt;/em&gt; move
    that into the HTML repository and finally push that to GitHub. I
    usually do this via branches too, which is more work too (though
    this is my choice). Improving this workflow is on my to-do list.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Good&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;My blog's not trapped within Google's servers. Certainly, I'm wary
    of how much Google's hands are present in much of what I do on the
    web, whether through hardware devices I use, their search tools or
    through websites that use features like Google Analytics and Fonts
    (including mine). At least the blog's now hosted elsewhere and
    Analytics and Fonts that the site's using could, in the worst case,
    be removed entirely, or replaced with alternatives.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;In fact, the blog's not really dependent on the whims of any service
    owner at all. If GitHub stop hosting, I can take the HTML and host
    it elsewhere. With Blogger, you're at Google's mercy: if they ever
    decided to drop Blogger, then you'd be forced to switch to a new
    blog platform.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;All the content is tracked within a git repository. This means it's
    version controlled, and there's no easy way to obliterate posts.
    With Blogger, at least once, I foolishly attempted to edit multiple
    posts in separate browser tabs and subsequently lost the content of
    one of them. Luckily, I had a window open with the web version of
    the post to recover it. Having only a single canonical copy of
    posts stored in Google's servers was clearly not a good thing.
    (Wordpress is better in that it's possible to store multiple
    revisions of posts.)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You have much more control of the post URLs; Blogger posts always
    have the year and date in them.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Blog hosting using my own domain name on GitHub is free of charge.
    This is also free on Blogger. If you use wordpress.com, you'll need
    to pay; if you're using your own Wordpress installation, using your
    own domain is free, but it's likely you'll need to pay for hosting.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Appearance and viewer experience&lt;/h2&gt;
&lt;h3&gt;Bad&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;With Pelican (probably much less so for Jekyll), there's not a huge
    range of themes. If you're fussy like me, you may need to spend some
    time tweaking, or creating your own. &lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Good&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;My site now functions without the viewer needing JavaScript. With
    Blogger, you used to only see half the page content. If JavaScript
    is disabled now, the only issue is that the mobile menu doesn't
    open, which is far less of a problem.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;There's no awful separate mobile version of the site. On Blogger,
    the template I used had an unfriendly feature where swiping would
    navigate away from the page to the previous or next article. This
    could be triggered quite unintentionally by trying to pinch to zoom.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Often my posts are on programming. Having code snippets that look
    nice without me having to do anything is a great bonus. In Blogger,
    you'd need a JavaScript plugin for syntax highlighting.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Running the generator&lt;/h2&gt;
&lt;h3&gt;Bad&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Static site generators are not for the impatient. For Pelican, being
    comfortable with Python is a big help, though not essential.
    Pelican — and I imagine this applies to Jekyll too — isn't difficult
    to get a basic blog up and running, but to get the result you want
    may take you considerable work.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If you have a very large number of posts, the time it takes to build
    your site may become an issue. With 61 posts and 1 page, my site
    takes 2 to 3 seconds on my Core i5 PC. If the site starts taking
    minutes to build, that may become a chore. This would be
    particularly frustrating if editing posts and wanting to quickly
    preview how the changes look since, with Pelican, the entire site is
    rebuilt when running the development server.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Good&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Pelican is nice to use, and I had very few problems in doing so.
    Most of my effort was spent on converting content and amending the
    theme to my liking. Though the community's relatively small, it does
    seem like there are more blog posts and activity compared with when
    I first looked into it last year.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Pelican, and many other static site generators, are &lt;a href="http://opensource.org/"&gt;open source&lt;/a&gt; software. This means they are free
    to use, and free to modify (and share those modifications). The
    implication is that, as long as there are developers interested in
    it, it's likely that it will continue to be supported and developed.
    Even in the unlikely event that everyone else abandons it and you're
    the only user, you can still continue modifying it. (This also
    applies to Wordpress' source too incidentally.)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Living with a static site&lt;/h2&gt;
&lt;p&gt;When worrying about the limitations that static sites may have, think
about the actual minimum you need on a web site to share and present
written ideas and thoughts you have. It's really not very much; do you
&lt;em&gt;really&lt;/em&gt; need everything that Wordpress offers?&lt;/p&gt;
&lt;p&gt;Overall, I'm pleased with the result. When I'd started thinking about
moving, I'd got fed up of using clunky old Blogger, which feels
distinctly unloved by Google.&lt;/p&gt;
&lt;p&gt;Being able to write directly in the format (Markdown) that the blog
actually uses is a real convenience. (Note that Wordpress offers this
option too.) Along with that, the blog looking fresher than it did is a
bonus. These features, more than perhaps anything else, actually makes
me want to add new content to my blog, which is more than I could say
that Blogger ever did for my inspiration.&lt;/p&gt;
&lt;div class="footnote"&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li id="fn:1"&gt;
&lt;p&gt;You can see exactly how much work in the early commits
&lt;a href="https://github.com/StevenMaude/blog-content/commits/master"&gt;here&lt;/a&gt;.&amp;#160;&lt;a class="footnote-backref" href="#fnref:1" rev="footnote" title="Jump back to footnote 1 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</summary><category term="Blogger"></category><category term="Pelican"></category><category term="Wordpress"></category><category term="static site"></category></entry><entry><title>Restoring a tag cloud dispersed by Pelican 3.6.0</title><link href="http://www.stevenmaude.co.uk/posts/restoring-a-tag-cloud-dispersed-by-pelican-360" rel="alternate"></link><updated>2015-07-12T11:51:00+01:00</updated><author><name>Steven Maude</name></author><id>tag:www.stevenmaude.co.uk,2015-07-12:posts/restoring-a-tag-cloud-dispersed-by-pelican-360</id><summary type="html">&lt;h2&gt;The case of the disappearing tag cloud&lt;/h2&gt;
&lt;p&gt;As you can probably tell — if not from the posts mentioning Pelican,
then the giveaway is the footer of each page — my site is currently
built using &lt;a href="https://github.com/getpelican/pelican"&gt;Pelican&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Noticing there was a new version this week, I eagerly updated and then
tried building my site. No errors, I thought, so everything must be
fine.&lt;/p&gt;
&lt;p&gt;Unfortunately, on loading the site, the tag cloud had vanished&lt;sup id="fnref:1"&gt;&lt;a class="footnote-ref" href="#fn:1" rel="footnote"&gt;1&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;
&lt;p&gt;Over the next twenty minutes or so, I slowly figured out the cause: the
Pelican code that creates this had been moved out to a separate plugin.
(If only I'd checked the &lt;a href="http://docs.getpelican.com/en/3.6.0/faq.html#my-tag-cloud-is-missing-broken-since-i-upgraded-pelican"&gt;Pelican
docs&lt;/a&gt;
first, I would have saved the time...) From there, it's a simple fix.
Install the plugin, add it to your &lt;code&gt;PLUGINS&lt;/code&gt; in &lt;code&gt;pelicanconf.py&lt;/code&gt; and the
tag cloud will be restored.&lt;/p&gt;
&lt;h2&gt;Installing Pelican plugins&lt;/h2&gt;
&lt;p&gt;One small frustration is that the official plugin
&lt;a href="https://github.com/getpelican/pelican-plugins"&gt;repository&lt;/a&gt; is, if maybe
not monolithic, a substantial size. The appeal of a central repository
does make some sense. It provides a single location for developers to
add functionality to Pelican and means users can issue one command to
get access to everything at once.&lt;/p&gt;
&lt;p&gt;But my hunch is that users probably only want a few of the numerous
plugins: seventy at the time of writing. Also, when a plugin is updated
by its author, they additionally have to put a pull request into the
plugins repository to keep the submodule or files stored there in sync,
which is extra work for everyone involved too.&lt;/p&gt;
&lt;h2&gt;My tag cloud plugin fork&lt;/h2&gt;
&lt;p&gt;One solution for installing the plugin would be to write a simple shell
script that does the cloning and just keeps the tag plugin. Instead, I
felt that it would be both simpler and more sensible — rather than
retrieving many plugins that I don't need — to install the plugin via
the existing &lt;code&gt;requirements.txt&lt;/code&gt; in my blog configuration. (The other
plugin I use, &lt;a href="https://github.com/Nitron/pelican-alias/"&gt;pelican-alias&lt;/a&gt;,
is installed this way in my setup.) &lt;/p&gt;
&lt;p&gt;So, I made the plugin  &lt;code&gt;pip&lt;/code&gt; installable (available
&lt;a href="https://github.com/StevenMaude/pelican-tag-cloud"&gt;here&lt;/a&gt;) and added that
to my requirements for what seems like a neater solution. The only
downside is that I have to ensure that this plugin is updated when the
original code is. For this plugin however, I suspect that updates would
be irregular.&lt;/p&gt;
&lt;div class="footnote"&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li id="fn:1"&gt;
&lt;p&gt;If the site's not changed since I wrote this, then it's the one
that shows up in the upper right sidebar.&amp;#160;&lt;a class="footnote-backref" href="#fnref:1" rev="footnote" title="Jump back to footnote 1 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</summary><category term="Pelican"></category><category term="tag cloud"></category><category term="plugin"></category></entry><entry><title>Blogger versus Wordpress revisited</title><link href="http://www.stevenmaude.co.uk/posts/blogger-versus-wordpress-revisited" rel="alternate"></link><updated>2015-06-06T14:46:00+01:00</updated><author><name>Steven Maude</name></author><id>tag:www.stevenmaude.co.uk,2015-06-06:posts/blogger-versus-wordpress-revisited</id><summary type="html">&lt;p&gt;If you look back, the &lt;a href="http://www.stevenmaude.co.uk/posts/blogger-versus-wordpress"&gt;first post&lt;/a&gt;
on this blog was agonising over what blogging system to use. At the
time, my reasoning for choosing Blogger was that it was quick to get
started with.&lt;/p&gt;
&lt;p&gt;And that was true. Provided you already have a Google account, you can
make a blog in a few clicks. There's a simple interface for entering
posts: you can enter raw HTML or use something that looks more like a
word processor. Even if you know very little about how the web works, it
makes publishing straightforward. It's cost-free to use too, even if
you're using your own domain name.&lt;/p&gt;
&lt;p&gt;However, the limitations of Blogger soon became apparent:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;The default templates available look dated. (Though you could well
  modify them or install one from elsewhere). Furthermore, for the
  default template I used, which was fairly plain, it wasn't even
  possible to read the site properly without JavaScript: half of the
  page content would not be displayed. Code snippets, which I've often
  used in posts, are also hard to read because there's no syntax
  highlighting.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The mobile template for Blogger interprets swiping left or right
  across the screen as meaning that you want to move to a different
  article. This is frustrating enough even when you know about it as
  it's easy to trigger unintentionally. It's more confusing for someone
  visiting your site for the first time. As mobile internet browsing
  increases, the needs of viewers on those devices becomes more
  important.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Personally, I found writing posts on Blogger to be clumsy. The WYSIWYG
  editor is quite limited. If you want anything outside of the fairly
  limited feature set (for example, footnotes, or more control over
  images), you need to edit the HTML directly. The HTML that the editor
  creates seems to get polluted with unnecessary tags quite often,
  especially if you're switching fonts (e.g. between code and non-code
  sections).&lt;/p&gt;
&lt;p&gt;I've also accidentally lost work due to having two copies
of the post creator open, with one overwriting the contents of the
other unintentionally on save.&lt;/p&gt;
&lt;p&gt;To work around this, towards the end of my Blogger use, I was
writing posts in Markdown&lt;sup id="fnref:1"&gt;&lt;a class="footnote-ref" href="#fn:1" rel="footnote"&gt;1&lt;/a&gt;&lt;/sup&gt; completely separately, converting them
from Markdown to HTML, then pasting the HTML into Blogger, fixing
up things and adding images. Writing posts in Markdown was
convenient, the subsequent wrangling of the HTML output to Blogger
was not.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The current, published form of the blog posts is that which is
  stored in Google's servers. Keeping a local copy and
  tracking any changes made in posts was a chore, so I never bothered.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Blogger isn't software available for you to run on your own computer,
  so you're at
  Google's mercy. If Google change something that you find particularly
  detrimental, or if they ever decided to drop it completely, you'll be
  forced elsewhere.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;So, what are the alternatives?&lt;/p&gt;
&lt;p&gt;The main off the shelf solutions seem to be Wordpress or static site
generators. Wordpress is &lt;strong&gt;very&lt;/strong&gt; popular for building blogs, and
actually resolves many of my Blogger complaints.&lt;/p&gt;
&lt;p&gt;One big plus is that it's open source (see &lt;a href="https://wordpress.org"&gt;wordpress.org&lt;/a&gt;).
This means you can run it anywhere you like, though you'll have to pay
to host it somewhere. Alternatively, you can host your blog at
&lt;a href="https://wordpress.com"&gt;wordpress.com&lt;/a&gt; for free, albeit with possible
ads and without the use of your own domain name. Resolving these
problems is simple: just give them money!&lt;/p&gt;
&lt;p&gt;Wordpress is also a step up from Blogger in terms of customisability,
with a much larger user community around it. Because of this, there's
far more in the way of themes and plugins to tweak your blog how you
want it. Researching just now, I discovered 
&lt;a href="https://en.support.wordpress.com/markdown/"&gt;Markdown&lt;/a&gt; is supported
for writing posts, which is great. And some previous history of your
posts are saved (25 revisions at the time of writing), with the
ability to &lt;a href="https://en.support.wordpress.com/posts/post-revisions/"&gt;revert and compare
them&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;But, having used Wordpress at work, there were still three big reasons
why Wordpress didn't seem a suitable replacement:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Cost of hosting.&lt;/strong&gt; This isn't particularly high, but my blog is just
  a side project, so I'd rather keep the costs minimal. Blogger is
  free: any other possible solution is competing with that.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Wordpress uses PHP, which I know nothing about.&lt;/strong&gt; It's unlikely, but
  if I ever did want to do any low-level customisation, I'd need to
  learn it.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Wordpress seems too heavy-handed for what I need&lt;/strong&gt;: a simple way of
  presenting text-based articles on the web. This is reflected both in
  its frequent security updates (though an &lt;a href="https://codex.wordpress.org/Configuring_Automatic_Background_Updates"&gt;automatic update option&lt;/a&gt;
  is available) and its byzantine menus which ordinarily see me
  clicking every option exhaustively until I find the setting I want to
  change.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;That's not to say Wordpress is a bad option — lots of sites do use it
— just that it wasn't the right option for me. For my use case, which is
sharing things I've written, static site generators seemed a better fit.
I'll describe the advantages of those in a later post.&lt;/p&gt;
&lt;div class="footnote"&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li id="fn:1"&gt;
&lt;p&gt;Markdown is a simple way to mark up plain text with your intended
  formatting using annotations that you might already be accustomed
  to. For example, to indicate bold text you would type
  &lt;code&gt;**important point**&lt;/code&gt; to give the output &lt;strong&gt;important point&lt;/strong&gt;. Its
  original use was to create HTML simply, but it can also be
  converted into many other formats using tools like
  &lt;a href="http://pandoc.org/"&gt;pandoc&lt;/a&gt;.&amp;#160;&lt;a class="footnote-backref" href="#fnref:1" rev="footnote" title="Jump back to footnote 1 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</summary><category term="Blogger"></category><category term="Wordpress"></category></entry><entry><title>Hiding draft articles in Pelican</title><link href="http://www.stevenmaude.co.uk/posts/hiding-draft-articles-in-pelican" rel="alternate"></link><updated>2015-06-01T13:53:00+01:00</updated><author><name>Steven Maude</name></author><id>tag:www.stevenmaude.co.uk,2015-05-31:posts/hiding-draft-articles-in-pelican</id><summary type="html">&lt;p&gt;What I thought I'd get done in a week, actually took about four
months. But I'm finally free of Blogger and have moved to
&lt;a href="http://docs.getpelican.com"&gt;Pelican&lt;/a&gt; for creating my blog. I'll be
writing more about how I migrated soon.&lt;/p&gt;
&lt;p&gt;As I approached the end of that lengthy migration, I found myself
writing new draft articles that I wanted to ensure didn't actually make
their way into my publication directory.&lt;/p&gt;
&lt;h2&gt;Writing blog posts&lt;/h2&gt;
&lt;p&gt;The way that I usually approach writing blog posts is that, as
I reach the end of writing them, I'll start reading in the final display
format, i.e. as a web page. This helps spot any mistakes that
I might miss from my eyes glazing over at a text editor, and helps me
spot formatting problems.&lt;/p&gt;
&lt;p&gt;But, you might be working on multiple articles at once, so you want to
publish while you still have draft articles in your &lt;code&gt;content&lt;/code&gt; directory.&lt;/p&gt;
&lt;p&gt;Here's a few ways to prevent posts from being accidentally published,
without needing to do file juggling of your drafts in and out of the
&lt;code&gt;content&lt;/code&gt; directory.&lt;/p&gt;
&lt;h2&gt;Marking as draft and &lt;code&gt;.gitignore&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;Any articles we stick in the &lt;code&gt;content&lt;/code&gt; directory will end up in our
&lt;code&gt;output&lt;/code&gt; directory, right? Not if we do like
&lt;a href="http://docs.getpelican.com/en/latest/content.html"&gt;the documentation says&lt;/a&gt;
and add &lt;code&gt;Status: draft&lt;/code&gt; to the metadata.&lt;/p&gt;
&lt;p&gt;Building your site will then place draft articles in a &lt;code&gt;drafts&lt;/code&gt;
directory, and the articles therein aren't linked from anywhere. This
might be useful if you want to share a link with someone to get feedback
on a post before you officially publish it.&lt;/p&gt;
&lt;p&gt;Using a &lt;code&gt;.gitignore&lt;/code&gt; file in your &lt;code&gt;output&lt;/code&gt; directory is also an option
if you're using &lt;code&gt;git&lt;/code&gt; to push new versions of your blog for publication.
Add &lt;code&gt;drafts/&lt;/code&gt; to your &lt;code&gt;.gitignore&lt;/code&gt; and you'd have to make a deliberate
effort to add them for publication.&lt;/p&gt;
&lt;h2&gt;Stopping Pelican from seeing the draft posts&lt;/h2&gt;
&lt;p&gt;The other option is to just prevent Pelican from seeing draft posts
completely.&lt;/p&gt;
&lt;p&gt;This does mean that they won't appear in your local preview of your
site, not even as an unlinked page.&lt;/p&gt;
&lt;h3&gt;Using Pelican's &lt;code&gt;IGNORE_FILES&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;Putting "draft" in the filename of any drafts is another option. Then,
you can use the &lt;code&gt;IGNORE_FILES&lt;/code&gt; setting in &lt;code&gt;pelicanconf.py&lt;/code&gt; to
specifically ignore the drafts.&lt;/p&gt;
&lt;p&gt;Note that if you specify a setting in your Pelican configuration files,
the defaults get overridden. This means that you'll need to copy over
the existing settings from the defaults too. Otherwise, you'll
unintentionally change your configuration.&lt;/p&gt;
&lt;p&gt;For instance, the &lt;a href="http://docs.getpelican.com/en/latest/settings.html"&gt;default&lt;/a&gt;
&lt;code&gt;IGNORE_FILES&lt;/code&gt; setting is &lt;code&gt;IGNORE_FILES = ['.#*']&lt;/code&gt; so we'll need to
add &lt;code&gt;IGNORE_FILES = ['.#*', '*draft*']&lt;/code&gt; to our Pelican settings.&lt;/p&gt;
&lt;h3&gt;Hiding the files completely (in Ubuntu, at least)&lt;/h3&gt;
&lt;p&gt;Under Linux, I thought that preceding the filename with a dot would hide
posts from Pelican, but it doesn't seem to. However, sticking a tilde on
the end of the filename does seem to prevent Pelican from seeing the
post.&lt;/p&gt;
&lt;p&gt;One side-effect is that if you use a text editor that creates backup
files with a tilde on the end, your backup files will actually have
&lt;strong&gt;another&lt;/strong&gt; tilde on the end (e.g. &lt;code&gt;my_draft_post.md~~&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;(Maybe marking files as hidden in Windows would have the same effect?
Haven't tried this.)&lt;/p&gt;</summary><category term="draft"></category><category term="article"></category><category term="Pelican"></category></entry><entry><title>Taking control of Chromium (and Chrome) with ublock and HTTP Switchboard</title><link href="http://www.stevenmaude.co.uk/posts/taking-control-of-chromium-and-chrome" rel="alternate"></link><updated>2015-08-02T17:24:00+01:00</updated><author><name>Steven Maude</name></author><id>tag:www.stevenmaude.co.uk,2014-09-28:posts/taking-control-of-chromium-and-chrome</id><summary type="html">&lt;div class="admonition article-edit"&gt;
&lt;p&gt;Edit 2015-07-24: Slightly involved story aside, the version of
uBlock linked here, by the original developer, is now uBlock Origin.
I'd recommend searching for that version if installing as an
extension.&lt;/p&gt;
&lt;p&gt;It's available for both Firefox and Chrome/Chromium.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="admonition article-edit"&gt;
&lt;p&gt;Edit 2015-05-18: The Chromium bug is fixed which should fix the uMatrix
UI sluggishness, and uMatrix is finally available as a Firefox addon.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="admonition article-edit"&gt;
&lt;p&gt;Edit 2015-01-09: HTTP Switchboard development is discontinued and has been
replaced with &lt;a href="https://github.com/gorhill/uMatrix"&gt;uMatrix&lt;/a&gt;. The
interface is largely unchanged. One problem at the time of writing is a
&lt;a href="https://github.com/gorhill/uBlock/issues/419"&gt;Chromium bug&lt;/a&gt; which I
think is the cause of the UI being really laggy to appear. Hopefully,
this should be fixed soon.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;After tinkering around with Adblock's filters to block some ads, I
remembered that I'd read about an alternative to Adblock for
Chromium-based browsers called &lt;a href="https://github.com/gorhill/httpswitchboard"&gt;HTTP
Switchboard&lt;/a&gt; a few months ago
and figured I should actually give it a try.&lt;/p&gt;
&lt;p&gt;One of the reasons that HTTP Switchboard was notable is that it promised
to be much more CPU and memory friendly than &lt;a href="https://blog.mozilla.org/nnethercote/2014/05/14/adblock-pluss-effect-on-firefoxs-memory-usage/"&gt;Adblock Plus&lt;/a&gt;
currently is.&lt;/p&gt;
&lt;p&gt;In fact, the adblocking part of HTTP Switchboard has now been separated
out into another project, ublock. Both are still useful. I'll explain
why below.&lt;/p&gt;
&lt;h2&gt;Why are you blocking content at all?&lt;/h2&gt;
&lt;p&gt;Many content-driven websites use advertising as their business model. My
feeling is that, while sites are welcome to try and send content to my
browser, I should have the freedom to choose what my browser actually
loads.&lt;/p&gt;
&lt;p&gt;There's no contract I've signed that states I must load and display the
page as the site owner intends. (What if I'm using a text browser like
links?) And there's no obligation on my part to make their business
model sustainable.&lt;/p&gt;
&lt;p&gt;Maybe you still think this seems selfish. Well, to some extent it is.
But, my privacy and computer security are more important to me than the
financial success or failure of an external organisation. That I put my
priorities in this order is kind of obvious though, right?&lt;/p&gt;
&lt;h2&gt;Why shouldn't sites and advertisers worry so much?&lt;/h2&gt;
&lt;p&gt;Even with "despicable" users like me, there are two reasons I can think
of as to why advertisers and sites dependent on them shouldn't feel so
glum:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Adblocking users have made an active choice to block ads. Those
    users have done you a favour in removing themselves from your
    viewership as you don't waste time targeting them; why chase
    "customers" running in the opposite direction from you?&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Browsing is increasingly done from mobile browsers. How many users
    are going to bother to root their devices or install alternative
    browsers just for adblocking?&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;But why worry about where displayed web content originates from?&lt;/h2&gt;
&lt;h3&gt;Privacy&lt;/h3&gt;
&lt;p&gt;One contentious issue with ads and cookies is privacy.&lt;/p&gt;
&lt;p&gt;As &lt;a href="http://www.economist.com/news/special-report/21615871-everything-people-do-online-avidly-followed-advertisers-and-third-party"&gt;this Economist
article&lt;/a&gt;
highlights,
the depth of what advertisers collect about your browsing habits is
extensive, and it's handled and passed around by many organisations.
Unless you're all for being advertised at, this isn't for your benefit.&lt;/p&gt;
&lt;p&gt;Maybe advertisers are really all benign and just interested in deciding
who's best to try to sell to. Perhaps just as the executive in that
article quoted claims, it really is just that,&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;"We are not trolling for personal information. We are trying to figure
out if you are a high-value customer and are in the market for a car."&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;But, the sheer amount of information being collected is worrying,
especially when, as a user, I've no idea of what's actually being
tracked and what the intended end use is.&lt;/p&gt;
&lt;h3&gt;Malware&lt;/h3&gt;
&lt;p&gt;As well as that, web advertising has been a conduit for the deployment
of malware previously and will no doubt continue to be. (It's a nice way
of distributing it to users who are visiting, what to them, might seem
like a trustworthy site. If they can get the malicious ad past the
company providing the advertising, they don't need to go to the trouble
of hacking the site directly.)&lt;/p&gt;
&lt;p&gt;There have been
&lt;a href="http://arstechnica.com/security/2014/09/google-stops-malicious-advertising-campaign-that-could-have-reached-millions/"&gt;one&lt;/a&gt;
or &lt;a href="http://www.washingtonpost.com/blogs/the-switch/wp/2014/01/04/thousands-of-visitors-to-yahoo-com-hit-with-malware-attack-researchers-say/"&gt;two&lt;/a&gt;
high-profile incidents this year too.&lt;/p&gt;
&lt;p&gt;In terms of potentially malicious content, it's not only just ad
providers that I'm concerned with, but allowing large numbers of
arbitrary sites to run their scripts on your machine unchecked.&lt;/p&gt;
&lt;p&gt;Look at the recent &lt;a href="http://www.zdnet.com/was-jquery-hacked-7000034009/"&gt;JQuery
compromise&lt;/a&gt;, for
instance. Fortunately, only the site itself was affected and &lt;strong&gt;not&lt;/strong&gt; the
hosted libraries that many sites. It's not inconceivable that an
attacker may well deliberately go after to poison hosted libraries. It's
just way too big a jackpot for malware distributors to ignore.&lt;/p&gt;
&lt;p&gt;Even if such an attack might be spotted quite quickly, how many users
could be affected in the interim? (I'm not even sure what the solution
is here; often JQuery's needed for sites to function as intended...)&lt;/p&gt;
&lt;p&gt;Minimising the number of third-party sites that you allow content to
load from can't be a bad thing. (There's some risk wherever you go, but
in some cases, I've seen sites loading in content from more sites than I
can count on both hands.)&lt;/p&gt;
&lt;h2&gt;Controlling what your browser displays&lt;/h2&gt;
&lt;p&gt;So, what can you do? There are browser extensions for Firefox and Chrome
that give you more control over what your browser loads.&lt;/p&gt;
&lt;p&gt;Lots of sites are perfectly readable without them storing tracking
information about you, without arbitrary JavaScript running. For those
that don't, it's quite simple to whitelist them.&lt;/p&gt;
&lt;p&gt;The downside of this is that it can be a chore. In Firefox, I need a
slew of extensions to do this: which sites are allowed to run scripts
(NoScript), which cross-site requests are allowed (RequestPolicy), and
which sites can store cookies (CookieMonster).&lt;/p&gt;
&lt;p&gt;Managing each one in turn, allowing permissions for cookies, scripts and
third-party scripts, can be tedious. I've run NoScript for a long time,
but these days with sites often hosting content and scripts somewhere
other than on the domain you're visiting, it's much more work than it
was.&lt;/p&gt;
&lt;p&gt;HTTP Switchboard was a big, all encompassing project for Chromium-based
browsers that had features comparable to Adblock Plus, and the Firefox
extensions, NoScript, RequestPolicy. Recently, the &lt;a href="https://github.com/gorhill/httpswitchboard/issues/378"&gt;adblocking,
pattern-based filtering&lt;/a&gt;
has been split out into another project,
&lt;a href="https://github.com/gorhill/ublock"&gt;ublock&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;ublock&lt;/h2&gt;
&lt;p&gt;By virtue of what HTTP Switchboard aims to do — give you full control of
what is allowed by your browser — this makes its user interface slightly
more complex, which I'll soon get onto.&lt;/p&gt;
&lt;p&gt;&lt;img class="article-image" src="http://www.stevenmaude.co.uk/images/2014/ublock.png" alt="The ublock enable/disable icon." width="174"&gt;&lt;/p&gt;
&lt;p&gt;Stripping out this sophistication seems like a smart move, since
ublock's incredibly easy to use. Really, it requires the same amount of
setup as Adblock Plus does: not much at all.&lt;/p&gt;
&lt;p&gt;It comes with the most popular Adblock Plus filters accessible on
install, and you can easily choose which of those filter lists are
applied.&lt;/p&gt;
&lt;p&gt;Disabling ublock for a site is also straightforward. Click the red µ
icon next to the address bar and then click the power icon.&lt;/p&gt;
&lt;p&gt;It does the same job as Adblock Plus, but with lower CPU and memory
usage. If you've ditched an ad blocker for this reason, it's worth
looking at. Even if you're still happy using Adblock Plus (or one of its
forks), ublock is definitely worth spending the couple of minutes to try
it out.&lt;/p&gt;
&lt;h2&gt;HTTP Switchboard&lt;/h2&gt;
&lt;p&gt;On to HTTP Switchboard, which allows fine grained control of the types
and locations of content that Chromium-based browser can access.&lt;/p&gt;
&lt;p&gt;Note that with the current version of HTTP Switchboard, there's a little
&lt;a href="https://github.com/gorhill/httpswitchboard/issues/378"&gt;initial setup&lt;/a&gt; to
disable the adblocking filtering that uBlock covers.&lt;/p&gt;
&lt;p&gt;HTTP Switchboard's interface can feel initially overwhelming; more so
than perhaps the likes of NoScript, RequestPolicy and CookieMonster that
I use which all have similar menus to allow or deny permission for a
site to run scripts or store cookies. These have a text explanation of
what the option does.&lt;/p&gt;
&lt;figure class="article-figure"&gt;
  &lt;img src="http://www.stevenmaude.co.uk/images/2014/Firefox_menus.png" alt="Examples of NoScript, CookieMonster and RequestPolicy permission menus."&gt;
  &lt;figcaption&gt;From left to right, examples of NoScript, CookieMonster and RequestPolicy permission menus when accessing Google Books.&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;The problem with this menu format is, though it's explicit and clear,
it's cumbersome when you're dealing with several extensions. For each
extension, you need to repeat the process of whitelisting every site
that you're allowing.&lt;/p&gt;
&lt;p&gt;When you've actually used HTTP Switchboard for a few minutes, its
simplicity clicks. HTTP Switchboard opts for a table-like interface.
Each site is represented as a row, and each type of content is shown as
a column.&lt;/p&gt;
&lt;figure class="article-figure"&gt;
  &lt;img src="http://www.stevenmaude.co.uk/images/2014/HTTP_Switchboard.png" alt="Example of HTTP Switchboard's table interface."&gt;
  &lt;figcaption&gt;Example of HTTP Switchboard's interface when accessing Google Books.&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;This lets the user approve different permissions for different sites
quickly. Just read down the list of sites, click on those you want to
whitelist completely, and for those you don't you can allow specific
features only (e.g. loading images only). Likewise, if you want to
enable one type of content for all sites, just click the appropriate
column. If you want to save the permissions in future, click the padlock
icon, and you're done.&lt;/p&gt;
&lt;p&gt;It helps a lot that you can see &lt;strong&gt;all&lt;/strong&gt; the sites that are trying to
load content or save cookies in one glance, rather than consulting
separate menus.&lt;/p&gt;
&lt;p&gt;There's an autoreload option that refreshes the page when you change
permissions, so once you've approved everything needed, the page should
then work as expected.&lt;/p&gt;
&lt;p&gt;Out of the box, (I think) HTTP Switchboard was configured to allow most
requests through, apart from those blacklisted by filters. What
initially confused me was at what level the filters apply. (Do they
apply to this site? To this domain? globally?).&lt;/p&gt;
&lt;p&gt;What I'd recommend is, like the extension developer, is to
&lt;a href="https://github.com/gorhill/httpswitchboard/wiki/How-to-use-HTTP-Switchboard:-Two-opposing-views"&gt;block everything&lt;/a&gt;
by default and then whitelist only what you want to allow.&lt;/p&gt;
&lt;p&gt;There's an option in the HTTP Switchboard settings under "more security"
to create a new site-specific scope for every site you visit which is
really useful. This creates a set of rules for each site you visit.
Furthermore, the drop down (click the blue top-left box with the site
name in) lets you select where the rule applies (to the site, to the
domain or globally).&lt;/p&gt;
&lt;p&gt;This lets you block content from, say, a site like twitter.com when
you're visiting a third-party site, but allow it when you're directly
visiting Twitter.&lt;/p&gt;
&lt;p&gt;It also has some nice bonus privacy features, like removing HTTP
referers when visiting non-whitelisted sites and a user-agent
randomiser.&lt;/p&gt;
&lt;p&gt;The only thing that's missing for me is guidance on what the sites
likely are. If you're happy to spend a few seconds researching, it's not
hard to figure this out. It might save a bit of time if there was a
database of sites telling you "hey, you might need this, it's a content
delivery network" or "this is tracking how you're using the site; you
probably don't need it for the site to function properly". Yes, I can
search, but it's a bit clunky to do that.&lt;/p&gt;
&lt;h2&gt;A summary&lt;/h2&gt;
&lt;p&gt;These are really great browser extensions, and credit to Raymond Hill
for an awesome job on them. Every time I'm managing permissions with
multiple extensions in Firefox now, I sigh a little. (Firefox's awesome
bar is far more useful to me than Chrome/ium's omnibox though, so I tend
to stick with Firefox.)&lt;/p&gt;
&lt;p&gt;Longer term, I'd really hope that a Firefox add-on developer &lt;a href="https://github.com/gorhill/uBlock/issues/27"&gt;picks up
the baton to port these&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;(As a postscript, I should point out that as well as adblocking and
control over requests, &lt;a href="https://www.eff.org/https-everywhere"&gt;HTTPS Everywhere&lt;/a&gt;
is another useful privacy-enhancing extension for Firefox and Chromium
browsers. Where HTTPS browsing is available on sites but not always used,
HTTPS Everywhere enables it for you.)&lt;/p&gt;</summary><category term="ad"></category><category term="µBlock"></category><category term="HTTP Switchboard"></category><category term="blocking"></category><category term="privacy"></category><category term="adblock"></category><category term="ublock"></category></entry><entry><title>Updating and rooting Moto G</title><link href="http://www.stevenmaude.co.uk/posts/updating-and-rooting-moto-g" rel="alternate"></link><updated>2014-08-25T18:34:00+01:00</updated><author><name>Steven Maude</name></author><id>tag:www.stevenmaude.co.uk,2014-08-25:posts/updating-and-rooting-moto-g</id><summary type="html">&lt;h2&gt;My Moto G has been nagging me to upgrade firmware&lt;/h2&gt;
&lt;p&gt;So I did today.&lt;/p&gt;
&lt;p&gt;(I was persuaded by the Motorola system updater. Not because it's a
lovely looking bit of software, but because it makes nagging an art with
its focus-stealing prompt. If you go for the "no" option, your phone
kindly reminds you again in an hour &lt;strong&gt;every hour&lt;/strong&gt;, just in case you've
forgotten. This is regardless of what you're doing at the time, even if
you're say using Google Maps for driving navigation which is quite
hideous. Even the option to postpone the reminder for a week or a month
would be nice. A rubbish, rubbish, rubbish user experience.)&lt;/p&gt;
&lt;p&gt;A simple upgrade is as easy as pressing "upgrade". Because my phone was
rooted and encrypted, the upgrade was likely to fail, so I had to
restore it to stock firmware first.&lt;/p&gt;
&lt;p&gt;However, I wanted to then reroot it so that I could use
&lt;a href="https://github.com/M66B/XPrivacy"&gt;XPrivacy&lt;/a&gt;. This lets you restrict the
permissions that apps have. Google did have App Ops in Android which did
a similar thing (without quite as much granularity, I believe) but
promptly removed it. It would have been good of them to leave it in: it
would have removed one reason I have for rooting. Android apps are just
far more intrusive in their permissions than they usually need to be.&lt;/p&gt;
&lt;p&gt;No, I don't want Twitter's app to access my contacts, thanks; I'm more
than capable of finding people on Twitter directly. No, there's no
reason for Soundhound to know where I am. No, even if my phone &lt;strong&gt;had&lt;/strong&gt;
NFC, I don't want F-Droid to be able to use it.&lt;/p&gt;
&lt;p&gt;The assessment
&lt;a href="http://www.cnet.com/news/why-android-wont-be-getting-app-ops-anytime-soon/"&gt;here&lt;/a&gt;
is that one big reason for the removal of App Ops is due to it breaking
apps. I disagree with that though. Using XPrivacy, I restrict almost
every app and haven't had any trouble.&lt;/p&gt;
&lt;p&gt;I can understand that if app permission controls were enabled by
default, there's the possibility that it could cause problems for users
that don't understand the implications of allowing/denying permissions,
but if it was something like the developer options where you have to
deliberately enable it, then they wouldn't even know it was present.&lt;/p&gt;
&lt;p&gt;Anyway, here are the reference notes I made while upgrading for (the
inevitable) next time.&lt;/p&gt;
&lt;h2&gt;Preliminary setup with Ubuntu&lt;/h2&gt;
&lt;p&gt;(or your choice of a Linux that has &lt;code&gt;adb&lt;/code&gt; and &lt;code&gt;fastboot&lt;/code&gt;)&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Install (to a live USB, or use an existing install on your laptop)&lt;/li&gt;
&lt;li&gt;Enable third party repositories in "Software and Updates".&lt;/li&gt;
&lt;li&gt;Do &lt;code&gt;sudo apt-get update&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo apt-get install android-tools-adb android-tools-fastboot&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;Backup data from phone&lt;/h2&gt;
&lt;p&gt;Copy off any photos, documents or other files you want to save.&lt;/p&gt;
&lt;p&gt;If you want to backup your call logs and text messages, Call Logs Backup
and Restore, and SMS Backup and Restore work pretty well for me. That
said, they do request internet permissions which I block.&lt;/p&gt;
&lt;h2&gt;Restore stock firmware&lt;/h2&gt;
&lt;p&gt;Stock firmwares are available
&lt;a href="http://sbf.droid-developers.org/phone.php?device=14"&gt;here&lt;/a&gt; and &lt;a href="http://forum.xda-developers.com/showthread.php?t=2542219"&gt;this
post&lt;/a&gt; was a
useful reference.&lt;/p&gt;
&lt;p&gt;Boot into the bootloader using power on and volume down key (or enable
USB debugging mode when the phone's on normally and do
&lt;code&gt;adb reboot-bootloader&lt;/code&gt;).&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo fastboot flash partition gpt.bin
sudo fastboot flash motoboot motoboot.img
sudo fastboot flash logo logo.bin
sudo fastboot flash boot boot.img
sudo fastboot flash recovery recovery.img
sudo fastboot flash system system.img_sparsechunk1
sudo fastboot flash system system.img_sparsechunk2
sudo fastboot flash system system.img_sparsechunk3
sudo fastboot flash modem NON-HLOS.bin
sudo fastboot erase modemst1
sudo fastboot erase modemst2
sudo fastboot flash fsg fsg.mbn
sudo fastboot erase cache
sudo fastboot erase userdata
sudo fastboot reboot
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;(sparsechunk files may have numbers 0, 1, 2 - just flash them in
ascending order.)&lt;/p&gt;
&lt;h2&gt;Upgrade&lt;/h2&gt;
&lt;p&gt;Boot into stock and install update.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;To avoid heartache&lt;/strong&gt;, make sure you check for system updates
&lt;strong&gt;after&lt;/strong&gt; you update, and install any further updates before
proceeding. Repeat until no update is found. Otherwise, like me, you may
discover after rooting again that there are still updates remaining
after the first one. In that case, you'll have to restore to stock again
:( (I was on 4.4.2, but there was a minor update that didn't change the
version before the latest 4.4.4 update.)&lt;/p&gt;
&lt;h2&gt;Unlock bootloader&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt; Only needed if not previously unlocked; while restoring stock
firmware and upgrading, this didn't get relocked. &lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;You need a bootloader unlock code from Motorola's
&lt;a href="https://motorola-global-portal.custhelp.com/app/standalone/bootloader/unlock-your-device-a"&gt;site&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;fastboot oem unlock
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Boot into fastboot mode: Enable developer mode again in settings:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;adb reboot bootloader
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Optional: get a copy of the original Motorola logo and do:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo fastboot flash logo original_logo.bin
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;to remove the annoying "bootloader is unlocked" warning at boot.&lt;/p&gt;
&lt;p&gt;See &lt;a href="http://wiki.cyanogenmod.org/w/Template:Unlock_Bootloader"&gt;CyanogenMod's
site&lt;/a&gt; for more
details.&lt;/p&gt;
&lt;h2&gt;Install custom recovery&lt;/h2&gt;
&lt;p&gt;Get custom recovery; &lt;a href="http://teamw.in/project/twrp2/233"&gt;I used TWRP&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Get a recent fastboot .img; at the time of writing, 2.7.1.1 was the
latest, but didn't work. 2.7.1.0 worked fine.&lt;/p&gt;
&lt;p&gt;Install through bootloader using fastboot:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo fastboot flash recovery modified_recovery.img
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Root the phone by installing SuperSU&lt;/h2&gt;
&lt;p&gt;Boot from bootloader into TWRP recovery. Reboot system, say yes to
install SuperSU.&lt;/p&gt;
&lt;p&gt;Boot up, run SuperSU installer; go to Play Store and choose &lt;strong&gt;update&lt;/strong&gt;
(&lt;strong&gt;not&lt;/strong&gt; open).&lt;/p&gt;
&lt;p&gt;This will probably prompt to install a new binary; the normal install
should work fine.&lt;/p&gt;
&lt;h2&gt;Install XPrivacy&lt;/h2&gt;
&lt;p&gt;Install XPrivacy installer. Follow each of the several instruction steps
that are shown when you run it.&lt;/p&gt;
&lt;h2&gt;Encrypt and change password again&lt;/h2&gt;
&lt;p&gt;Create a screen lock PIN or password, then fully charge battery and
encrypt.&lt;/p&gt;
&lt;p&gt;Change the password using &lt;a href="https://play.google.com/store/apps/details?id=org.nick.cryptfs.passwdmanager&amp;amp;hl=en"&gt;Cryptfs
Password&lt;/a&gt;
so that you can have a separate screen unlock code and encryption passphrase.&lt;/p&gt;
&lt;p&gt;(This is another good reason to root your phone. Without this, your
encryption password is identical to your screen unlock code. Unless you
want to have either:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;a weak password, or&lt;/li&gt;
&lt;li&gt;a huge password that you have to enter every time you unlock your phone&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;you'll need to change it using CryptFS which requires root access.)&lt;/p&gt;
&lt;h2&gt;Disable all the slow animations&lt;/h2&gt;
&lt;p&gt;To make Android snappier, disable the animations by enabling the
developer options. Go in Settings &gt; About phone, scroll to the bottom
and keep pressing build number until it tells you the developer options
are active. Now, in Settings &gt; Developer options, you can set "Window
animation scale", "Transition animation scale" and "Animator duration
scale" all to off.&lt;/p&gt;
&lt;h2&gt;Restore data, account, messages, call logs&lt;/h2&gt;
&lt;p&gt;Reinstall SMS Backup and Restore, Call Log Backup and Restore, and
restore the backups you made. Reinstall any other apps you want,
including &lt;a href="https://f-droid.org/"&gt;F-Droid&lt;/a&gt; if you want AdAway and that's
everything finally done. No more nagging for updates!&lt;/p&gt;</summary><category term="Moto"></category><category term="firmware"></category><category term="upgrade"></category><category term="Android"></category><category term="system"></category><category term="root"></category></entry></feed>